// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Core.Entities.Oacis;

namespace Infrastructure.Data.Oacis
{
    public partial class MyDhrOacisContext : DbContext
    {
        public MyDhrOacisContext()
        {
        }

        public MyDhrOacisContext(DbContextOptions<MyDhrOacisContext> options)
            : base(options)
        {
        }

        public virtual DbSet<ADDRESS> ADDRESS { get; set; }
        public virtual DbSet<ALIEN_STATUS> ALIEN_STATUS { get; set; }
        public virtual DbSet<ARCHIVE_APPLICATION> ARCHIVE_APPLICATION { get; set; }
        public virtual DbSet<ARCHIVE_APPLICATION_STATUS> ARCHIVE_APPLICATION_STATUS { get; set; }
        public virtual DbSet<ARCHIVE_CHILD_SUPPORT> ARCHIVE_CHILD_SUPPORT { get; set; }
        public virtual DbSet<ARCHIVE_DEPENDENT_CARE> ARCHIVE_DEPENDENT_CARE { get; set; }
        public virtual DbSet<ARCHIVE_EMPLOYMENT> ARCHIVE_EMPLOYMENT { get; set; }
        public virtual DbSet<ARCHIVE_FELON> ARCHIVE_FELON { get; set; }
        public virtual DbSet<ARCHIVE_LIQUIDRESOURCE> ARCHIVE_LIQUIDRESOURCE { get; set; }
        public virtual DbSet<ARCHIVE_MEDICAL_EXP> ARCHIVE_MEDICAL_EXP { get; set; }
        public virtual DbSet<ARCHIVE_MEMBERS> ARCHIVE_MEMBERS { get; set; }
        public virtual DbSet<ARCHIVE_MIGRANTWORKER> ARCHIVE_MIGRANTWORKER { get; set; }
        public virtual DbSet<ARCHIVE_MULTIPLEHH> ARCHIVE_MULTIPLEHH { get; set; }
        public virtual DbSet<ARCHIVE_PAROLE> ARCHIVE_PAROLE { get; set; }
        public virtual DbSet<ARCHIVE_ROOMERBOARDER> ARCHIVE_ROOMERBOARDER { get; set; }
        public virtual DbSet<ARCHIVE_SELF_EMPLOYMENT> ARCHIVE_SELF_EMPLOYMENT { get; set; }
        public virtual DbSet<ARCHIVE_SHELTER_EXP> ARCHIVE_SHELTER_EXP { get; set; }
        public virtual DbSet<ARCHIVE_SOU> ARCHIVE_SOU { get; set; }
        public virtual DbSet<ARCHIVE_STAMPSFRAUD> ARCHIVE_STAMPSFRAUD { get; set; }
        public virtual DbSet<ARCHIVE_STAMPSTRAFFICKING> ARCHIVE_STAMPSTRAFFICKING { get; set; }
        public virtual DbSet<ARCHIVE_STAMPSWEAPONS> ARCHIVE_STAMPSWEAPONS { get; set; }
        public virtual DbSet<ARCHIVE_STRIKER> ARCHIVE_STRIKER { get; set; }
        public virtual DbSet<ARCHIVE_STUDENT> ARCHIVE_STUDENT { get; set; }
        public virtual DbSet<ARCHIVE_UNEARNED_INC> ARCHIVE_UNEARNED_INC { get; set; }
        public virtual DbSet<ARCHIVE_UTILITY_EXP> ARCHIVE_UTILITY_EXP { get; set; }
        public virtual DbSet<ARCHIVE_VOLUNTARYQUIT> ARCHIVE_VOLUNTARYQUIT { get; set; }
        public virtual DbSet<ARREARS_CS> ARREARS_CS { get; set; }
        public virtual DbSet<AR_RPRSNTTV> AR_RPRSNTTV { get; set; }
        public virtual DbSet<ASPStateTempApplications> ASPStateTempApplications { get; set; }
        public virtual DbSet<ASPStateTempSessions> ASPStateTempSessions { get; set; }
        public virtual DbSet<AU_ADDRESS> AU_ADDRESS { get; set; }
        public virtual DbSet<AU_ARREARS_CS> AU_ARREARS_CS { get; set; }
        public virtual DbSet<AU_CASE> AU_CASE { get; set; }
        public virtual DbSet<AU_CASEACTION> AU_CASEACTION { get; set; }
        public virtual DbSet<AU_CASELOG> AU_CASELOG { get; set; }
        public virtual DbSet<AU_CASE_STATUS> AU_CASE_STATUS { get; set; }
        public virtual DbSet<AU_COURT_ORDERED_AMOUNT> AU_COURT_ORDERED_AMOUNT { get; set; }
        public virtual DbSet<AU_CS_AMOUNT> AU_CS_AMOUNT { get; set; }
        public virtual DbSet<AU_DEPENDENT> AU_DEPENDENT { get; set; }
        public virtual DbSet<AU_DEPENDENT_CARE> AU_DEPENDENT_CARE { get; set; }
        public virtual DbSet<AU_EMPLOYMENT> AU_EMPLOYMENT { get; set; }
        public virtual DbSet<AU_INSURANCE> AU_INSURANCE { get; set; }
        public virtual DbSet<AU_LOGINRCD> AU_LOGINRCD { get; set; }
        public virtual DbSet<AU_MEAL> AU_MEAL { get; set; }
        public virtual DbSet<AU_MEDICAL_EXPENSE> AU_MEDICAL_EXPENSE { get; set; }
        public virtual DbSet<AU_MEMBER> AU_MEMBER { get; set; }
        public virtual DbSet<AU_MEMBER_TRNSFR_RSRC> AU_MEMBER_TRNSFR_RSRC { get; set; }
        public virtual DbSet<AU_NACLOG> AU_NACLOG { get; set; }
        public virtual DbSet<AU_OACIS> AU_OACIS { get; set; }
        public virtual DbSet<AU_PUBLIC_HEALTH> AU_PUBLIC_HEALTH { get; set; }
        public virtual DbSet<AU_RESOURCE> AU_RESOURCE { get; set; }
        public virtual DbSet<AU_ROOM> AU_ROOM { get; set; }
        public virtual DbSet<AU_SECURITY> AU_SECURITY { get; set; }
        public virtual DbSet<AU_SEMIANNUAL> AU_SEMIANNUAL { get; set; }
        public virtual DbSet<AU_SHELTER_EXPENSE> AU_SHELTER_EXPENSE { get; set; }
        public virtual DbSet<AU_SPECIAL_REOPEN> AU_SPECIAL_REOPEN { get; set; }
        public virtual DbSet<AU_STRIKE> AU_STRIKE { get; set; }
        public virtual DbSet<AU_STUDENT> AU_STUDENT { get; set; }
        public virtual DbSet<AU_TRIPS> AU_TRIPS { get; set; }
        public virtual DbSet<AU_UNEARNED_INCOME> AU_UNEARNED_INCOME { get; set; }
        public virtual DbSet<AU_UTILITY_EXPENSE> AU_UTILITY_EXPENSE { get; set; }
        public virtual DbSet<AU_VOTER> AU_VOTER { get; set; }
        public virtual DbSet<AU_VOTER_POPUP> AU_VOTER_POPUP { get; set; }
        public virtual DbSet<CASE> CASE { get; set; }
        public virtual DbSet<CASE_BUDDY> CASE_BUDDY { get; set; }
        public virtual DbSet<CASE_NOTES> CASE_NOTES { get; set; }
        public virtual DbSet<CASE_NOTES_TEST> CASE_NOTES_TEST { get; set; }
        public virtual DbSet<CASE_STATUS> CASE_STATUS { get; set; }
        public virtual DbSet<CASE_WORKFLOW> CASE_WORKFLOW { get; set; }
        public virtual DbSet<COURT_ORDERED_AMOUNT> COURT_ORDERED_AMOUNT { get; set; }
        public virtual DbSet<COVERED_ITEMS> COVERED_ITEMS { get; set; }
        public virtual DbSet<CS_AMOUNT> CS_AMOUNT { get; set; }
        public virtual DbSet<CS_DPNDNTS> CS_DPNDNTS { get; set; }
        public virtual DbSet<CS_PAYER_RECIPIENT> CS_PAYER_RECIPIENT { get; set; }
        public virtual DbSet<CS_PAYMENTS> CS_PAYMENTS { get; set; }
        public virtual DbSet<DEPENDENT_CARE> DEPENDENT_CARE { get; set; }
        public virtual DbSet<DEPENDENT_CARE_OTHER_PAYER> DEPENDENT_CARE_OTHER_PAYER { get; set; }
        public virtual DbSet<DISASTER> DISASTER { get; set; }
        public virtual DbSet<DISASTER_COUNTIES> DISASTER_COUNTIES { get; set; }
        public virtual DbSet<EMPLOYER> EMPLOYER { get; set; }
        public virtual DbSet<EMPLOYMENT> EMPLOYMENT { get; set; }
        public virtual DbSet<FA_STATUS> FA_STATUS { get; set; }
        public virtual DbSet<FORMS_OACIS> FORMS_OACIS { get; set; }
        public virtual DbSet<FORM_657> FORM_657 { get; set; }
        public virtual DbSet<FORM_879> FORM_879 { get; set; }
        public virtual DbSet<FORM_APPOINTMENT> FORM_APPOINTMENT { get; set; }
        public virtual DbSet<INSURANCE> INSURANCE { get; set; }
        public virtual DbSet<INSURANCE_OTHER_PAYER> INSURANCE_OTHER_PAYER { get; set; }
        public virtual DbSet<ISSUANCE> ISSUANCE { get; set; }
        public virtual DbSet<LOGIN> LOGIN { get; set; }
        public virtual DbSet<MAINFRAME_SECURITY> MAINFRAME_SECURITY { get; set; }
        public virtual DbSet<MEAL> MEAL { get; set; }
        public virtual DbSet<MEAL_OTHER> MEAL_OTHER { get; set; }
        public virtual DbSet<MEDICAL_EXPENSE> MEDICAL_EXPENSE { get; set; }
        public virtual DbSet<MEDICAL_EXPENSE_ONGOING> MEDICAL_EXPENSE_ONGOING { get; set; }
        public virtual DbSet<MEDICAL_EXPENSE_OTHER_PAYER> MEDICAL_EXPENSE_OTHER_PAYER { get; set; }
        public virtual DbSet<MEDICAL_NOTES> MEDICAL_NOTES { get; set; }
        public virtual DbSet<MEMBER> MEMBER { get; set; }
        public virtual DbSet<MEMBER_TRNSFR_RSRC> MEMBER_TRNSFR_RSRC { get; set; }
        public virtual DbSet<NAC_MATCH> NAC_MATCH { get; set; }
        public virtual DbSet<OACIS_CASE_BEING_WORKED> OACIS_CASE_BEING_WORKED { get; set; }
        public virtual DbSet<OACIS_ERRORS> OACIS_ERRORS { get; set; }
        public virtual DbSet<OLE_DB_Destination> OLE_DB_Destination { get; set; }
        public virtual DbSet<OUTSIDE_DEPENDENT> OUTSIDE_DEPENDENT { get; set; }
        public virtual DbSet<PIV_MMBR_RLTN> PIV_MMBR_RLTN { get; set; }
        public virtual DbSet<Query> Query { get; set; }
        public virtual DbSet<REF_ADDRESS_TYPE> REF_ADDRESS_TYPE { get; set; }
        public virtual DbSet<REF_CASE_CTGRY> REF_CASE_CTGRY { get; set; }
        public virtual DbSet<REF_CASE_STATUS_TYPE> REF_CASE_STATUS_TYPE { get; set; }
        public virtual DbSet<REF_CERT_ELIG> REF_CERT_ELIG { get; set; }
        public virtual DbSet<REF_CNTY_ADDRESS> REF_CNTY_ADDRESS { get; set; }
        public virtual DbSet<REF_COUNTY_GROUP_EMAIL> REF_COUNTY_GROUP_EMAIL { get; set; }
        public virtual DbSet<REF_COUNTY_STATE> REF_COUNTY_STATE { get; set; }
        public virtual DbSet<REF_COURT_ORDERED_TYPE> REF_COURT_ORDERED_TYPE { get; set; }
        public virtual DbSet<REF_DEPENDENT_CARE_LIMIT> REF_DEPENDENT_CARE_LIMIT { get; set; }
        public virtual DbSet<REF_DHR_EMPLOYEE> REF_DHR_EMPLOYEE { get; set; }
        public virtual DbSet<REF_EARNED_INCOME_TYPE> REF_EARNED_INCOME_TYPE { get; set; }
        public virtual DbSet<REF_EBT_CHCK> REF_EBT_CHCK { get; set; }
        public virtual DbSet<REF_ERR_CODE> REF_ERR_CODE { get; set; }
        public virtual DbSet<REF_EXCESS_RESOURCE_LIMIT> REF_EXCESS_RESOURCE_LIMIT { get; set; }
        public virtual DbSet<REF_FEDERAL_MILEAGE_RATE> REF_FEDERAL_MILEAGE_RATE { get; set; }
        public virtual DbSet<REF_FORMS> REF_FORMS { get; set; }
        public virtual DbSet<REF_FREQUENCY> REF_FREQUENCY { get; set; }
        public virtual DbSet<REF_HOLIDAY_DATES> REF_HOLIDAY_DATES { get; set; }
        public virtual DbSet<REF_IEVS_TRAK> REF_IEVS_TRAK { get; set; }
        public virtual DbSet<REF_INACTIVE_SCIII> REF_INACTIVE_SCIII { get; set; }
        public virtual DbSet<REF_INCOME_LIMIT> REF_INCOME_LIMIT { get; set; }
        public virtual DbSet<REF_INSRNC_PAYER> REF_INSRNC_PAYER { get; set; }
        public virtual DbSet<REF_INSTRUCTIONS> REF_INSTRUCTIONS { get; set; }
        public virtual DbSet<REF_MEDICAL_LIMIT> REF_MEDICAL_LIMIT { get; set; }
        public virtual DbSet<REF_MEDICAL_NOTE_TYPE> REF_MEDICAL_NOTE_TYPE { get; set; }
        public virtual DbSet<REF_MEDICATION_APPLIANCE> REF_MEDICATION_APPLIANCE { get; set; }
        public virtual DbSet<REF_MESSAGE> REF_MESSAGE { get; set; }
        public virtual DbSet<REF_NOTICE_TYPE> REF_NOTICE_TYPE { get; set; }
        public virtual DbSet<REF_OACIS_MODULE> REF_OACIS_MODULE { get; set; }
        public virtual DbSet<REF_OBLIGATION_REASON> REF_OBLIGATION_REASON { get; set; }
        public virtual DbSet<REF_PAST_DUE_RSN> REF_PAST_DUE_RSN { get; set; }
        public virtual DbSet<REF_PAY_DATES> REF_PAY_DATES { get; set; }
        public virtual DbSet<REF_PAY_TYPE> REF_PAY_TYPE { get; set; }
        public virtual DbSet<REF_PROVIDER_NAME> REF_PROVIDER_NAME { get; set; }
        public virtual DbSet<REF_PROVIDER_TYPE> REF_PROVIDER_TYPE { get; set; }
        public virtual DbSet<REF_RACE> REF_RACE { get; set; }
        public virtual DbSet<REF_RELATION> REF_RELATION { get; set; }
        public virtual DbSet<REF_RESOURCE_LIMIT> REF_RESOURCE_LIMIT { get; set; }
        public virtual DbSet<REF_RESOURCE_TYPE> REF_RESOURCE_TYPE { get; set; }
        public virtual DbSet<REF_RESTORATION_REASON_TYPE> REF_RESTORATION_REASON_TYPE { get; set; }
        public virtual DbSet<REF_RJCTN_DNL_TERM> REF_RJCTN_DNL_TERM { get; set; }
        public virtual DbSet<REF_SANCTION_REASON> REF_SANCTION_REASON { get; set; }
        public virtual DbSet<REF_SANCTION_TYPE> REF_SANCTION_TYPE { get; set; }
        public virtual DbSet<REF_SCI2_ERRORS> REF_SCI2_ERRORS { get; set; }
        public virtual DbSet<REF_SECURITY> REF_SECURITY { get; set; }
        public virtual DbSet<REF_SHELTER_DWELLING_TYPE> REF_SHELTER_DWELLING_TYPE { get; set; }
        public virtual DbSet<REF_SHELTER_EXPENSE_TYPE> REF_SHELTER_EXPENSE_TYPE { get; set; }
        public virtual DbSet<REF_SHELTER_NOTES_OTHER> REF_SHELTER_NOTES_OTHER { get; set; }
        public virtual DbSet<REF_SHELTER_OWNERSHIP> REF_SHELTER_OWNERSHIP { get; set; }
        public virtual DbSet<REF_SPCL_REOPEN_RSN> REF_SPCL_REOPEN_RSN { get; set; }
        public virtual DbSet<REF_STATE> REF_STATE { get; set; }
        public virtual DbSet<REF_TFP_LIMIT> REF_TFP_LIMIT { get; set; }
        public virtual DbSet<REF_UNEARNED_PAYER_TYPE> REF_UNEARNED_PAYER_TYPE { get; set; }
        public virtual DbSet<REF_UNEARNED_SUBTYPE> REF_UNEARNED_SUBTYPE { get; set; }
        public virtual DbSet<REF_UNEARNED_TYPE> REF_UNEARNED_TYPE { get; set; }
        public virtual DbSet<REF_UTILITY_DEDUCTION> REF_UTILITY_DEDUCTION { get; set; }
        public virtual DbSet<REF_UTILITY_TYPE> REF_UTILITY_TYPE { get; set; }
        public virtual DbSet<REF_VERIFICATION_DETAIL> REF_VERIFICATION_DETAIL { get; set; }
        public virtual DbSet<REF_VERIFICATION_SUBTYPE> REF_VERIFICATION_SUBTYPE { get; set; }
        public virtual DbSet<REF_VERIFICATION_TYPE> REF_VERIFICATION_TYPE { get; set; }
        public virtual DbSet<REF_VOTER_ANS> REF_VOTER_ANS { get; set; }
        public virtual DbSet<REF_WAIVE_ADVERSE_ACTION> REF_WAIVE_ADVERSE_ACTION { get; set; }
        public virtual DbSet<REF_WELCOME_MESSAGE> REF_WELCOME_MESSAGE { get; set; }
        public virtual DbSet<REF_WORK_REG_CODE> REF_WORK_REG_CODE { get; set; }
        public virtual DbSet<REGISTER_APPLICATION> REGISTER_APPLICATION { get; set; }
        public virtual DbSet<REGISTER_APPLICATION_STATUS> REGISTER_APPLICATION_STATUS { get; set; }
        public virtual DbSet<REGISTER_CHILD_SUPPORT> REGISTER_CHILD_SUPPORT { get; set; }
        public virtual DbSet<REGISTER_DEPENDENT_CARE> REGISTER_DEPENDENT_CARE { get; set; }
        public virtual DbSet<REGISTER_DONOTAPPLY> REGISTER_DONOTAPPLY { get; set; }
        public virtual DbSet<REGISTER_DONOTAPPLY_OLD> REGISTER_DONOTAPPLY_OLD { get; set; }
        public virtual DbSet<REGISTER_DUPLICATEBENEFITS> REGISTER_DUPLICATEBENEFITS { get; set; }
        public virtual DbSet<REGISTER_EMPLOYMENT> REGISTER_EMPLOYMENT { get; set; }
        public virtual DbSet<REGISTER_FELON> REGISTER_FELON { get; set; }
        public virtual DbSet<REGISTER_LIQUIDRESOURCE> REGISTER_LIQUIDRESOURCE { get; set; }
        public virtual DbSet<REGISTER_MEDICAL_EXP> REGISTER_MEDICAL_EXP { get; set; }
        public virtual DbSet<REGISTER_MEMBERS> REGISTER_MEMBERS { get; set; }
        public virtual DbSet<REGISTER_MIGRANTWORKER> REGISTER_MIGRANTWORKER { get; set; }
        public virtual DbSet<REGISTER_MULTIPLEHH> REGISTER_MULTIPLEHH { get; set; }
        public virtual DbSet<REGISTER_PAROLE> REGISTER_PAROLE { get; set; }
        public virtual DbSet<REGISTER_ROOMERBOARDER> REGISTER_ROOMERBOARDER { get; set; }
        public virtual DbSet<REGISTER_SELF_EMPLOYMENT> REGISTER_SELF_EMPLOYMENT { get; set; }
        public virtual DbSet<REGISTER_SHELTER_EXP> REGISTER_SHELTER_EXP { get; set; }
        public virtual DbSet<REGISTER_SOU> REGISTER_SOU { get; set; }
        public virtual DbSet<REGISTER_STAMPSFRAUD> REGISTER_STAMPSFRAUD { get; set; }
        public virtual DbSet<REGISTER_STAMPSTRAFFICKING> REGISTER_STAMPSTRAFFICKING { get; set; }
        public virtual DbSet<REGISTER_STAMPSWEAPONS> REGISTER_STAMPSWEAPONS { get; set; }
        public virtual DbSet<REGISTER_STRIKER> REGISTER_STRIKER { get; set; }
        public virtual DbSet<REGISTER_STUDENT> REGISTER_STUDENT { get; set; }
        public virtual DbSet<REGISTER_UNEARNED_INC> REGISTER_UNEARNED_INC { get; set; }
        public virtual DbSet<REGISTER_UTILITY_EXP> REGISTER_UTILITY_EXP { get; set; }
        public virtual DbSet<REGISTER_UTILITY_EXPENSE> REGISTER_UTILITY_EXPENSE { get; set; }
        public virtual DbSet<REGISTER_VOLUNTARYQUIT> REGISTER_VOLUNTARYQUIT { get; set; }
        public virtual DbSet<REG_CASE> REG_CASE { get; set; }
        public virtual DbSet<REG_CASEMBRS> REG_CASEMBRS { get; set; }
        public virtual DbSet<REPORTING> REPORTING { get; set; }
        public virtual DbSet<REQUEST_AUTHORIZITION> REQUEST_AUTHORIZITION { get; set; }
        public virtual DbSet<RESOURCE> RESOURCE { get; set; }
        public virtual DbSet<RESTORATION> RESTORATION { get; set; }
        public virtual DbSet<ROOM> ROOM { get; set; }
        public virtual DbSet<SANCTION> SANCTION { get; set; }
        public virtual DbSet<SCI2SYNCH> SCI2SYNCH { get; set; }
        public virtual DbSet<SCI2_CASE_DATA> SCI2_CASE_DATA { get; set; }
        public virtual DbSet<SCI2_ERRORS> SCI2_ERRORS { get; set; }
        public virtual DbSet<SCI2_ISSUNCE> SCI2_ISSUNCE { get; set; }
        public virtual DbSet<SCI2_MMBR_DATA> SCI2_MMBR_DATA { get; set; }
        public virtual DbSet<SECURITY> SECURITY { get; set; }
        public virtual DbSet<SHELTER_EXPENSE> SHELTER_EXPENSE { get; set; }
        public virtual DbSet<SHELTER_EXPENSE_OTHER_PAYER> SHELTER_EXPENSE_OTHER_PAYER { get; set; }
        public virtual DbSet<SMRY_MEDICAL_EXPENSE> SMRY_MEDICAL_EXPENSE { get; set; }
        public virtual DbSet<STRIKE> STRIKE { get; set; }
        public virtual DbSet<STTS_REPORTING> STTS_REPORTING { get; set; }
        public virtual DbSet<STTS_REPORTING_DSNAP> STTS_REPORTING_DSNAP { get; set; }
        public virtual DbSet<STUDENT> STUDENT { get; set; }
        public virtual DbSet<TANF_MMBR_INCLUDED> TANF_MMBR_INCLUDED { get; set; }
        public virtual DbSet<TRIP> TRIP { get; set; }
        public virtual DbSet<UA_EarnedIncomeByCase> UA_EarnedIncomeByCase { get; set; }
        public virtual DbSet<UA_UnearnedIncomeByCase> UA_UnearnedIncomeByCase { get; set; }
        public virtual DbSet<UNEARNED_INCOME> UNEARNED_INCOME { get; set; }
        public virtual DbSet<UNEARNED_PAYER> UNEARNED_PAYER { get; set; }
        public virtual DbSet<UPDATE_NOTICE_TYPE> UPDATE_NOTICE_TYPE { get; set; }
        public virtual DbSet<UTILITY_EXPENSE> UTILITY_EXPENSE { get; set; }
        public virtual DbSet<UTILITY_EXPENSE_OTHER_PAYER> UTILITY_EXPENSE_OTHER_PAYER { get; set; }
        public virtual DbSet<WAIVE_ADVERSE_ACTION> WAIVE_ADVERSE_ACTION { get; set; }
        public virtual DbSet<WORKER_REMINDER> WORKER_REMINDER { get; set; }
        public virtual DbSet<manycolumns> manycolumns { get; set; }


        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=WS-SMULHALL;Initial Catalog=MyDHR.OACIS;Integrated Security=True");
            }
        }


        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ADDRESS>(entity =>
            {
                entity.HasKey(e => e.ID_ADDRSS);

                entity.HasIndex(e => new { e.ID_MMBR, e.ID_REF_ADDRSS_TYPE }, "_dta_index_ADDRESS_5_689437530__K3_K6");

                entity.HasIndex(e => new { e.ID_MMBR, e.ID_REF_ADDRSS_TYPE, e.ID_ADDRSS, e.ID_CNTY_STATE, e.AD_STREET1, e.AD_STREET2, e.AD_CITY, e.AD_STATE, e.AD_ZIP, e.AD_ZIP_4 }, "_dta_index_ADDRESS_5_689437530__K3_K6_K1_K2_K7_K8_K9_K10_K11_K12");

                entity.Property(e => e.AD_CITY)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AD_STATE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AD_STREET1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AD_STREET2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AD_ZIP)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AD_ZIP_4)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_REF_ADDRSS_TYPE).HasColumnType("numeric(2, 0)");

                entity.HasOne(d => d.ID_CNTY_STATENavigation)
                    .WithMany(p => p.ADDRESS)
                    .HasForeignKey(d => d.ID_CNTY_STATE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FADRS04");

                entity.HasOne(d => d.ID_EMPLYMNTNavigation)
                    .WithMany(p => p.ADDRESS)
                    .HasForeignKey(d => d.ID_EMPLYMNT)
                    .HasConstraintName("FADRS01");

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.ADDRESS)
                    .HasForeignKey(d => d.ID_MMBR)
                    .HasConstraintName("FADRS03");

                entity.HasOne(d => d.ID_PRVDR_NAMENavigation)
                    .WithMany(p => p.ADDRESS)
                    .HasForeignKey(d => d.ID_PRVDR_NAME)
                    .HasConstraintName("FADRS02");

                entity.HasOne(d => d.ID_REF_ADDRSS_TYPENavigation)
                    .WithMany(p => p.ADDRESS)
                    .HasForeignKey(d => d.ID_REF_ADDRSS_TYPE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FADRS05");
            });

            modelBuilder.Entity<ALIEN_STATUS>(entity =>
            {
                entity.HasKey(e => e.ID_ALIEN_STATUS);

                entity.Property(e => e.CD_ALIEN_RGSTRTN)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_FS_SCTN_207)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_FS_SCTN_208)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_FS_SCTN_241)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_FS_SCTN_501)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_FS_SCTN_584)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_NONQAIND_ABENAKI)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_NONQAIND_ACT25_USC450)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_NONQAIND_AMRCN_INDIAN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_NONQAIND_HMONG)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_NONQAIND_KICKAPOO)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_NONQAIND_LAO)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_NONQAIND_MICMAC)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_NONQAIND_ST_REGIS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_QAIND_LPR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_QAIND_MLTRY_CNNCTN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_QAIND_US_BNFTS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_QAIND_US_QA__5)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_QAIND_US__18)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_QAIND_US___65)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_QA_LPR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_QA_SCTN_203)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_QA_SCTN_204)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_QA_SCTN_207)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_QA_SCTN_208)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_QA_SCTN_212)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_QA_SCTN_241)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_QA_SCTN_501)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.ALIEN_STATUS)
                    .HasForeignKey(d => d.ID_MMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FALST01");
            });

            modelBuilder.Entity<ARCHIVE_APPLICATION>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => e.ID_NEWCASE, "UQ__ARCHIVE_APPLICAT__552D1E70")
                    .IsUnique();

                entity.Property(e => e.ALL_AUTH_REP_FIRST_NAME)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_AUTH_REP_LAST_NAME)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_AUTH_REP_MIDDLE_NAME)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_AUTH_REP_PHONE_NUMBER)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_EBT_REP_FIRST_NAME)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_EBT_REP_LAST_NAME)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_EBT_REP_MIDDLE_NAME)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_EBT_REP_PHONE_NUMBER)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_MAILING_ADDR1)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_MAILING_ADDR2)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_MAILING_CITY)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_MAILING_COUNTY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ALL_MAILING_STATE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ALL_MAILING_ZIP)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ALL_MAILING_ZIP4)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ALL_RESIDENCE_ADDR1)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_RESIDENCE_ADDR2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_RESIDENCE_CITY)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_RESIDENCE_COUNTY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ALL_RESIDENCE_OFFICE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ALL_RESIDENCE_STATE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ALL_RESIDENCE_ZIP)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ALL_RESIDENCE_ZIP4)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_LANGUAGE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_REGISTRATION_STATUS)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_REGISTRATION_STATUS_SENT)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_SOURCE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.COUNTY_OFFICE)
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.COUNTY_SUBMIT)
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.DATE_AWARD)
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.DATE_DELETION)
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.DATE_DENY)
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.DATE_ERROR)
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.DATE_NOMA)
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.DATE_OACIS_INTERVIEW)
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.DATE_REGISTRATION)
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.DATE_VERIFICATION_PENDING)
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.DHR_APPLICATION_ID)
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_APPLICATION_TYPE)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_CELL_NUMBER)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_EMAIL_ADDRESS)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_HOME_PHONE_NUMBER)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_MESSAGE_PHONE_NUMBER)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_SIGNED_DATE)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DHR_START_DATE)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DHR_SUBMIT_TO_COUNTY_OFFICE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DHR_WORK_PHONE_NUMBER)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.DT_CASE_APPTDATETIME).HasColumnType("datetime");

                entity.Property(e => e.DT_REGISTRATION_CREATIED).HasColumnType("datetime");

                entity.Property(e => e.DT_REGISTRATION_MODIFIED).HasColumnType("datetime");

                entity.Property(e => e.DT_REGISTRATION_STATUS).HasColumnType("datetime");

                entity.Property(e => e.DT_REGISTRATION_STATUS_SENT).HasColumnType("datetime");

                entity.Property(e => e.FL_ACTIVE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_APPTMADE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_ARCHIVE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_EXPEDITED)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_OFFICEINT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_PHN_INTRVW)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_REGISTRATION_COMPLETE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_USER)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_CASE).HasMaxLength(9);

                entity.Property(e => e.NO_CASE_CHCKDGT)
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.ORIG_ADDRESS)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SCI_ADDR1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_ADDR2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_APPDT)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_APPSTS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_APTDT)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_APTYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_AUTH1)
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_AUTH2)
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_BATTER)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_CASENO)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_CHKDGT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_CITY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_CTYOFF)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_DENY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_DUEDT)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_ERROR_MSG).HasMaxLength(255);

                entity.Property(e => e.SCI_EXPDT)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_HHTYP)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_HOMELS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_NAME)
                    .HasMaxLength(28)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_OFFICE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_PASS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_PROSTD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_RCTYOFF)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_SPECDT)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_TRANDT)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_WORKER)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_ZIP4)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_ZIP5)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TEXT_REGISTRATION_COMMENTS).HasColumnType("text");

                entity.Property(e => e.TX_APPT_NOTES).HasColumnType("ntext");
            });

            modelBuilder.Entity<ARCHIVE_APPLICATION_STATUS>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.APPLICATION_ID)
                    .IsRequired()
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.DT_APPROVED).HasColumnType("datetime");

                entity.Property(e => e.DT_DENIED).HasColumnType("datetime");

                entity.Property(e => e.DT_DOWNLOADED).HasColumnType("datetime");

                entity.Property(e => e.DT_PROCESSING_END).HasColumnType("datetime");

                entity.Property(e => e.DT_PROCESSING_START).HasColumnType("datetime");

                entity.Property(e => e.DT_REGISTERED).HasColumnType("datetime");

                entity.Property(e => e.DT_STATUS_SUBMITTED).HasColumnType("datetime");
            });

            modelBuilder.Entity<ARCHIVE_CHILD_SUPPORT>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.CHILDREN)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PAIDTO_FULLNAME)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PAID_AMOUNT).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.PAY_FREQUENCY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<ARCHIVE_DEPENDENT_CARE>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.AMOUNT).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.PAY_FREQUENCY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SIITER_PHONE)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SITTER_NAME)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ARCHIVE_EMPLOYMENT>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.COMPANY_NAME)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.COMPANY_PHONE_NBR)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.PAY_AMOUNT).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.PAY_FREQUENCY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<ARCHIVE_FELON>(entity =>
            {
                entity.HasNoKey();
            });

            modelBuilder.Entity<ARCHIVE_LIQUIDRESOURCE>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.ADD_INFO_1)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ADD_INFO_2)
                    .HasMaxLength(31)
                    .IsUnicode(false);

                entity.Property(e => e.ADD_INFO_3)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.ADD_INFO_4)
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.AMOUNT_LR).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.TYPE_LR)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ARCHIVE_MEDICAL_EXP>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.EXPENSE_TYPE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EXP_AMOUNT).HasColumnType("decimal(8, 2)");
            });

            modelBuilder.Entity<ARCHIVE_MEMBERS>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => e.ID_NEWMBR, "UQ__ARCHIVE_MEMBERS__571566E2")
                    .IsUnique();

                entity.Property(e => e.CD_INVALID_MEMBER)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DHR_APPLICATION_ID)
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_DOB)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_ETHNICITY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DHR_MEMBER_FIRST_NAME)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_MEMBER_LAST_NAME)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_MEMBER_MIDDLE_NAME)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_MEMBER_SSN)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_MEMBER_SUFFIX_NAME)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_RACE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DHR_RELATIONSHIP)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_SEX)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DHR_USCITIZEN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_HOH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_INVALID_MEMBER)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_DEPNAM)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.SCI_DEPNUM)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_DOB)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_ELIG)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_ERRMSG)
                    .HasMaxLength(79)
                    .IsUnicode(false);

                entity.Property(e => e.SCI_PACASE)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_RACE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_SEX)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_SSN)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_VERIND)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<ARCHIVE_MIGRANTWORKER>(entity =>
            {
                entity.HasNoKey();
            });

            modelBuilder.Entity<ARCHIVE_MULTIPLEHH>(entity =>
            {
                entity.HasNoKey();
            });

            modelBuilder.Entity<ARCHIVE_PAROLE>(entity =>
            {
                entity.HasNoKey();
            });

            modelBuilder.Entity<ARCHIVE_ROOMERBOARDER>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.AMOUNT_PAID).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.PAY_FREQUENCY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<ARCHIVE_SELF_EMPLOYMENT>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.COMPANY_NAME)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.COMPANY_TYPE)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ARCHIVE_SHELTER_EXP>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.AMT_INSRNC).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.AMT_PROP_TAX).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.INSRNC_PAY_FREQUENCY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.LOT_PAY_FREQUENCY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.LOT_RENT).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.RENT_MORTGAGE_AMOUNT).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.SHELTER_PAY_TYPE)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SHELTER_TYPE)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ARCHIVE_SOU>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Q1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q10)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q11)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q12)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q13)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q14)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q15)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q16)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q17)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q18)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q3)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q4)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q5)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q6)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q7)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q8)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q9)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<ARCHIVE_STAMPSFRAUD>(entity =>
            {
                entity.HasNoKey();
            });

            modelBuilder.Entity<ARCHIVE_STAMPSTRAFFICKING>(entity =>
            {
                entity.HasNoKey();
            });

            modelBuilder.Entity<ARCHIVE_STAMPSWEAPONS>(entity =>
            {
                entity.HasNoKey();
            });

            modelBuilder.Entity<ARCHIVE_STRIKER>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.COMPANY_NAME)
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ARCHIVE_STUDENT>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.NAME_OF_SCHOOL)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ARCHIVE_UNEARNED_INC>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.INCOME_TYPE)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.UNEARNED_AMOUNT).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.UNEARNED_FREQUENCY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<ARCHIVE_UTILITY_EXP>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.AIR_CONDITIONING)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ELECTRICITY_AMOUNT).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.GARBAGE_AMOUNT).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.GAS_AMOUNT).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.LHEAP_ANTICIPATED)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.LHEAP_PAYMENT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.OIL_AMOUNT).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.PHONE_AMOUNT).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.WATER).HasColumnType("decimal(8, 2)");
            });

            modelBuilder.Entity<ARCHIVE_VOLUNTARYQUIT>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.COMPANY_NAME)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.COMPANY_PHONE_NUMBER)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.QUIT_DATE)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.QUIT_REASON)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ARREARS_CS>(entity =>
            {
                entity.HasKey(e => e.ID_ARRRS_CS)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_CRT_ORDRD_AMNT, "_dta_index_ARREARS_CS_5_2012586258__K2");

                entity.HasIndex(e => new { e.ID_CRT_ORDRD_AMNT, e.AM_PAID_ARRRS }, "_dta_index_ARREARS_CS_5_2012586258__K2_K4_5");

                entity.Property(e => e.AM_OWED_ARRRS).HasColumnType("money");

                entity.Property(e => e.AM_PAID_ARRRS).HasColumnType("money");

                entity.Property(e => e.ID_FRQNCY_ARRRS).HasColumnType("numeric(2, 0)");

                entity.HasOne(d => d.ID_CRT_ORDRD_AMNTNavigation)
                    .WithMany(p => p.ARREARS_CS)
                    .HasForeignKey(d => d.ID_CRT_ORDRD_AMNT)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FARCS01");
            });

            modelBuilder.Entity<AR_RPRSNTTV>(entity =>
            {
                entity.HasKey(e => e.ID_AR_RPRSNTTV)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_CASE_NMBR, "FARRP02_FK");

                entity.Property(e => e.FL_EBT_RPRSNTTV)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_RPRSNTTV_FRST)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_RPRSNTTV_LAST)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_RPRSNTTV_MDL)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_RPRSNTTV_SFX)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_CASE_NMBRNavigation)
                    .WithMany(p => p.AR_RPRSNTTV)
                    .HasForeignKey(d => d.ID_CASE_NMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FARRP01");
            });

            modelBuilder.Entity<ASPStateTempApplications>(entity =>
            {
                entity.HasKey(e => e.AppId)
                    .HasName("PK__ASPState__8E2CF7F95E817E80");

                entity.HasIndex(e => e.AppName, "Index_AppName");

                entity.Property(e => e.AppId).ValueGeneratedNever();

                entity.Property(e => e.AppName)
                    .IsRequired()
                    .HasMaxLength(280)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<ASPStateTempSessions>(entity =>
            {
                entity.HasKey(e => e.SessionId)
                    .HasName("PK__ASPState__C9F4929062520F64");

                entity.HasIndex(e => e.Expires, "Index_Expires");

                entity.Property(e => e.SessionId).HasMaxLength(88);

                entity.Property(e => e.Created)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.Expires).HasColumnType("datetime");

                entity.Property(e => e.LockDate).HasColumnType("datetime");

                entity.Property(e => e.LockDateLocal).HasColumnType("datetime");

                entity.Property(e => e.SessionItemLong).HasColumnType("image");

                entity.Property(e => e.SessionItemShort).HasMaxLength(7000);
            });

            modelBuilder.Entity<AU_ADDRESS>(entity =>
            {
                entity.HasKey(e => e.ID_ADDRESS_AU)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_ADDRSS, "FADAU01_FK");

                entity.Property(e => e.CD_ACTN_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ACTN).HasColumnType("datetime");

                entity.Property(e => e.NM_ACTN_BY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_CLMN)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_NEW_VALUE)
                    .HasMaxLength(75)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_OLD_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_ADDRSSNavigation)
                    .WithMany(p => p.AU_ADDRESS)
                    .HasForeignKey(d => d.ID_ADDRSS)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FADAU01");
            });

            modelBuilder.Entity<AU_ARREARS_CS>(entity =>
            {
                entity.HasKey(e => e.ID_ARRRS_CS_AUDIT)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_ARRRS_CS, "FARAU01_FK");

                entity.Property(e => e.CD_ACTN_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ACTN).HasColumnType("datetime");

                entity.Property(e => e.NM_ACTN_BY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_CLMN)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_NEW_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_OLD_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_ARRRS_CSNavigation)
                    .WithMany(p => p.AU_ARREARS_CS)
                    .HasForeignKey(d => d.ID_ARRRS_CS)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FARAU01");
            });

            modelBuilder.Entity<AU_CASE>(entity =>
            {
                entity.HasKey(e => e.ID_CASE_AU)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_CASE_NMBR, "FCSAU01_FK");

                entity.Property(e => e.ID_CASE_AU).ValueGeneratedNever();

                entity.Property(e => e.CD_ACTN_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ACTN).HasColumnType("datetime");

                entity.Property(e => e.NM_ACTN_BY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_CLMN)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_NEW_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_OLD_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_CASE_NMBRNavigation)
                    .WithMany(p => p.AU_CASE)
                    .HasForeignKey(d => d.ID_CASE_NMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FCSAU01");
            });

            modelBuilder.Entity<AU_CASEACTION>(entity =>
            {
                entity.HasKey(e => e.ID_AUDIT_CASEACTION);

                entity.Property(e => e.ACTION_STATUS)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')")
                    .IsFixedLength()
                    .HasComment("SUCCESS\r\nFAILED\r\nSUSPENDED");

                entity.Property(e => e.AM_ALLTMNT)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AM_AWARD_ALLMNT)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AM_AWARD_ALLTMNT).HasColumnType("money");

                entity.Property(e => e.AM_PEND_ALLMNT)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AM_PEND_ALLTMNT).HasColumnType("money");

                entity.Property(e => e.AM_RCPMNT).HasColumnType("money");

                entity.Property(e => e.AM_RSTRTN).HasColumnType("money");

                entity.Property(e => e.CASE_ACTION)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')")
                    .IsFixedLength()
                    .HasComment("AWARD\r\nDENY\r\nCASE UPDATE");

                entity.Property(e => e.CD_ADVRS_GUARD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_ALLTMNT_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_CASE_STTS_TYPE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('  ')")
                    .IsFixedLength();

                entity.Property(e => e.CD_PAST_DUE_RSN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CD_PRCSSN_STNDRD).HasColumnType("numeric(1, 0)");

                entity.Property(e => e.CD_RETRO_RESTORE_RSN)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CD_RJCTN_CLSR)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('  ')")
                    .IsFixedLength();

                entity.Property(e => e.CD_SPCL_REOPEN_RSN)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.DT_ADVRS_ACTN).HasColumnType("datetime");

                entity.Property(e => e.DT_APPLD).HasColumnType("datetime");

                entity.Property(e => e.DT_APPNTMNT).HasColumnType("datetime");

                entity.Property(e => e.DT_APPRVL).HasColumnType("datetime");

                entity.Property(e => e.DT_CASE_STTS)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DT_CERT_END).HasColumnType("datetime");

                entity.Property(e => e.DT_CERT_STRT).HasColumnType("datetime");

                entity.Property(e => e.DT_STRT_ISSNC).HasColumnType("datetime");

                entity.Property(e => e.ID_DATE_CREATED)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ID_USER)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')")
                    .IsFixedLength();

                entity.Property(e => e.ID_WRKR_SSN)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')")
                    .IsFixedLength();

                entity.Property(e => e.NO_CASE).HasColumnType("numeric(9, 0)");

                entity.Property(e => e.NO_CASE_CHCKDGT).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.NO_CASE_CHKDGT).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.NO_WRKR_NMBR)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')")
                    .IsFixedLength();

                entity.Property(e => e.SCI_MSG).IsUnicode(false);

                entity.Property(e => e.UPDATE_NOTICE_TYPE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('  ')")
                    .IsFixedLength();
            });

            modelBuilder.Entity<AU_CASELOG>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DT_LOGIN).HasColumnType("datetime");

                entity.Property(e => e.ID_NMBR).ValueGeneratedOnAdd();

                entity.Property(e => e.ID_USER)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_CASE)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<AU_CASE_STATUS>(entity =>
            {
                entity.HasKey(e => e.ATTRIBUTE_1014)
                    .IsClustered(false);

                entity.Property(e => e.ATTRIBUTE_1014).ValueGeneratedNever();

                entity.Property(e => e.CD_ACTN_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ACTN).HasColumnType("datetime");

                entity.Property(e => e.NM_ACTN_BY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_CLMN)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_NEW_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_OLD_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<AU_COURT_ORDERED_AMOUNT>(entity =>
            {
                entity.HasKey(e => e.ID_CRT_ORDRD_AMNT_AUDIT)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_CRT_ORDRD_AMNT, "FCOAU01_FK");

                entity.Property(e => e.CD_ACTN_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ACTN).HasColumnType("datetime");

                entity.Property(e => e.NM_ACTN_BY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_CLMN)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_NEW_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_OLD_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_CRT_ORDRD_AMNTNavigation)
                    .WithMany(p => p.AU_COURT_ORDERED_AMOUNT)
                    .HasForeignKey(d => d.ID_CRT_ORDRD_AMNT)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FCOAU01");
            });

            modelBuilder.Entity<AU_CS_AMOUNT>(entity =>
            {
                entity.HasKey(e => e.ID_CS_AMNT_AUDIT)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_CS_AMNT, "FCHAU01_FK");

                entity.Property(e => e.CD_ACTN_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ACTN).HasColumnType("datetime");

                entity.Property(e => e.NM_ACTN_BY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_CLMN)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_NEW_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_OLD_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_CS_AMNTNavigation)
                    .WithMany(p => p.AU_CS_AMOUNT)
                    .HasForeignKey(d => d.ID_CS_AMNT)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FCHAU01");
            });

            modelBuilder.Entity<AU_DEPENDENT>(entity =>
            {
                entity.HasKey(e => e.ID_DPNDNT_AUDIT)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_DPNDNT, "FDPAU01_FK");

                entity.Property(e => e.CD_ACTN_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ACTN).HasColumnType("datetime");

                entity.Property(e => e.NM_ACTN_BY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_CLMN)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_NEW_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_OLD_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_DPNDNTNavigation)
                    .WithMany(p => p.AU_DEPENDENT)
                    .HasForeignKey(d => d.ID_DPNDNT)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FDPAU01");
            });

            modelBuilder.Entity<AU_DEPENDENT_CARE>(entity =>
            {
                entity.HasKey(e => e.ID_DPNDNT_CARE_AUDIT)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_DPNDNT_CARE, "FDCAU01_FK");

                entity.Property(e => e.CD_ACTN_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ACTN).HasColumnType("datetime");

                entity.Property(e => e.NM_ACTN_BY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_CLMN)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_NEW_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_OLD_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_DPNDNT_CARENavigation)
                    .WithMany(p => p.AU_DEPENDENT_CARE)
                    .HasForeignKey(d => d.ID_DPNDNT_CARE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FDCAU01");
            });

            modelBuilder.Entity<AU_EMPLOYMENT>(entity =>
            {
                entity.HasKey(e => e.ID_EMPLYMNT_AUDIT)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_EMPLYMNT, "FEMAU01_FK");

                entity.Property(e => e.CD_ACTN_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ACTN).HasColumnType("datetime");

                entity.Property(e => e.NM_ACTN_BY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_CLMN)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_NEW_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_OLD_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_EMPLYMNTNavigation)
                    .WithMany(p => p.AU_EMPLOYMENT)
                    .HasForeignKey(d => d.ID_EMPLYMNT)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FEMAU01");
            });

            modelBuilder.Entity<AU_INSURANCE>(entity =>
            {
                entity.HasKey(e => e.ID_INSRNC_AUDIT)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_INSRNC, "FINAU01_FK");

                entity.Property(e => e.CD_ACTN_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ACTN).HasColumnType("datetime");

                entity.Property(e => e.NM_ACTN_BY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_CLMN)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_NEW_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_OLD_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_INSRNCNavigation)
                    .WithMany(p => p.AU_INSURANCE)
                    .HasForeignKey(d => d.ID_INSRNC)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FINAU01");
            });

            modelBuilder.Entity<AU_LOGINRCD>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DT_LOGIN).HasColumnType("datetime");

                entity.Property(e => e.ID_NMBR).ValueGeneratedOnAdd();

                entity.Property(e => e.ID_USER)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<AU_MEAL>(entity =>
            {
                entity.HasKey(e => e.ID_MEAL_AUDIT)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_MEAL, "FMLAU01_FK");

                entity.Property(e => e.CD_ACTN_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ACTN).HasColumnType("datetime");

                entity.Property(e => e.NM_ACTN_BY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_CLMN)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_NEW_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_OLD_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_MEALNavigation)
                    .WithMany(p => p.AU_MEAL)
                    .HasForeignKey(d => d.ID_MEAL)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FMLAU01");
            });

            modelBuilder.Entity<AU_MEDICAL_EXPENSE>(entity =>
            {
                entity.HasKey(e => e.ID_MDCL_EXPNS_AUDIT)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_MDCL_EXPNS, "FMDAU01_FK");

                entity.Property(e => e.CD_ACTN_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ACTN).HasColumnType("datetime");

                entity.Property(e => e.NM_ACTN_BY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_CLMN)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_NEW_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_OLD_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_MDCL_EXPNSNavigation)
                    .WithMany(p => p.AU_MEDICAL_EXPENSE)
                    .HasForeignKey(d => d.ID_MDCL_EXPNS)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FMDAU01");
            });

            modelBuilder.Entity<AU_MEMBER>(entity =>
            {
                entity.HasKey(e => e.ID_MMBR_AUDIT)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_MMBR, "FMBAU01_FK");

                entity.Property(e => e.CD_ACTN_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ACTN).HasColumnType("datetime");

                entity.Property(e => e.NM_ACTN_BY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_CLMN)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_NEW_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_OLD_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.AU_MEMBER)
                    .HasForeignKey(d => d.ID_MMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FMBAU01");
            });

            modelBuilder.Entity<AU_MEMBER_TRNSFR_RSRC>(entity =>
            {
                entity.HasKey(e => e.ID_MMBR_TRNSFR_RSRC_AUDIT)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_MMBR_RSRC, "FMTAU01_FK");

                entity.Property(e => e.CD_ACTN_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ACTN).HasColumnType("datetime");

                entity.Property(e => e.NM_ACTN_BY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_CLMN)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_NEW_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_OLD_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_MMBR_RSRCNavigation)
                    .WithMany(p => p.AU_MEMBER_TRNSFR_RSRC)
                    .HasForeignKey(d => d.ID_MMBR_RSRC)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FMTAU01");
            });

            modelBuilder.Entity<AU_NACLOG>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.CD_NAC_AUDIT)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_APPLD)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_NAC_MATCH).HasColumnType("datetime");

                entity.Property(e => e.DT_RECORD)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FL_NAC_MATCH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_NMBR).ValueGeneratedOnAdd();

                entity.Property(e => e.ID_USER)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.LEX_ID_SCORE)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.MATCH_CD)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NO_CASE)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SRCH_BENE_MM)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.SRCH_SSN)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.fullName)
                    .HasMaxLength(66)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AU_OACIS>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DT_AUDIT_NOTE).HasColumnType("datetime");

                entity.Property(e => e.DT_CRTD).HasColumnType("datetime");

                entity.Property(e => e.ID_AU_OACIS).ValueGeneratedOnAdd();

                entity.Property(e => e.TX_CASE_NOTE_DSCR).HasColumnType("text");

                entity.Property(e => e.TX_TABLE_NAME)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<AU_PUBLIC_HEALTH>(entity =>
            {
                entity.HasKey(e => e.PH_ID)
                    .HasName("PK_AU_PUBLICHEALTH");

                entity.Property(e => e.PH_DT_CREATED)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PH_DateofBirth)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PH_ELEIndicator)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PH_EarnedIncome).HasColumnType("text");

                entity.Property(e => e.PH_Employment).HasColumnType("text");

                entity.Property(e => e.PH_FullName)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PH_QueryStatus)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PH_Unearned_Income).HasColumnType("text");
            });

            modelBuilder.Entity<AU_RESOURCE>(entity =>
            {
                entity.HasKey(e => e.ID_RSRC_AUDIT)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_RSRC, "FRSAU01_FK");

                entity.Property(e => e.CD_ACTN_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ACTN).HasColumnType("datetime");

                entity.Property(e => e.NM_ACTN_BY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_CLMN)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_NEW_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_OLD_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_RSRCNavigation)
                    .WithMany(p => p.AU_RESOURCE)
                    .HasForeignKey(d => d.ID_RSRC)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FRSAU01");
            });

            modelBuilder.Entity<AU_ROOM>(entity =>
            {
                entity.HasKey(e => e.ID_ROOM_AUDIT);

                entity.Property(e => e.CD_ACTN_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ACTN).HasColumnType("datetime");

                entity.Property(e => e.NM_ACTN_BY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_CLMN)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_NEW_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_OLD_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_ROOMNavigation)
                    .WithMany(p => p.AU_ROOM)
                    .HasForeignKey(d => d.ID_ROOM)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FRMAU01");
            });

            modelBuilder.Entity<AU_SECURITY>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.CD_ACTION)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_CNTY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_HOME_CNTY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_PAYROLL)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_PSSWRD)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_ROLE)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_WRKR_NMBR)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_AUDIT).HasColumnType("datetime");

                entity.Property(e => e.DT_PSSWRD).HasColumnType("datetime");

                entity.Property(e => e.FL_ACTIVE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_ADDI)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_DSNAP)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_NEWUSER)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_SUPERVISOR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_TEST)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_WF)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_SECURITY).ValueGeneratedOnAdd();

                entity.Property(e => e.ID_USER)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_FULL_NAME)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_COMMENT)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<AU_SEMIANNUAL>(entity =>
            {
                entity.HasKey(e => e.ID_AUDIT_SEMIANNUAL)
                    .HasName("PK_AU_SEMIANNUAL1");

                entity.Property(e => e.CD_SR_COMP_STAT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CD_SR_INCOMP_STAT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.DT_FRM_RCVD).HasColumnType("datetime");

                entity.Property(e => e.DT_REPL_FRM).HasColumnType("datetime");

                entity.Property(e => e.DT_SR_COMP).HasColumnType("datetime");

                entity.Property(e => e.DT_SR_INCOMP_DT).HasColumnType("datetime");

                entity.Property(e => e.FL_REPL_FRM_AUTH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.ID_CASE_NUMBER)
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.ID_DATE_CREATED)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ID_USER)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.NM_HOH)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_CASE).HasColumnType("numeric(9, 0)");

                entity.Property(e => e.NO_WRKR_NMBR)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_MSG)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SR_CODE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<AU_SHELTER_EXPENSE>(entity =>
            {
                entity.HasKey(e => e.ID_SHLTR_EXPNS_AUDIT)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_SHLTR_EXPNS, "FSHAU01_FK");

                entity.Property(e => e.CD_ACTN_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ACTN).HasColumnType("datetime");

                entity.Property(e => e.NM_ACTN_BY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_CLMN)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_NEW_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_OLD_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_SHLTR_EXPNSNavigation)
                    .WithMany(p => p.AU_SHELTER_EXPENSE)
                    .HasForeignKey(d => d.ID_SHLTR_EXPNS)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FSHAU01");
            });

            modelBuilder.Entity<AU_SPECIAL_REOPEN>(entity =>
            {
                entity.HasKey(e => e.ID_AUDIT_SPECIAL_REOPEN);

                entity.Property(e => e.APPLICATION_DATE)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("''");

                entity.Property(e => e.CERT_FROM)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength()
                    .HasComment("''");

                entity.Property(e => e.CERT_TO)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CLOSURE_CD)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.FL_SUCCESS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.ID_DATE_CREATED)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("(getdate())");

                entity.Property(e => e.ID_USER)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_CASE).HasColumnType("numeric(9, 0)");

                entity.Property(e => e.SCI_MSG)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SPECIAL_REOPEN_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.START_ISS)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.TRANSACTION_CD)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();
            });

            modelBuilder.Entity<AU_STRIKE>(entity =>
            {
                entity.HasKey(e => e.ID_STRK_AUDIT)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_STRKR, "FSKAU01_FK");

                entity.Property(e => e.CD_ACTN_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ACTN).HasColumnType("datetime");

                entity.Property(e => e.NM_ACTN_BY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_CLMN)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_NEW_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_OLD_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_STRKRNavigation)
                    .WithMany(p => p.AU_STRIKE)
                    .HasForeignKey(d => d.ID_STRKR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FSKAU01");
            });

            modelBuilder.Entity<AU_STUDENT>(entity =>
            {
                entity.HasKey(e => e.ID_STDNT_AUDIT)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_STDNT, "FSTAU01_FK");

                entity.Property(e => e.CD_ACTN_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ACTN).HasColumnType("datetime");

                entity.Property(e => e.NM_ACTN_BY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_CLMN)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_NEW_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_OLD_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_STDNTNavigation)
                    .WithMany(p => p.AU_STUDENT)
                    .HasForeignKey(d => d.ID_STDNT)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FSTAU01");
            });

            modelBuilder.Entity<AU_TRIPS>(entity =>
            {
                entity.HasKey(e => e.ID_TRIPS_AUDIT)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_TRIPS, "FTRAU01_FK");

                entity.Property(e => e.CD_ACTN_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ACTN).HasColumnType("datetime");

                entity.Property(e => e.NM_ACTN_BY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_CLMN)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_NEW_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_OLD_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_TRIPSNavigation)
                    .WithMany(p => p.AU_TRIPS)
                    .HasForeignKey(d => d.ID_TRIPS)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FTRAU01");
            });

            modelBuilder.Entity<AU_UNEARNED_INCOME>(entity =>
            {
                entity.HasKey(e => e.ID_UNERND_INCM_AUDIT)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_UNERND_INCM, "FUNAU01_FK");

                entity.Property(e => e.CD_ACTN_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ACTN).HasColumnType("datetime");

                entity.Property(e => e.NM_ACTN_BY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_CLMN)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_NEW_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_OLD_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_UNERND_INCMNavigation)
                    .WithMany(p => p.AU_UNEARNED_INCOME)
                    .HasForeignKey(d => d.ID_UNERND_INCM)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FUNAU01");
            });

            modelBuilder.Entity<AU_UTILITY_EXPENSE>(entity =>
            {
                entity.HasKey(e => e.ID_UTLTY_EXPNS_AUDIT)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_UTLTY_EXPNS, "FUTAU01_FK");

                entity.Property(e => e.CD_ACTN_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ACTN).HasColumnType("datetime");

                entity.Property(e => e.NM_ACTN_BY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_CLMN)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_NEW_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_OLD_VALUE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_UTLTY_EXPNSNavigation)
                    .WithMany(p => p.AU_UTILITY_EXPENSE)
                    .HasForeignKey(d => d.ID_UTLTY_EXPNS)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FUTAU01");
            });

            modelBuilder.Entity<AU_VOTER>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DT_CREATED)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ID_NMBR).ValueGeneratedOnAdd();

                entity.Property(e => e.ID_USER)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_CASE)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.VOTER_ANS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.VOTER_TXT).HasColumnType("text");
            });

            modelBuilder.Entity<AU_VOTER_POPUP>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DT_CREATED)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ID_AU_VOTER_POPUP).ValueGeneratedOnAdd();

                entity.Property(e => e.ID_USER)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_CASE)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<CASE>(entity =>
            {
                entity.HasKey(e => e.ID_CASE_NMBR)
                    .IsClustered(false);

                entity.HasIndex(e => e.NO_CASE, "IX_CASE_NO_CASE")
                    .IsClustered();

                entity.Property(e => e.ID_CASE_NMBR).HasComment("Unique Identity Field for the Case table");

                entity.Property(e => e.ALT_OFFICE_NO)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CD_CTY_RESIDING)
                    .HasColumnType("numeric(3, 0)")
                    .HasComment("The 2 digit county code that is used in RESIDING CO on SCI_II");

                entity.Property(e => e.CD_HH_TYPE)
                    .HasColumnType("numeric(1, 0)")
                    .HasComment("Single digit Household Type from Chapter 8 Sect 801 Automation Manual (Values 1,2,3,4,5)");

                entity.Property(e => e.CD_INTRVWEE_DSGNTN)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("1 = Authorized Representative, 2 = Responsible HH Member, 3= Head of Household");

                entity.Property(e => e.CD_MTHD_INTRVW)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')")
                    .IsFixedLength()
                    .HasComment("1 = In Office, 2 = Telephone Interview");

                entity.Property(e => e.CD_OFF_RESIDING)
                    .HasColumnType("numeric(2, 0)")
                    .HasComment("The 2 digit county code of the case's residing county");

                entity.Property(e => e.CD_PRCSSN_STNDRD)
                    .HasColumnType("numeric(1, 0)")
                    .HasComment("Values are 1 through 9 from Chapter 8 Section 801, Automation Manual");

                entity.Property(e => e.CD_TRCKNG_OFFC)
                    .HasColumnType("numeric(2, 0)")
                    .HasComment("Tracking Office can be 01,02,03, or 04.  Most are 02.  Large counties may have up to 4.  This is the county office responsible for the case.");

                entity.Property(e => e.DT_ADVRS_ACTN)
                    .HasColumnType("datetime")
                    .HasComment("Effective Date/Time an adverse action will be initiated (Automation Manual page 8-12)");

                entity.Property(e => e.DT_APPLD)
                    .HasColumnType("datetime")
                    .HasComment("Date/Time application officially entered ento the system");

                entity.Property(e => e.DT_APPNTMNT)
                    .HasColumnType("datetime")
                    .HasComment("Date/Time an Appointment was entered for SCI_II (normally not used)");

                entity.Property(e => e.DT_APPRVL)
                    .HasColumnType("datetime")
                    .HasComment("Date/Time of Award Approval action (or denial)");

                entity.Property(e => e.DT_EXPRTN)
                    .HasColumnType("datetime")
                    .HasComment("Not currently used");

                entity.Property(e => e.DT_RCVD_VRFCTN)
                    .HasColumnType("datetime")
                    .HasComment("This is the date any verification required for Case action was received.");

                entity.Property(e => e.DT_RECORD_CREATED)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("When a case is created, this field is created and will not be modified");

                entity.Property(e => e.DT_RQRD_VRCTN)
                    .HasColumnType("datetime")
                    .HasComment("This is the date specified that any verification required for Case action is required.");

                entity.Property(e => e.DT_SPCL_DUE)
                    .HasColumnType("datetime")
                    .HasComment("At this time, the special due date is no longer required.");

                entity.Property(e => e.DT_VOTER_MOD)
                    .HasColumnType("datetime")
                    .HasComment("If the case HH or authorized representative changes their mind about the voting answer, the date of change is recorded here");

                entity.Property(e => e.EM_HOH)
                    .HasColumnType("text")
                    .HasComment("The Head of Household EMAIL address when available and provided");

                entity.Property(e => e.FL_ADVRS_WV)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Set to \"y\" if COLA message is displayed for the first time");

                entity.Property(e => e.FL_AR_FORM_SGND)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Authorized Representative form is signed if \"Y\".  Asked in the Interviewee module of OACIS.");

                entity.Property(e => e.FL_BTRW)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("If \"Y\", this case is to be processed as a \"battered woman\" case");

                entity.Property(e => e.FL_CNTNUE_FA_SCRN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("If it is a one member household and the member is disqualified, a \"N\" will mean there is no need to continue the interview.");

                entity.Property(e => e.FL_CNTNUE_VOLQUIT_SCRN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Voluntary Quit module:  If it is a one member household and the member is disqualified, a \"N\" will mean there is no need to continue the interview.");

                entity.Property(e => e.FL_EBT_ENGLSH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Not Currently Used");

                entity.Property(e => e.FL_EMPLYD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Not currently used.");

                entity.Property(e => e.FL_EXPCT_STRT_WRK)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Not currently used.");

                entity.Property(e => e.FL_EXPCT_VAC_HOL_BNUS_PAY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Not Currently used");

                entity.Property(e => e.FL_HH_CMPSTN_QSTNBL)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Interviewee module:  If the household compasition is considered questionable by the worker, this flag is set to \"Y\"");

                entity.Property(e => e.FL_HH_HMLS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Interviewee module:  If the head of  household is homeless, this flag is set to \"Y\"");

                entity.Property(e => e.FL_JOBS_CHILD_SNCTN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Unearned Income Module: Flag is set to \"Y\" or \"N\" depending on questions answered in this module.");

                entity.Property(e => e.FL_LIFELINE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("This is the answer given ((Y)es) or ((N)o) to the lifeline question in the interviewee module");

                entity.Property(e => e.FL_NEW_EBT_CARD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Award/Deny Module:  This flag is set to \"Y\" if the applicant states he/she needs a new EBT card");

                entity.Property(e => e.FL_ONE_PRSN_HH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Flag set to indicate only one  member is in the household ");

                entity.Property(e => e.FL_ON_STRK)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Flag set to indicate a member is the case is on strike ");

                entity.Property(e => e.FL_PAY_CS_NON_RSDNT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Flag set to indicate pay for Child Support as a non-resident in household ");

                entity.Property(e => e.FL_PAY_DC_BABYSIT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Flag set to indicate pay for Dependent Child Babysitting  in household");

                entity.Property(e => e.FL_PAY_DC_BILL_NONHH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Flag set to indicate pay for Dependent Child Bill for a non-resident  in household");

                entity.Property(e => e.FL_PAY_ROOM_MEAL)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Flag set to indicate pay for room and meal  for a resident  in household");

                entity.Property(e => e.FL_PSC)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("This Flag is set to \"Y\" if the case has been sent to the Public Service Commission");

                entity.Property(e => e.FL_RSDNCY_QSTNBL)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Flag set to indicate questionable residency for a member in the household");

                entity.Property(e => e.FL_SPECIAL_REOPEN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength()
                    .HasComment("This flag is set to 'Y' if the case was a special reopen");

                entity.Property(e => e.FL_WRK_TRMNTD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Flag set to indicate if case has a worker terminated member in the household");

                entity.Property(e => e.ID_CNTY_STATE).HasComment("Contains the Unique Identifier from the REF_COUNTY_STATE table for the CD_CNTY associated with this Case");

                entity.Property(e => e.ID_DISASTER).HasComment("If the case is a \"disaster case\", this field contains the reference to the appropriate disaster");

                entity.Property(e => e.ID_VRFCTN_ATHRZD_RPRSNTTV).HasComment("References the verification type of the authorized representative");

                entity.Property(e => e.ID_VRFCTN_HH).HasComment("References the verification type of the head of household in the Inteview module");

                entity.Property(e => e.ID_VRFCTN_HH_CMPSTN).HasComment("References the verification type of the household composition in the interview module");

                entity.Property(e => e.ID_VRFCTN_HH_RSDNCY).HasComment("References the verification type of the head of household  household residency in the interview module");

                entity.Property(e => e.ID_VRFCTN_INTRVWEE).HasComment("References the verification type of the interviewee in the interview module");

                entity.Property(e => e.ID_VRFCTN_RSDNCY).HasComment("References the verification type of the household residency in the interview module");

                entity.Property(e => e.ID_WRKR_SSN)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("SSN of the Food Assistant worker modifying the case");

                entity.Property(e => e.MYDHR_LINKDATE).HasColumnType("datetime");

                entity.Property(e => e.MYDHR_PIN)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("A system generated PIN for this case that will be used to tie the case to the myDHR application");

                entity.Property(e => e.NO_CASE)
                    .HasColumnType("numeric(9, 0)")
                    .HasComment("This is the actual CASE NUMBER for the household assigned by SCI_II");

                entity.Property(e => e.NO_CASE_CHCKDGT)
                    .HasColumnType("numeric(1, 0)")
                    .HasComment("The check digit assigned the case number from SCI_II");

                entity.Property(e => e.NO_HOME_TEL)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("This field will hold the household telephone number if provided");

                entity.Property(e => e.NO_WRKR_NMBR)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("This is the worker number obtained from the security file");

                entity.Property(e => e.TX_HOME_DRCTNS)
                    .HasColumnType("text")
                    .HasComment("The direction to the applicants home that was intered in the contact screen");

                entity.Property(e => e.TX_VRFCTN_ATHRZD_RPRSNTTV)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')")
                    .HasComment("Text added to the case to document authorized representative verification");

                entity.Property(e => e.TX_VRFCTN_HH)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')")
                    .HasComment("Additional verification text for head of household added in the interview module if nececssary");

                entity.Property(e => e.TX_VRFCTN_HH_CMPSTN)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')")
                    .HasComment("Additional verification text for household compostion added in the interview module if nececssary");

                entity.Property(e => e.TX_VRFCTN_HH_RSDNCY)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')")
                    .HasComment("Additional verification text for household residency added in the interview module if nececssary");

                entity.Property(e => e.TX_VRFCTN_INTRVWEE)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')")
                    .HasComment("Additional verification text for interview verification  added in the interview module if nececssary");

                entity.Property(e => e.TX_VRFCTN_RSDNCY)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')")
                    .HasComment("Additional verification text for residency verification added in the interview module if nececssary");

                entity.Property(e => e.VOTER_ANS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Each head of household is asked if they want to be registered to vote.  This field is either \"Y\" or \"N\"");

                entity.Property(e => e.VOTER_TXT)
                    .HasColumnType("text")
                    .HasComment("This field contains the answer given by the case as to whether they want to be registered to vote.");

                entity.HasOne(d => d.ID_CNTY_STATENavigation)
                    .WithMany(p => p.CASE)
                    .HasForeignKey(d => d.ID_CNTY_STATE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FCASE01");
            });

            modelBuilder.Entity<CASE_BUDDY>(entity =>
            {
                entity.HasKey(e => e.ID_CASE);

                entity.Property(e => e.CASE_BENEFIT_MONTH)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CASE_BENEFIT_TYPE)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('D')")
                    .IsFixedLength();

                entity.Property(e => e.CASE_FIRST_NAME)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CASE_LAST_NAME)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CASE_MAILING_ADDRESS_CITY)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CASE_MAILING_ADDRESS_STATE)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CASE_MAILING_ADDRESS_STREET1)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CASE_MAILING_ADDRESS_STREET2)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CASE_MAILING_ADDRESS_ZIP)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CASE_MIDDLE_INITIAL)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CASE_PHYSICAL_ADDRESS_CITY)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CASE_PHYSICAL_ADDRESS_STATE)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CASE_PHYSICAL_ADDRESS_STREET1)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CASE_PHYSICAL_ADDRESS_STREET2)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CASE_PHYSICAL_ADDRESS_ZIP)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CLIENT_DOB)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CLIENT_ELIGIBLE_INDICATOR)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CLIENT_FIRST_NAME)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CLIENT_GENDER)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('U')")
                    .IsFixedLength();

                entity.Property(e => e.CLIENT_LAST_NAME)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CLIENT_MIDDLE_INITIAL)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CLIENT_SSN)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CLIENT_SSN_VERIFICATION_FLAG)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.STATE_ABBREVIATION)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('AL')")
                    .IsFixedLength();
            });

            modelBuilder.Entity<CASE_NOTES>(entity =>
            {
                entity.HasKey(e => e.ID_CASE_NOTE)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_MMBR, "FCSNT01_FK")
                    .IsClustered();

                entity.HasIndex(e => e.ID_CASE_CTGRY, "FCSNT02_FK");

                entity.Property(e => e.CD_RJCTN_CLSR_SYNC)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_CASE_NOTE).HasColumnType("datetime");

                entity.Property(e => e.DT_CRTD).HasColumnType("datetime");

                entity.Property(e => e.DT_MDFD).HasColumnType("datetime");

                entity.Property(e => e.NM_CRTD)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_MDFD)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_CASE_NOTE_DSCR).HasColumnType("text");

                entity.HasOne(d => d.ID_CASE_CTGRYNavigation)
                    .WithMany(p => p.CASE_NOTES)
                    .HasForeignKey(d => d.ID_CASE_CTGRY)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FCSNT02");

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.CASE_NOTES)
                    .HasForeignKey(d => d.ID_MMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FCSNT01");
            });

            modelBuilder.Entity<CASE_NOTES_TEST>(entity =>
            {
                entity.HasKey(e => e.ID_CASE_NOTE)
                    .HasName("PK__CASE_NOTES_TEST__78765AAD")
                    .IsClustered(false);

                entity.Property(e => e.CD_RJCTN_CLSR_SYNC)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_CASE_NOTE).HasColumnType("datetime");

                entity.Property(e => e.DT_CRTD).HasColumnType("datetime");

                entity.Property(e => e.DT_MDFD).HasColumnType("datetime");

                entity.Property(e => e.NM_CRTD)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_MDFD)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_CASE_NOTE_DSCR).HasColumnType("text");
            });

            modelBuilder.Entity<CASE_STATUS>(entity =>
            {
                entity.HasKey(e => e.ID_CASE_NMBR)
                    .HasName("PK_CASE_STATUS_1");

                entity.HasIndex(e => e.ID_REF_CASE_STATUS_TYPE, "FCSTS01_FK");

                entity.Property(e => e.ID_CASE_NMBR).ValueGeneratedNever();

                entity.Property(e => e.AM_ALLTMNT).HasColumnType("money");

                entity.Property(e => e.AM_AWRD_ALLTMNT).HasColumnType("money");

                entity.Property(e => e.AM_PEND_ALLTMNT).HasColumnType("money");

                entity.Property(e => e.AM_RCPMNT)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CD_ADVRS_GUARD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_ALLTMNT_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_DENIAL)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_EXPEDITE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_ISS_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_PAST_DUE_RSN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_RJCTN_CLSR)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_TRMNTN)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_CASE_STTS).HasColumnType("datetime");

                entity.Property(e => e.DT_CERT_END).HasColumnType("datetime");

                entity.Property(e => e.DT_CERT_STRT).HasColumnType("datetime");

                entity.Property(e => e.DT_LATEST_CLOSURE).HasColumnType("datetime");

                entity.Property(e => e.DT_STRT_ISSNC).HasColumnType("datetime");

                entity.Property(e => e.FL_SPECIAL_REOPEN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('N')")
                    .IsFixedLength();

                entity.Property(e => e.ID_REF_CASE_STATUS_TYPE).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.TX_PND_RSN).HasColumnType("text");

                entity.HasOne(d => d.CD_PAST_DUE_RSNNavigation)
                    .WithMany(p => p.CASE_STATUS)
                    .HasForeignKey(d => d.CD_PAST_DUE_RSN)
                    .HasConstraintName("FCSTS05");

                entity.HasOne(d => d.ID_CASE_NMBRNavigation)
                    .WithOne(p => p.CASE_STATUS)
                    .HasForeignKey<CASE_STATUS>(d => d.ID_CASE_NMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FCSTS03");

                entity.HasOne(d => d.REF_CASE_STATUS_TYPE)
                    .WithMany(p => p.CASE_STATUS)
                    .HasForeignKey(d => d.ID_REF_CASE_STATUS_TYPE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FCSTS01");

                entity.HasOne(d => d.ID_SPCL_REOPEN_RSNNavigation)
                    .WithMany(p => p.CASE_STATUS)
                    .HasForeignKey(d => d.ID_SPCL_REOPEN_RSN)
                    .HasConstraintName("FCSTS02");

                entity.HasOne(d => d.CD_)
                    .WithMany(p => p.CASE_STATUS)
                    .HasForeignKey(d => new { d.CD_RJCTN_CLSR, d.CD_DENIAL, d.CD_TRMNTN })
                    .HasConstraintName("FCSTS04");
            });

            modelBuilder.Entity<CASE_WORKFLOW>(entity =>
            {
                entity.HasKey(e => new { e.NO_CASE, e.CD_REF_MODULE });

                entity.Property(e => e.NO_CASE).HasColumnType("numeric(9, 0)");

                entity.Property(e => e.CD_REF_MODULE)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_CRTD).HasColumnType("datetime");

                entity.Property(e => e.DT_MDFD).HasColumnType("datetime");

                entity.Property(e => e.FL_CMPLTD)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_INTRVW)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<COURT_ORDERED_AMOUNT>(entity =>
            {
                entity.HasKey(e => e.ID_CRT_ORDRD_AMNT)
                    .HasName("PK_COURT_ORDRD_AMOUNT")
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_CRT_ORDRD_AMNT, "FARCS01_FK");

                entity.Property(e => e.AM_CLCLTD_CRRNT_MNTHLY).HasColumnType("money");

                entity.Property(e => e.AM_CRT_ORDR_MNTHLY).HasColumnType("money");

                entity.Property(e => e.AM_PAY_CRRNT_CS).HasColumnType("money");

                entity.Property(e => e.AM_PAY_HLTH_INS_MNTHLY).HasColumnType("money");

                entity.Property(e => e.AM_PAY_LNDLRD_MNTHLY).HasColumnType("money");

                entity.Property(e => e.AM_PAY_MDBLLS_MNTHLY).HasColumnType("money");

                entity.Property(e => e.AM_PAY_MRTGG_MNTHLY).HasColumnType("money");

                entity.Property(e => e.AM_PAY_UTLTY_MNTHLY).HasColumnType("money");

                entity.Property(e => e.AM_TTL_ALLWBL_CS).HasColumnType("money");

                entity.Property(e => e.CD_MONTH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_HLTH_INS_MNTHLY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_LNDLRD_MNTHLY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_MDBLLS_MNTHLY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_MRTGG_MNTHLY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_UTLTY_MNTHLY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_CRT_ORDRD).HasColumnType("numeric(1, 0)");

                entity.Property(e => e.ID_FRQNCY_CRRNT).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.ID_FRQNCY_CRT_ORDR).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.NO_CRT_ORDR)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_VRFCTN_CRT_ORDRD_AMT)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')");

                entity.HasOne(d => d.ID_CRT_ORDRDNavigation)
                    .WithMany(p => p.COURT_ORDERED_AMOUNT)
                    .HasForeignKey(d => d.ID_CRT_ORDRD)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FCOAM01");

                entity.HasOne(d => d.ID_CS_PAYER_RCPNTNavigation)
                    .WithMany(p => p.COURT_ORDERED_AMOUNT)
                    .HasForeignKey(d => d.ID_CS_PAYER_RCPNT)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FCOAM02");
            });

            modelBuilder.Entity<COVERED_ITEMS>(entity =>
            {
                entity.HasKey(e => e.ID_CVRD_ITEMS)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_CASE_NMBR, "FCVRD01_FK");

                entity.Property(e => e.FL_DSCSSD_ATHRZD_RPRSNTTV)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_DSCSSD_CHNG_RPRTNG_RQRMNTS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_DSCSSD_CHNG_RPRT_GVN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_DSCSSD_CLNT_WTHDRWL)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_DSCSSD_CVL_RGHTS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_DSCSSD_DSGNTD_HH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_DSCSSD_ELGBL_FOODS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_DSCSSD_EXPNS_VRFCTNS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_DSCSSD_FA_VIDEO)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_DSCSSD_ISS_HOURS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_DSCSSD_PRMPTNSS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_DSCSSD_RIGHTS_RSPNSBLTS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_DSCSSD_SEMI_ANNL_RPRTNG)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_DSCSSD_VLNTRY_QUIT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_DSCSSD_VNDR_PYMNT_RMBRSMNT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_DSCSSD_VRBLE_ISSNC)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_DSCSSD_VRFCTN_PSTPN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_DSCSSD_WORK_RGSTRTN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_SGND_SUD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_UNDRSTNDS_GOOD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_UNDRSTNDS_LMTD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_UNDRSTNDS_NOT_CPBL)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_UNDRSTNDS_POOR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_DSCSSD_OTHR).HasColumnType("text");

                entity.Property(e => e.TX_SRGiven)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_UNDRSTNDS_WHY).HasColumnType("text");

                entity.HasOne(d => d.ID_CASE_NMBRNavigation)
                    .WithMany(p => p.COVERED_ITEMS)
                    .HasForeignKey(d => d.ID_CASE_NMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FCVRD01");
            });

            modelBuilder.Entity<CS_AMOUNT>(entity =>
            {
                entity.HasKey(e => e.ID_CS_AMNT)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_MMBR, "_dta_index_CS_AMOUNT_5_1177823308__K3_1_2");

                entity.Property(e => e.AM_CS_CRT_ORDRD_MNTHLY).HasColumnType("money");

                entity.Property(e => e.AM_CS_MNTHLY).HasColumnType("money");

                entity.Property(e => e.AM_NON_RCRRNG_RSRC).HasColumnType("money");

                entity.Property(e => e.DT_DAY_OF_MNTH)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_PYMNT_RCVD).HasColumnType("datetime");

                entity.Property(e => e.FL_ARRRS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_FRQNCY_PAY_CS_AMNT).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.TX_VRFCTN_CS_AMNT)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')");

                entity.HasOne(d => d.ID_CS_PAYER_RCPNTNavigation)
                    .WithMany(p => p.CS_AMOUNT)
                    .HasForeignKey(d => d.ID_CS_PAYER_RCPNT)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FCSAM02");

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.CS_AMOUNT)
                    .HasForeignKey(d => d.ID_MMBR)
                    .HasConstraintName("FCSAM01");
            });

            modelBuilder.Entity<CS_DPNDNTS>(entity =>
            {
                entity.HasKey(e => e.ID_CS_DPNDNTS)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_CS_AMNT, "_dta_index_CS_DPNDNTS_c_5_345820344__K3")
                    .IsClustered();

                entity.HasOne(d => d.ID_CS_AMNTNavigation)
                    .WithMany(p => p.CS_DPNDNTS)
                    .HasForeignKey(d => d.ID_CS_AMNT)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FCSDP01");

                entity.HasOne(d => d.ID_DPNDNTNavigation)
                    .WithMany(p => p.CS_DPNDNTS)
                    .HasForeignKey(d => d.ID_DPNDNT)
                    .HasConstraintName("FCSDP03");

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.CS_DPNDNTS)
                    .HasForeignKey(d => d.ID_MMBR)
                    .HasConstraintName("FCSDP02");
            });

            modelBuilder.Entity<CS_PAYER_RECIPIENT>(entity =>
            {
                entity.HasKey(e => e.ID_CS_PAYER_RCPNT)
                    .HasName("PK_CS_PAYER_RCPNT")
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_OBLGTN_RSN, "CS_PAYER_RECIPIENT_FK");

                entity.Property(e => e.FL_PAYER)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_PAYER_RCPNT_FRST)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_PAYER_RCPNT_LST)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_PAYER_RCPNT_MDL)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_PAYER_RCPNT_SFX)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<CS_PAYMENTS>(entity =>
            {
                entity.HasKey(e => e.ID_CS_PYMNT)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_CS_AMNT, "_dta_index_CS_PAYMENTS_c_5_809821997__K2")
                    .IsClustered();

                entity.Property(e => e.AM_CS_PYMNT).HasColumnType("money");

                entity.Property(e => e.DT_CS_PYMNT).HasColumnType("datetime");

                entity.HasOne(d => d.ID_CS_AMNTNavigation)
                    .WithMany(p => p.CS_PAYMENTS)
                    .HasForeignKey(d => d.ID_CS_AMNT)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FCSPY01");
            });

            modelBuilder.Entity<DEPENDENT_CARE>(entity =>
            {
                entity.HasKey(e => e.ID_DPNDNT_CARE)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_DPNDNT, "FDPCH01_FK");

                entity.HasIndex(e => e.ID_MMBR, "_dta_index_DEPENDENT_CARE_5_1405300116__K3");

                entity.HasIndex(e => new { e.ID_MMBR, e.CD_MONTH }, "_dta_index_DEPENDENT_CARE_5_1405300116__K3_K13_1_6_10");

                entity.HasIndex(e => e.ID_MMBR, "_dta_index_DEPENDENT_CARE_c_5_1405300116__K3")
                    .IsClustered();

                entity.Property(e => e.AM_DPNDNT_CARE_EXPNS).HasColumnType("money");

                entity.Property(e => e.AM_PAID).HasColumnType("money");

                entity.Property(e => e.AM_PAID_MNTHLY).HasColumnType("money");

                entity.Property(e => e.CD_MONTH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_ASSSTD_BY_OTHR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_OUTSIDE_DEP_PYMNT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_FRQNCY_DC_EXPNS).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.ID_FRQNCY_DC_PAID).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.TX_VRFCTN_DC)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')");

                entity.HasOne(d => d.ID_DPNDNTNavigation)
                    .WithMany(p => p.DEPENDENT_CARE)
                    .HasForeignKey(d => d.ID_DPNDNT)
                    .HasConstraintName("FDPCH01");

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.DEPENDENT_CAREID_MMBRNavigation)
                    .HasForeignKey(d => d.ID_MMBR)
                    .HasConstraintName("FDPCH03");

                entity.HasOne(d => d.ID_MMBR1Navigation)
                    .WithMany(p => p.DEPENDENT_CAREID_MMBR1Navigation)
                    .HasForeignKey(d => d.ID_MMBR1)
                    .HasConstraintName("FDPCH04");

                entity.HasOne(d => d.ID_PRVDR_NAMENavigation)
                    .WithMany(p => p.DEPENDENT_CARE)
                    .HasForeignKey(d => d.ID_PRVDR_NAME)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FDPCH02");
            });

            modelBuilder.Entity<DEPENDENT_CARE_OTHER_PAYER>(entity =>
            {
                entity.HasKey(e => e.ID_DC_OTHR_PAY)
                    .IsClustered(false);

                entity.Property(e => e.AM_DC_OTHR_PAY).HasColumnType("money");

                entity.Property(e => e.DT_DC_OTHR_PAYER).HasColumnType("datetime");

                entity.Property(e => e.FL_DC_PAY_MMBR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_FRQNCY_DC_OTHR_PAYER).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.TX_VRFCTN_DC_OTHR_PAYER)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')");

                entity.HasOne(d => d.ID_DPNDNT_CARENavigation)
                    .WithMany(p => p.DEPENDENT_CARE_OTHER_PAYER)
                    .HasForeignKey(d => d.ID_DPNDNT_CARE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FODPC01");

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.DEPENDENT_CARE_OTHER_PAYER)
                    .HasForeignKey(d => d.ID_MMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FODPC03");
            });

            modelBuilder.Entity<DISASTER>(entity =>
            {
                entity.HasKey(e => e.ID_DISASTER);

                entity.Property(e => e.DT_DISASTER_BEGIN).HasColumnType("datetime");

                entity.Property(e => e.DT_DISASTER_END).HasColumnType("datetime");

                entity.Property(e => e.FL_CANCELLED)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('N')")
                    .IsFixedLength();

                entity.Property(e => e.NM_DISASTER)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_DISASTER_DESC)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<DISASTER_COUNTIES>(entity =>
            {
                entity.HasKey(e => e.ID_DISASTER_CNTY);

                entity.Property(e => e.CD_CNTY)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<EMPLOYER>(entity =>
            {
                entity.HasKey(e => e.ID_EMPLOYER)
                    .IsClustered(false);

                entity.Property(e => e.AD_CITY)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AD_STATE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AD_STREET1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AD_ZIP)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_CNTY).HasColumnType("numeric(3, 0)");

                entity.Property(e => e.NM_EMPLYR)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_EMPLYR_PHONE)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<EMPLOYMENT>(entity =>
            {
                entity.HasKey(e => e.ID_EMPLYMNT)
                    .IsClustered(false);

                entity.HasIndex(e => new { e.ID_EMPLYMNT, e.ID_MMBR }, "_dta_index_EMPLOYMENT_5_32107255__K1_K2");

                entity.HasIndex(e => new { e.ID_MMBR, e.ID_EMPLYMNT }, "_dta_index_EMPLOYMENT_5_32107255__K2_K1");

                entity.HasIndex(e => new { e.ID_MMBR, e.ID_EMPLYMNT }, "_dta_index_EMPLOYMENT_c_5_32107255__K2_K1")
                    .IsClustered();

                entity.Property(e => e.AD_CITY)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AD_STATE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AD_STREET1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AD_ZIP)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AM_AVG_MNTHLY).HasColumnType("money");

                entity.Property(e => e.AM_CNTRCT_INCM_MNTHLY).HasColumnType("money");

                entity.Property(e => e.AM_ERND_SELF_EMPLYMNT_INCM).HasColumnType("money");

                entity.Property(e => e.AM_ERND_SELF_EMPLYMNT_INCM2).HasColumnType("money");

                entity.Property(e => e.AM_INCM_MNTHLY).HasColumnType("money");

                entity.Property(e => e.AM_INCM_PER_FREQ).HasColumnType("money");

                entity.Property(e => e.AM_TTL_INCM).HasColumnType("money");

                entity.Property(e => e.AM_TTL_INCM_NXT_MNTH).HasColumnType("money");

                entity.Property(e => e.AM_TTL_INCM_PRVS_MNTH).HasColumnType("money");

                entity.Property(e => e.AM_UNERND_SELF_EMPLYMNT_INCM).HasColumnType("money");

                entity.Property(e => e.AM_UNERND_SELF_EMPLYMNT_INCM2).HasColumnType("money");

                entity.Property(e => e.AM_YRLY_SLRY).HasColumnType("numeric(8, 2)");

                entity.Property(e => e.CD_CNTY).HasColumnType("numeric(3, 0)");

                entity.Property(e => e.DT_EMPLYMNT_END).HasColumnType("datetime");

                entity.Property(e => e.DT_EMPLYMNT_STRT).HasColumnType("datetime");

                entity.Property(e => e.DT_VQ_Exemption).HasColumnType("datetime");

                entity.Property(e => e.FL_GOOD_RSN_QUIT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_MNG_PRPRTY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_QLFY_STMPS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_SELF_EMPLYD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_TTL_RPRSNTTV_PAY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_VLNTRY_QUIT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_EMPLOYER).HasDefaultValueSql("((1))");

                entity.Property(e => e.ID_FRQNCY_EMPLYMNT).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.ID_INCM_TYPE).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.ID_WRKR_RMNDR).HasDefaultValueSql("((0))");

                entity.Property(e => e.NM_EMPLYR)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_INSRNC_WCOMP)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_PRPRTY)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_EMPLYR_PHONE)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_HOURS_MNG_PRPRTY).HasColumnType("numeric(3, 0)");

                entity.Property(e => e.NO_HOURS_MNG_PRPRTY_MTH2).HasColumnType("numeric(3, 0)");

                entity.Property(e => e.NO_HOURS_WRK_PRWK_MTH1).HasColumnType("numeric(3, 0)");

                entity.Property(e => e.NO_HOURS_WRK_PRWK_MTH2).HasColumnType("numeric(3, 0)");

                entity.Property(e => e.NO_MNTHS).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.TX_BSNSS_TYPE).HasColumnType("text");

                entity.Property(e => e.TX_PAY_DAY)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_RSN_QUIT).HasColumnType("text");

                entity.Property(e => e.TX_SLCTD_FLDS).HasColumnType("text");

                entity.Property(e => e.TX_VRFCTN_EMPLYMNT)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')");

                entity.HasOne(d => d.ID_INCM_TYPENavigation)
                    .WithMany(p => p.EMPLOYMENT)
                    .HasForeignKey(d => d.ID_INCM_TYPE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FEMPL02");

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.EMPLOYMENT)
                    .HasForeignKey(d => d.ID_MMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FEMPL01");
            });

            modelBuilder.Entity<FA_STATUS>(entity =>
            {
                entity.HasKey(e => e.ID_FA_STTS)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_MMBR, "_dta_index_FA_STATUS_c_5_844582097__K2")
                    .IsClustered();

                entity.Property(e => e.DT_CASE_CLSD_WILLORHAS).HasColumnType("datetime");

                entity.Property(e => e.FL_FA_CASE_CLSD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_LAST_MNTH_FA)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_RECERT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_THIS_CNTY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_CNTCT_INFO).HasColumnType("text");

                entity.Property(e => e.TX_CNTY_OTHR).HasColumnType("text");

                entity.HasOne(d => d.ID_CNTY_STATENavigation)
                    .WithMany(p => p.FA_STATUS)
                    .HasForeignKey(d => d.ID_CNTY_STATE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FFAST02");

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.FA_STATUS)
                    .HasForeignKey(d => d.ID_MMBR)
                    .HasConstraintName("FFAST01");
            });

            modelBuilder.Entity<FORMS_OACIS>(entity =>
            {
                entity.HasKey(e => new { e.FORM_NO_CASE, e.CD_FORM })
                    .HasName("PK_FORMS_OACIS_1");

                entity.HasIndex(e => new { e.CD_FORM, e.FORM_NO_CASE }, "UNQ__FORMS_OACIS__CD_FORM")
                    .IsUnique();

                entity.Property(e => e.FORM_NO_CASE)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_FORM)
                    .HasMaxLength(4)
                    .IsFixedLength();

                entity.Property(e => e.DT_ADDI).HasColumnType("datetime");

                entity.Property(e => e.DT_CREATED).HasColumnType("datetime");

                entity.Property(e => e.DT_MODIFIED).HasColumnType("datetime");

                entity.Property(e => e.DT_PRINTED).HasColumnType("datetime");

                entity.HasOne(d => d.CD_FORMNavigation)
                    .WithMany(p => p.FORMS_OACIS)
                    .HasPrincipalKey(p => p.CD_FORM)
                    .HasForeignKey(d => d.CD_FORM)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_FORMS_OACIS_REF_FORMS");
            });

            modelBuilder.Entity<FORM_657>(entity =>
            {
                entity.HasKey(e => e.NO_CASE);

                entity.Property(e => e.NO_CASE).HasColumnType("numeric(9, 0)");

                entity.Property(e => e.AM_BENE_CHNGE_FROM).HasColumnType("money");

                entity.Property(e => e.AM_BENE_CHNGE_TO).HasColumnType("money");

                entity.Property(e => e.AM_FS_RCVD_MNTH_ONE).HasColumnType("money");

                entity.Property(e => e.AM_FS_RCVD_MNTH_TWO).HasColumnType("money");

                entity.Property(e => e.DT_BENE_EFFT).HasColumnType("datetime");

                entity.Property(e => e.DT_CERT_END).HasColumnType("datetime");

                entity.Property(e => e.DT_CERT_FROM).HasColumnType("datetime");

                entity.Property(e => e.DT_FS_BENE_STOP).HasColumnType("datetime");

                entity.Property(e => e.DT_FS_END).HasColumnType("datetime");

                entity.Property(e => e.DT_FS_LAST_BENE).HasColumnType("datetime");

                entity.Property(e => e.DT_FS_REAPPLY).HasColumnType("datetime");

                entity.Property(e => e.DT_NOTICE).HasColumnType("datetime");

                entity.Property(e => e.FL_ACT_BECAUSE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_BENE_INFO)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_BENE_STOP)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_DEPT_POLICY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_FS_APPRV)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_FS_BENE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_OTHR_ACT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_REV_ACT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_TELEPHONE)
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.TXT_ACT_BECAUSE).HasColumnType("text");

                entity.Property(e => e.TXT_DEP_POLICY).HasColumnType("text");

                entity.Property(e => e.TXT_FC_OTHR_ACT).HasColumnType("text");

                entity.Property(e => e.TXT_FS_INFO_NEEDED).HasColumnType("text");
            });

            modelBuilder.Entity<FORM_879>(entity =>
            {
                entity.HasKey(e => e.NO_CASE);

                entity.Property(e => e.NO_CASE)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ALT_OFFICE_NO)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.DT_BENEFITS).HasColumnType("datetime");

                entity.Property(e => e.DT_INTERVIEW).HasColumnType("datetime");

                entity.Property(e => e.DT_STAMPS_END).HasColumnType("datetime");

                entity.Property(e => e.FL_BENEFITS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_INTERVIEW)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_NOTIFY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_OFF)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<FORM_APPOINTMENT>(entity =>
            {
                entity.HasKey(e => e.NO_CASE);

                entity.Property(e => e.NO_CASE)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ALT_OFFICE_NO)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.DT_OFF_IVIEW).HasColumnType("datetime");

                entity.Property(e => e.DT_TELE_IVIEW).HasColumnType("datetime");

                entity.Property(e => e.FL_OFFICE)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TXT_WRKR_NOTES).HasColumnType("ntext");
            });

            modelBuilder.Entity<INSURANCE>(entity =>
            {
                entity.HasKey(e => e.ID_INSRNC)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_INSRNC_PAYER, "FINSU01_FK");

                entity.Property(e => e.AM_PREMIUM).HasColumnType("money");

                entity.Property(e => e.AM_PREMIUM_MNTHLY).HasColumnType("money");

                entity.Property(e => e.AM_TTL_PREMIUM_PAID).HasColumnType("money");

                entity.Property(e => e.CD_MONTH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_PREMIUM_PAID).HasColumnType("datetime");

                entity.Property(e => e.ID_FRQNCY_PREMIUM).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.ID_INSRNC_PAYER).HasColumnType("numeric(1, 0)");

                entity.Property(e => e.NO_HH_MMBR).HasColumnType("numeric(1, 0)");

                entity.Property(e => e.TX_VRFCTN_INSRNC)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TX_VRFCTN_INSRNC_OTHER)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')");

                entity.HasOne(d => d.ID_INSRNC_PAYERNavigation)
                    .WithMany(p => p.INSURANCE)
                    .HasForeignKey(d => d.ID_INSRNC_PAYER)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FINSU01");

                entity.HasOne(d => d.ID_PRVDR_NAMENavigation)
                    .WithMany(p => p.INSURANCE)
                    .HasForeignKey(d => d.ID_PRVDR_NAME)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FINSU02");
            });

            modelBuilder.Entity<INSURANCE_OTHER_PAYER>(entity =>
            {
                entity.HasKey(e => e.ID_INSRNC_OTHR_PAYER)
                    .IsClustered(false);

                entity.Property(e => e.AM_PREMIUM_OTHR_PAYER).HasColumnType("money");

                entity.Property(e => e.DT_INSRNC_OTHR_PAYER).HasColumnType("datetime");

                entity.Property(e => e.FL_INSRNC_PAY_MMBR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_INSRNC_PAY_ONGOING)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_PAY_HH_MMBR_MNTHLY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_PAY_PREMIUM_CRRNT_MNTH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_FRQNCY_INSRNC_OTHR_PAYER).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.TX_VRFCTN_INSRNC_OTHR_PAYER)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')");

                entity.HasOne(d => d.ID_INSRNCNavigation)
                    .WithMany(p => p.INSURANCE_OTHER_PAYER)
                    .HasForeignKey(d => d.ID_INSRNC)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FOINS01");

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.INSURANCE_OTHER_PAYER)
                    .HasForeignKey(d => d.ID_MMBR)
                    .HasConstraintName("FOINS03");
            });

            modelBuilder.Entity<ISSUANCE>(entity =>
            {
                entity.HasKey(e => new { e.ISS_CASENO, e.ISS_ACDTE })
                    .HasName("pk_ISS_Case");

                entity.Property(e => e.ISS_CASENO)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ISS_ACDTE)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ISS_ACTON)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ISS_ADDR)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ISS_ADMIN)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ISS_AMT)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ISS_COUNTY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ISS_HHTYP)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ISS_IAMT)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ISS_ISSTP)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ISS_NAME)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ISS_RECAT)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ISS_RSTAT)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ISS_STID)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<LOGIN>(entity =>
            {
                entity.HasKey(e => e.ID_FA_SSN)
                    .IsClustered(false);

                entity.Property(e => e.ID_FA_SSN)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<MAINFRAME_SECURITY>(entity =>
            {
                entity.HasKey(e => e.ID_PAYROLL)
                    .IsClustered(false);

                entity.Property(e => e.ID_PAYROLL)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_FULL_NAME)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<MEAL>(entity =>
            {
                entity.HasKey(e => e.ID_MEAL)
                    .IsClustered(false);

                entity.Property(e => e.AM_MEAL_COST_HOH).HasColumnType("money");

                entity.Property(e => e.AM_MEAL_MMBR_PAY).HasColumnType("money");

                entity.Property(e => e.CD_MONTH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_FRQNCY_MEAL_COST).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.ID_FRQNCY_MEAL_PAY).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.NO_MEALS).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.TX_VRFCTN_MEAL)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')");

                entity.HasOne(d => d.ID_EMPLYMNTNavigation)
                    .WithMany(p => p.MEAL)
                    .HasForeignKey(d => d.ID_EMPLYMNT)
                    .HasConstraintName("FMEAL03");

                entity.HasOne(d => d.ID_MEAL_OTHERNavigation)
                    .WithMany(p => p.MEAL)
                    .HasForeignKey(d => d.ID_MEAL_OTHER)
                    .HasConstraintName("FMEAL02");

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.MEAL)
                    .HasForeignKey(d => d.ID_MMBR)
                    .HasConstraintName("FMEAL01");

                entity.HasOne(d => d.ID_RSRCNavigation)
                    .WithMany(p => p.MEAL)
                    .HasForeignKey(d => d.ID_RSRC)
                    .HasConstraintName("FMEAL04");
            });

            modelBuilder.Entity<MEAL_OTHER>(entity =>
            {
                entity.HasKey(e => e.ID_MEAL_OTHER)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_CASE_NMBR, "FRBCS01_FK");

                entity.Property(e => e.CD_MONTH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_MEAL_OTHR_FRST)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_MEAL_OTHR_LST)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_MEAL_OTHR_MDL)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_MEAL_OTHR_SFX)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_CASE_NMBRNavigation)
                    .WithMany(p => p.MEAL_OTHER)
                    .HasForeignKey(d => d.ID_CASE_NMBR)
                    .HasConstraintName("FRBCS01");
            });

            modelBuilder.Entity<MEDICAL_EXPENSE>(entity =>
            {
                entity.HasKey(e => e.ID_MDCL_EXPNS)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_MMBR, "FMDEX02_FK");

                entity.HasIndex(e => e.ID_TRIPS, "FMDEX03_FK");

                entity.HasIndex(e => e.ID_PRVDR_NAME, "FMDEX04_FK");

                entity.HasIndex(e => new { e.ID_MDCL_EXPNS, e.ID_MMBR }, "_dta_index_MEDICAL_EXPENSE_c_5_1006014715__K1_K2")
                    .IsClustered();

                entity.Property(e => e.AM_AGREED_MNTHLY).HasColumnType("money");

                entity.Property(e => e.AM_CALCLTD_MNTHLY).HasColumnType("money");

                entity.Property(e => e.AM_ME_TTL_ALLWBL).HasColumnType("money");

                entity.Property(e => e.AM_PAY_MNTHLY).HasColumnType("money");

                entity.Property(e => e.AM_RECALCLTD_MNTHLY).HasColumnType("money");

                entity.Property(e => e.AM_RMNNG_OWED).HasColumnType("money");

                entity.Property(e => e.AM_TTL_ONETIME_RX).HasColumnType("money");

                entity.Property(e => e.AM_TTL_ONGOING_RX).HasColumnType("money");

                entity.Property(e => e.AM_UNERND_INCM).HasColumnType("money");

                entity.Property(e => e.CD_MONTH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_SRVC).HasColumnType("datetime");

                entity.Property(e => e.FL_ASSSTD_BY_OTHR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_AVG_ONETIME)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_INSRNC_PAID_ALL)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_ONETIME)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_ONETIME_USE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_PAY_BILL_MNTHLY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_RPYMNT_AGRMNT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_FRQNCY_ME_DETAIL).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.NO_ACCT_MDCL)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_MEALS_MNTHLY).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.NO_MNTHS_OWED).HasColumnType("numeric(3, 0)");

                entity.Property(e => e.NO_MNTHS_RMNNG).HasColumnType("numeric(3, 0)");

                entity.HasOne(d => d.ID_MDCTN_APPLNCNavigation)
                    .WithMany(p => p.MEDICAL_EXPENSE)
                    .HasForeignKey(d => d.ID_MDCTN_APPLNC)
                    .HasConstraintName("FMDEX04");

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.MEDICAL_EXPENSE)
                    .HasForeignKey(d => d.ID_MMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FMDEX02");

                entity.HasOne(d => d.ID_PRVDR_NAMENavigation)
                    .WithMany(p => p.MEDICAL_EXPENSE)
                    .HasForeignKey(d => d.ID_PRVDR_NAME)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FMDEX01");

                entity.HasOne(d => d.ID_SMRY_MDCL_EXPNSNavigation)
                    .WithMany(p => p.MEDICAL_EXPENSE)
                    .HasForeignKey(d => d.ID_SMRY_MDCL_EXPNS)
                    .HasConstraintName("FMDEX05");

                entity.HasOne(d => d.ID_TRIPSNavigation)
                    .WithMany(p => p.MEDICAL_EXPENSE)
                    .HasForeignKey(d => d.ID_TRIPS)
                    .HasConstraintName("FMDEX03");
            });

            modelBuilder.Entity<MEDICAL_EXPENSE_ONGOING>(entity =>
            {
                entity.HasKey(e => e.ID_ME_ONGOING)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_MDCL_EXPNS, "_dta_index_MEDICAL_EXPENSE_ONGOING_5_1760777380__K2");

                entity.Property(e => e.AM_MNTHLY_ONGOING).HasColumnType("money");

                entity.Property(e => e.DT_TRNSCTN).HasColumnType("datetime");

                entity.Property(e => e.NO_OF_MNTHS).HasColumnType("numeric(2, 0)");

                entity.HasOne(d => d.ID_MDCL_EXPNSNavigation)
                    .WithMany(p => p.MEDICAL_EXPENSE_ONGOING)
                    .HasForeignKey(d => d.ID_MDCL_EXPNS)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FMEON01");
            });

            modelBuilder.Entity<MEDICAL_EXPENSE_OTHER_PAYER>(entity =>
            {
                entity.HasKey(e => e.ID_ME_OTHR_PAYER)
                    .IsClustered(false);

                entity.Property(e => e.AM_ME_OTHR_PAY).HasColumnType("money");

                entity.Property(e => e.DT_ME_OTHR_PAYER).HasColumnType("datetime");

                entity.Property(e => e.FL_ME_ONETIME)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_ME_PAID_BFR_AMNT_DTRMND)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_ME_PAY_CRRNT_MNTH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_ME_PAY_MMBR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_MDCL_EXPNSNavigation)
                    .WithMany(p => p.MEDICAL_EXPENSE_OTHER_PAYER)
                    .HasForeignKey(d => d.ID_MDCL_EXPNS)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FOMED01");

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.MEDICAL_EXPENSE_OTHER_PAYER)
                    .HasForeignKey(d => d.ID_MMBR)
                    .HasConstraintName("FOMED03");
            });

            modelBuilder.Entity<MEDICAL_NOTES>(entity =>
            {
                entity.HasKey(e => e.ID_MDCL_NOTES)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_MDCL_EXPNS, "FMDNT01_FK");

                entity.HasIndex(e => e.ID_REF_MDCL_NOTE_TYPE, "FRMNT01_FK");

                entity.Property(e => e.TX_MDCL_NOTES_DSCR).HasColumnType("text");

                entity.HasOne(d => d.ID_MDCL_EXPNSNavigation)
                    .WithMany(p => p.MEDICAL_NOTES)
                    .HasForeignKey(d => d.ID_MDCL_EXPNS)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FMDNT01");

                entity.HasOne(d => d.ID_REF_MDCL_NOTE_TYPENavigation)
                    .WithMany(p => p.MEDICAL_NOTES)
                    .HasForeignKey(d => d.ID_REF_MDCL_NOTE_TYPE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FMDNT02");
            });

            modelBuilder.Entity<MEMBER>(entity =>
            {
                entity.HasKey(e => e.ID_MMBR)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_CASE_NMBR, "FMMBR01_FK");

                entity.HasIndex(e => e.ID_RACE_CODE, "FMMBR03_FK");

                entity.HasIndex(e => new { e.ID_CASE_NMBR, e.ID_MMBR, e.FL_HOH, e.FL_NON_MMBR }, "IX_IdCaseNmbr_IdMmbr_FlHoh_Fl_NonMmbr");

                entity.Property(e => e.CD_CASE_CRTD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_CNVCTD_FLN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_DSQLFD_PRTCPNT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_EDCTN_LVL).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.CD_FLEEING_VLTR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_FRDLNT_MSRPRSNTTN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_MMBR_ELIG)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_QLTY_SLLNG)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_RSDNT_TRTMNT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_SEX)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_STMPS_MISUSE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DPNDNT_NMBR)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_BRTH).HasColumnType("datetime");

                entity.Property(e => e.DT_VQEXEMPTORCOMPLY).HasColumnType("datetime");

                entity.Property(e => e.FL_ABAWD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_CLOSE_RLTN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_CRRNT_FS_CRTFD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_CTGRCLLY_ELGBL)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_DHR_EMPL)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_ELGBL_ALIEN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_FRMR_HH_MMBR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_GIVE_FA_MONEY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_GROUP_HOME)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_HOH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_IN_SCHOOL)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_MGRNT_SSNL)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_NON_MMBR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('N')")
                    .IsFixedLength();

                entity.Property(e => e.FL_NON_MMBR_RSDNT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_PAYS_BILLS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_PAYS_MEAL)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_PAYS_ROOM)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_PRCHS_PRPRS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_PRNTL_GDNC)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_RM)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_SNCTN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_US_CTZN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_WRKNG)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_WRK_RGSTRTN_EXMPT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FullName)
                    .HasMaxLength(66)
                    .IsUnicode(false)
                    .HasComputedColumnSql("(rtrim(((coalesce(rtrim([NM_MMBR_FRST])+' ','')+coalesce(rtrim([NM_MMBR_MDL])+' ',''))+coalesce(rtrim([NM_MMBR_LST])+' ',''))+coalesce(rtrim([NM_MMBR_SFX]),'')))", true);

                entity.Property(e => e.NM_MMBR_FRST)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_MMBR_LST)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_MMBR_MDL)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_MMBR_SFX)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_BRDR_HH).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.NO_CELLPHONE)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_SSN)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_VRFCTN_ALIEN_STTS)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TX_VRFCTN_EXPDT)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.VOTER_ANS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')")
                    .IsFixedLength();

                entity.Property(e => e.VOTER_TXT)
                    .HasColumnType("text")
                    .HasDefaultValueSql("(' ')");

                entity.HasOne(d => d.ID_CASE_NMBRNavigation)
                    .WithMany(p => p.MEMBER)
                    .HasForeignKey(d => d.ID_CASE_NMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FMMBR01");

                entity.HasOne(d => d.ID_RACE_CODENavigation)
                    .WithMany(p => p.MEMBER)
                    .HasForeignKey(d => d.ID_RACE_CODE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FMMBR03");

                entity.HasOne(d => d.ID_REF_CERT_ELIGNavigation)
                    .WithMany(p => p.MEMBERID_REF_CERT_ELIGNavigation)
                    .HasForeignKey(d => d.ID_REF_CERT_ELIG)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FMMBR04");

                entity.HasOne(d => d.ID_REF_CERT_ELIG_MNTH2Navigation)
                    .WithMany(p => p.MEMBERID_REF_CERT_ELIG_MNTH2Navigation)
                    .HasForeignKey(d => d.ID_REF_CERT_ELIG_MNTH2)
                    .HasConstraintName("FMMBR05");

                entity.HasOne(d => d.ID_WORK_CODENavigation)
                    .WithMany(p => p.MEMBERID_WORK_CODENavigation)
                    .HasForeignKey(d => d.ID_WORK_CODE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FMMBR02");

                entity.HasOne(d => d.ID_WORK_CODE_MNTH2Navigation)
                    .WithMany(p => p.MEMBERID_WORK_CODE_MNTH2Navigation)
                    .HasForeignKey(d => d.ID_WORK_CODE_MNTH2)
                    .HasConstraintName("FMMBR06");

                entity.HasMany(d => d.ID_INSRNC)
                    .WithMany(p => p.ID_MMBR)
                    .UsingEntity<Dictionary<string, object>>(
                        "PIV_MMBR_INSRNC",
                        l => l.HasOne<INSURANCE>().WithMany().HasForeignKey("ID_INSRNC").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FMBRP02"),
                        r => r.HasOne<MEMBER>().WithMany().HasForeignKey("ID_MMBR").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FMBRP01"),
                        j =>
                        {
                            j.HasKey("ID_MMBR", "ID_INSRNC");

                            j.ToTable("PIV_MMBR_INSRNC");

                            j.HasIndex(new[] { "ID_INSRNC" }, "PIV_MMBR_INS2_FK");

                            j.HasIndex(new[] { "ID_MMBR" }, "PIV_MMBR_INS_FK");
                        });
            });

            modelBuilder.Entity<MEMBER_TRNSFR_RSRC>(entity =>
            {
                entity.HasKey(e => e.ID_MMBR_RSRC)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_RSRC_CODE, "FMTRR01_FK");

                entity.HasIndex(e => e.ID_MMBR, "FRTRR01_FK");

                entity.Property(e => e.AM_TRNSFR_RSRC_RCVD).HasColumnType("money");

                entity.Property(e => e.AM_VALUE).HasColumnType("money");

                entity.Property(e => e.CD_MONTH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ACTN_TRNSFR_RSRC).HasColumnType("datetime");

                entity.Property(e => e.FL_EXCLD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_TRNSFR_QLFY_FA)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_DSPSL_RSN).HasColumnType("text");

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.MEMBER_TRNSFR_RSRC)
                    .HasForeignKey(d => d.ID_MMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FMTRR01");

                entity.HasOne(d => d.ID_RSRC_CODENavigation)
                    .WithMany(p => p.MEMBER_TRNSFR_RSRC)
                    .HasForeignKey(d => d.ID_RSRC_CODE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FMTRR02");
            });

            modelBuilder.Entity<NAC_MATCH>(entity =>
            {
                entity.HasKey(e => new { e.ID_MMBR, e.SRCH_BENE_MM });

                entity.Property(e => e.SRCH_BENE_MM)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.DT_NAC_MATCH).HasColumnType("datetime");

                entity.Property(e => e.FL_NAC_MATCH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FullName)
                    .HasMaxLength(66)
                    .IsUnicode(false);

                entity.Property(e => e.LEX_ID_SCORE)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.MATCH_CD)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NO_SSN)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<OACIS_CASE_BEING_WORKED>(entity =>
            {
                entity.HasKey(e => new { e.NO_CASE, e.ID_USER });

                entity.Property(e => e.NO_CASE).HasColumnType("decimal(9, 0)");

                entity.Property(e => e.ID_USER)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_CRTD).HasColumnType("datetime");
            });

            modelBuilder.Entity<OACIS_ERRORS>(entity =>
            {
                entity.HasKey(e => e.ID_ERROR);

                entity.Property(e => e.CD_REF_MODULE)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ERROR).HasColumnType("datetime");

                entity.Property(e => e.ID_USER)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_ERROR).IsUnicode(false);

                entity.Property(e => e.TX_TARGET)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<OLE_DB_Destination>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OLE DB Destination");

                entity.Property(e => e.AD_CITY_STATE)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AD_MLNG_STREET1)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.AD_MLNG_STREET2)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.AD_ZIP4)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.AD_ZIP5)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_ADJSTD_INCM)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_CHILD_SPPRT_PAID)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_CLAIM_CLLCTN)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_CURR_MM_ALLMNT)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDNT_CARE)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_10)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_11)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_12)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_13)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_14)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_15)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_16)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_17)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_18)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_19)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_20)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_21)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_22)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_23)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_24)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_25)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_26)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_27)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_28)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_4)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_5)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_6)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_7)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_8)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_9)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_10)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_11)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_12)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_13)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_14)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_15)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_16)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_17)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_18)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_19)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_20)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_21)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_22)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_23)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_24)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_25)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_26)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_27)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_28)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_4)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_5)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_6)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_7)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_8)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_9)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_10)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_11)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_12)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_13)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_14)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_15)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_16)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_17)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_18)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_19)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_20)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_21)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_22)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_23)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_24)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_25)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_26)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_27)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_28)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_4)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_5)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_6)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_7)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_8)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_9)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_10)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_11)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_12)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_13)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_14)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_15)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_16)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_17)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_18)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_19)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_20)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_21)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_22)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_23)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_24)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_25)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_26)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_27)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_28)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_4)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_5)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_6)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_7)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_8)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_9)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_10)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_11)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_12)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_13)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_14)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_15)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_16)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_17)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_18)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_19)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_20)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_21)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_22)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_23)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_24)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_25)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_26)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_27)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_28)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_4)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_5)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_6)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_7)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_8)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_9)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_10)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_11)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_12)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_13)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_14)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_15)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_16)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_17)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_18)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_19)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_20)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_21)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_22)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_23)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_24)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_25)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_26)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_27)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_28)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_4)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_5)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_6)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_7)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_8)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_9)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_10)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_11)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_12)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_13)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_14)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_15)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_16)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_17)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_18)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_19)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_20)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_21)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_22)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_23)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_24)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_25)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_26)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_27)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_28)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_4)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_5)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_6)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_7)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_8)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_9)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_10)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_11)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_12)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_13)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_14)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_15)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_16)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_17)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_18)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_19)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_20)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_21)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_22)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_23)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_24)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_25)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_26)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_27)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_28)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_4)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_5)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_6)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_7)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_8)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_9)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_EXCSS_SHLTR)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_EXCSS_SHLTR_DEDUCT)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_FS_ALLTMNT)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_GROSS_INCM)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_GROSS_INCM_TSTD)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_GROSS_MDCL_EXPNS)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_HELD_MNTH_ALLMNT)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_INCM_DEDUCT)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_INIT_ISSUE)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_LAST_CERT)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_LAST_ISSUE)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_NET_ADJSTD_INCM)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_NET_ERND_INCM)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_NET_INCM_TSTD)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_OLD_ALLTMNT)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_OTHR_EXPNS)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.AM_OTHR_INCM)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_RATE_RDCTN)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_REAL_ESTATE_TAX)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.AM_RENT_MRTGG)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.AM_REPLACE_FS)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_RSRC)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_RSTRTN_RETRO_ADJ)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_RSTRTN_RETRO_RSN)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.AM_RTRN_FS)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_STNDRD_DEDUCT)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_THRFTY_FOOD_PLAN)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_TTL_ERND_INCM)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_TTL_INSRNC)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.AM_TTL_SHLTR)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_UTLTS)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.BNFT_DELETE_IND)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_ADVCTN)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_AFTER_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_APPL_DEL_RSN)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_APPL_PRCSS_STD)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_CASE_STATUS)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_CHK_DIGIT)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_CLAIM)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_CNTY)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DOS)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDNDT_SSI_VA_INCM_TYPE_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_1)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_10)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_11)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_12)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_13)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_14)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_15)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_16)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_17)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_18)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_19)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_2)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_20)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_21)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_22)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_23)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_24)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_25)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_26)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_27)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_28)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_3)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_4)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_5)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_6)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_7)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_8)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_9)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_HH_CASE_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_HH_RACE)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_HH_SEX)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_LANGUAGE_IND)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_MAIL_ISSUE)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_MR_STTS)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_NTC_IND)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_NTC_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_OFFICE)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_PPI_SITE)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_REISSUE_CARD_IND)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_REPLACE_FS_RSN)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_REVIEW_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_RTRN_FS_RSN)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_TRANS)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_UTLTY_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_10A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_11A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_12A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_13A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_14A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_15A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_1A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_2A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_3A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_4A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_5A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_6A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_7A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_8A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_9A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.DT_APPL)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_BEGIN_CERT)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.DT_BNFT_DELETE)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_1)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_10)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_11)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_12)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_13)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_14)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_15)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_16)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_17)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_18)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_19)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_2)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_20)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_21)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_22)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_23)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_24)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_25)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_26)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_27)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_28)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_3)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_4)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_5)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_6)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_7)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_8)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_9)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_INITIAL_APPL)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_INITIAL_ISSUE)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_LAST_CERT)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.DT_LAST_ISSUE)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_PRORATED_BEN)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_REPLACE_FS)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.DT_REPLACE_FS_ENTRY)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_REVIEW)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.DT_RTRN_FS)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.DT_RTRN_FS_ENTRY)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_START_ISSUE)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.DT_TRANS_EFF)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.EBT_ACCNT_NMBR_IND)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_ADVCTN)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_EBT_SWEEP)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_EXPEDITE)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ID_OPERATOR)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.ID_STATE_ISS)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ID_TRNSCTN)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.JUNK)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NM_AUTH_REP1)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.NM_AUTH_REP2)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_1)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_10)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_11)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_12)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_13)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_14)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_15)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_16)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_17)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_18)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_19)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_2)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_20)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_21)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_22)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_23)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_24)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_25)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_26)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_27)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_28)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_3)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_4)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_5)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_6)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_7)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_8)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_9)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_HH)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NO_CASE)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_10)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_11)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_12)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_13)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_14)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_15)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_16)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_17)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_18)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_19)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_2)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_20)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_21)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_22)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_23)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_24)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_25)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_26)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_27)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_28)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_3)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_4)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_5)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_6)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_7)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_8)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_9)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_1)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_10)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_11)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_12)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_13)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_14)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_15)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_16)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_17)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_18)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_19)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_2)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_20)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_21)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_22)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_23)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_24)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_25)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_26)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_27)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_28)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_3)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_4)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_5)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_6)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_7)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_8)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_9)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_1)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_10)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_11)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_12)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_13)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_14)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_15)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_16)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_17)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_18)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_19)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_2)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_20)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_21)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_22)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_23)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_24)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_25)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_26)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_27)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_28)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_3)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_4)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_5)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_6)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_7)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_8)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_9)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_1)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_10)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_11)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_12)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_13)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_14)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_15)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_16)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_17)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_18)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_19)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_2)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_20)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_21)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_22)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_23)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_24)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_25)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_26)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_27)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_28)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_3)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_4)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_5)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_6)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_7)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_8)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_9)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_1)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_10)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_11)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_12)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_13)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_14)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_15)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_16)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_17)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_18)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_19)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_2)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_20)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_21)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_22)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_23)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_24)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_25)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_26)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_27)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_28)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_3)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_4)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_5)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_6)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_7)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_8)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_9)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_EBT_ACCNT)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.NO_HH)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_HH_MMBR_INCLD)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_HH_PHONE)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NO_TEMP_WORK)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.NO_WRKR)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.NO_X_REF)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.REPLACED_IDS)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.RESIDING_CNTY)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.RESIDING_OFFICE)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.STOLEN_IDS)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.TRANS_EFF_TIME)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.TX_CLAIM_LOG_DATA)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UPDATE_COUNT)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("UPDATE-COUNT");
            });

            modelBuilder.Entity<OUTSIDE_DEPENDENT>(entity =>
            {
                entity.HasKey(e => e.ID_DPNDNT)
                    .HasName("PK_DEPENDENT")
                    .IsClustered(false);

                entity.HasIndex(e => new { e.ID_MMBR, e.ID_DPNDNT }, "_dta_index_OUTSIDE_DEPENDENT_5_853578079__K2_K1");

                entity.Property(e => e.DT_DPNDNT_DOB).HasColumnType("datetime");

                entity.Property(e => e.FL_CHILD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_DPNDNT_FRST)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_DPNDNT_LST)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_DPNDNT_MDL)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_DPNDNT_SFX)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.OUTSIDE_DEPENDENT)
                    .HasForeignKey(d => d.ID_MMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FDPNT01");

                entity.HasMany(d => d.ID_CRT_ORDRD_AMNT)
                    .WithMany(p => p.ID_DPNDNT)
                    .UsingEntity<Dictionary<string, object>>(
                        "PIV_COURT_ORDRD",
                        l => l.HasOne<COURT_ORDERED_AMOUNT>().WithMany().HasForeignKey("ID_CRT_ORDRD_AMNT").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FDPCO02"),
                        r => r.HasOne<OUTSIDE_DEPENDENT>().WithMany().HasForeignKey("ID_DPNDNT").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FDPCO01"),
                        j =>
                        {
                            j.HasKey("ID_DPNDNT", "ID_CRT_ORDRD_AMNT");

                            j.ToTable("PIV_COURT_ORDRD");

                            j.HasIndex(new[] { "ID_CRT_ORDRD_AMNT" }, "PIV_DPDNT_COURT_ORDER2_FK");

                            j.HasIndex(new[] { "ID_DPNDNT" }, "PIV_DPDNT_COURT_ORDER_FK");
                        });
            });

            modelBuilder.Entity<PIV_MMBR_RLTN>(entity =>
            {
                entity.HasKey(e => e.ID_PIV_MMBR_RLTN);

                entity.HasIndex(e => e.ID_MMBR1, "PIV_MMBR_RLTN2_FK");

                entity.HasIndex(e => e.ID_RLTN, "PIV_MMBR_RLTN_FK");

                entity.Property(e => e.FL_NRST_RLTN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_MMBR1Navigation)
                    .WithMany(p => p.PIV_MMBR_RLTNID_MMBR1Navigation)
                    .HasForeignKey(d => d.ID_MMBR1)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FPMBR01");

                entity.HasOne(d => d.ID_MMBR2Navigation)
                    .WithMany(p => p.PIV_MMBR_RLTNID_MMBR2Navigation)
                    .HasForeignKey(d => d.ID_MMBR2)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FPMBR03");

                entity.HasOne(d => d.ID_RLTNNavigation)
                    .WithMany(p => p.PIV_MMBR_RLTN)
                    .HasForeignKey(d => d.ID_RLTN)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FPMBR02");
            });

            modelBuilder.Entity<Query>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DT_APPRVL).HasColumnType("datetime");

                entity.Property(e => e.TX_CASE_STTS_DSCR)
                    .HasMaxLength(75)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.em_hoh).HasColumnType("text");

                entity.Property(e => e.no_case).HasColumnType("decimal(9, 0)");
            });

            modelBuilder.Entity<REF_ADDRESS_TYPE>(entity =>
            {
                entity.HasKey(e => e.ID_REF_ADDRSS_TYPE);

                entity.Property(e => e.ID_REF_ADDRSS_TYPE)
                    .HasColumnType("numeric(2, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CD_REF_ADDRSS_TYPE)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_CASE_CTGRY>(entity =>
            {
                entity.HasKey(e => e.ID_CASE_CTGRY)
                    .IsClustered(false);

                entity.Property(e => e.CD_CASE_CTGRY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_CASE_CTGRY_DSCR)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_CASE_STATUS_TYPE>(entity =>
            {
                entity.HasKey(e => e.ID_REF_CASE_STATUS_TYPE)
                    .HasName("PK_REF_CASE_STATUS")
                    .IsClustered(false);

                entity.Property(e => e.ID_REF_CASE_STATUS_TYPE)
                    .HasColumnType("numeric(2, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CD_CASE_STTS_TYPE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_CASE_STTS_DSCR)
                    .HasMaxLength(75)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_CERT_ELIG>(entity =>
            {
                entity.HasKey(e => e.ID_REF_CERT_ELIG);

                entity.Property(e => e.CD_CERT_ELIG)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_CERT_ELIG_DSCR).HasColumnType("text");
            });

            modelBuilder.Entity<REF_CNTY_ADDRESS>(entity =>
            {
                entity.HasKey(e => e.ID_CNTY_ADDRESS)
                    .HasName("PK_REF_CNTY_ADDR");

                entity.Property(e => e.AD_CITY)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AD_STREET1)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AD_STREET2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AD_ZIP)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AD_ZIP4)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_OFFICE_FAX)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_OFFICE_PHONE)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_COUNTY_GROUP_EMAIL>(entity =>
            {
                entity.HasKey(e => new { e.ID_CNTY_STATE, e.CD_TRCKNG_OFFC })
                    .HasName("PK__REF_COUNTY_GROUP__643A57D6");

                entity.Property(e => e.TX_EMAIL)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<REF_COUNTY_STATE>(entity =>
            {
                entity.HasKey(e => e.ID_CNTY_STATE)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_REF_STATE, "FRCST01_FK");

                entity.Property(e => e.CD_CNTY).HasColumnType("numeric(3, 0)");

                entity.Property(e => e.CD_CNTY_DSCR)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_REF_STATE)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_REF_STATENavigation)
                    .WithMany(p => p.REF_COUNTY_STATE)
                    .HasForeignKey(d => d.ID_REF_STATE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FRCST01");
            });

            modelBuilder.Entity<REF_COURT_ORDERED_TYPE>(entity =>
            {
                entity.HasKey(e => e.ID_CRT_ORDRD)
                    .IsClustered(false);

                entity.Property(e => e.ID_CRT_ORDRD)
                    .HasColumnType("numeric(1, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CD_CRT_ORDRD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_CRT_ORDRD_DSCR).HasColumnType("text");
            });

            modelBuilder.Entity<REF_DEPENDENT_CARE_LIMIT>(entity =>
            {
                entity.HasKey(e => e.ID_DPNDNT_CARE_LIMIT)
                    .IsClustered(false);

                entity.Property(e => e.ID_DPNDNT_CARE_LIMIT)
                    .HasColumnType("numeric(1, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AM_DPNDNT_LIMIT).HasColumnType("money");

                entity.Property(e => e.CD_DPNDNT_CARE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_DPNDNT_CARE_DSCR)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_DHR_EMPLOYEE>(entity =>
            {
                entity.HasKey(e => e.ID_SSN_DHREMP)
                    .IsClustered(false);

                entity.Property(e => e.ID_SSN_DHREMP)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_EARNED_INCOME_TYPE>(entity =>
            {
                entity.HasKey(e => e.ID_INCM_TYPE)
                    .IsClustered(false);

                entity.Property(e => e.ID_INCM_TYPE)
                    .HasColumnType("numeric(2, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CD_INCM_TYPE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_INCM_DSCR)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_EBT_CHCK>(entity =>
            {
                entity.HasKey(e => e.ID_SSN_EBT)
                    .IsClustered(false);

                entity.Property(e => e.ID_SSN_EBT)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_ERR_CODE>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.CD_ERR_CODE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ERR_DESC).HasColumnType("text");

                entity.Property(e => e.ID_ERR_CODE).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<REF_EXCESS_RESOURCE_LIMIT>(entity =>
            {
                entity.HasKey(e => e.ID_EXCSS_RSRC_LIMIT);

                entity.Property(e => e.AM_MAX_EXCSS_RSRC_LIMIT)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AM_MIN_EXCSS_RSRC_LIMIT)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_MNTHS_DSQLFCTN)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_FEDERAL_MILEAGE_RATE>(entity =>
            {
                entity.HasKey(e => e.ID_REF_FDRL_MLG_RATE)
                    .IsClustered(false);

                entity.Property(e => e.AM_FDRL_MLG_RATE).HasColumnType("money");

                entity.Property(e => e.DT_EFFCTV).HasColumnType("datetime");
            });

            modelBuilder.Entity<REF_FORMS>(entity =>
            {
                entity.HasKey(e => e.ID_FORM);

                entity.HasIndex(e => e.CD_FORM, "UNQ__REF_FORMS__CD_FORM")
                    .IsUnique();

                entity.Property(e => e.CD_FORM)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsFixedLength();

                entity.Property(e => e.TXT_FORM)
                    .IsRequired()
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<REF_FREQUENCY>(entity =>
            {
                entity.HasKey(e => e.ID_FRQNCY_REF)
                    .IsClustered(false);

                entity.Property(e => e.ID_FRQNCY_REF)
                    .HasColumnType("numeric(2, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CD_FRQNCY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_FRQNCY_DSCR)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_FRQNCY_FACTOR).HasColumnType("decimal(7, 5)");
            });

            modelBuilder.Entity<REF_HOLIDAY_DATES>(entity =>
            {
                entity.HasKey(e => e.ID_HLDY_DATES)
                    .IsClustered(false);

                entity.Property(e => e.DT_HLDY).HasColumnType("datetime");

                entity.Property(e => e.TX_HLDY_DSCR).HasColumnType("text");
            });

            modelBuilder.Entity<REF_IEVS_TRAK>(entity =>
            {
                entity.HasKey(e => e.ID_SSN_IEVS)
                    .IsClustered(false);

                entity.Property(e => e.ID_SSN_IEVS)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_SSN_VRFY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CERT_END_DATE)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IEVS_CASE)
                    .HasMaxLength(9)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_INACTIVE_SCIII>(entity =>
            {
                entity.HasKey(e => e.ID_SSN);

                entity.Property(e => e.ID_SSN)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_CHCK_DIGIT).HasColumnType("numeric(1, 0)");

                entity.Property(e => e.CD_CNTY_SCIII).HasColumnType("numeric(3, 0)");

                entity.Property(e => e.NO_INACTV_CASE).HasColumnType("numeric(9, 0)");
            });

            modelBuilder.Entity<REF_INCOME_LIMIT>(entity =>
            {
                entity.HasKey(e => e.ID_REF_INCM_LIMIT)
                    .IsClustered(false);

                entity.Property(e => e.ID_REF_INCM_LIMIT)
                    .HasColumnType("numeric(2, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AM_INCM_LIMIT).HasColumnType("money");

                entity.Property(e => e.NO_HH_SIZE).HasColumnType("numeric(2, 0)");
            });

            modelBuilder.Entity<REF_INSRNC_PAYER>(entity =>
            {
                entity.HasKey(e => e.ID_INSRNC_PAYER)
                    .IsClustered(false);

                entity.Property(e => e.ID_INSRNC_PAYER)
                    .HasColumnType("numeric(1, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CD_PAYER_DSCR)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_INSTRUCTIONS>(entity =>
            {
                entity.HasKey(e => e.ID_INSTRCTN)
                    .IsClustered(false);

                entity.Property(e => e.CD_INSTRCTN_TYPE)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_INSTRCTN_TYPE).HasColumnType("text");
            });

            modelBuilder.Entity<REF_MEDICAL_LIMIT>(entity =>
            {
                entity.HasKey(e => e.ID_MDCL_LMT)
                    .IsClustered(false);

                entity.Property(e => e.ID_MDCL_LMT)
                    .HasColumnType("numeric(1, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AM_MDCL_LIMIT).HasColumnType("money");

                entity.Property(e => e.CD_MDCL_DSCR)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_MEDICAL_NOTE_TYPE>(entity =>
            {
                entity.HasKey(e => e.ID_REF_MDCL_NOTE_TYPE)
                    .IsClustered(false);

                entity.Property(e => e.CD_REF_MDCL_NOTE_TYPE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_REF_MDCL_NOTE_TYPE_DSCR)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_MEDICATION_APPLIANCE>(entity =>
            {
                entity.HasKey(e => e.ID_MDCTN_APPLNC)
                    .HasName("PK_REF_MEDICATION")
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_PRVDR_NAME, "FRMED01_FK");

                entity.Property(e => e.TX_MDCTN_APPLNC_DSCR).HasColumnType("text");

                entity.HasOne(d => d.ID_PRVDR_NAMENavigation)
                    .WithMany(p => p.REF_MEDICATION_APPLIANCE)
                    .HasForeignKey(d => d.ID_PRVDR_NAME)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FRMED01");
            });

            modelBuilder.Entity<REF_MESSAGE>(entity =>
            {
                entity.HasKey(e => e.ID_MESSAGES)
                    .IsClustered(false);

                entity.Property(e => e.CD_MSSG_TYPE)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_SEARCH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_MSSG_DSCR).HasColumnType("text");
            });

            modelBuilder.Entity<REF_NOTICE_TYPE>(entity =>
            {
                entity.HasKey(e => e.ID_REF_NTC_TYPE)
                    .HasName("PK_REF_UPDATE_NOTICE_TYPE")
                    .IsClustered(false);

                entity.Property(e => e.CD_REF_NTC_TYPE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_REF_NTC_DSCR).HasColumnType("text");
            });

            modelBuilder.Entity<REF_OACIS_MODULE>(entity =>
            {
                entity.HasKey(e => e.CD_REF_MODULE);

                entity.Property(e => e.CD_REF_MODULE)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_MODULE_LCTN)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_MODULE_NEXT)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_MODULE_ORDER)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_MODULE_PRED)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_REF_MODULE)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_OBLIGATION_REASON>(entity =>
            {
                entity.HasKey(e => e.ID_OBLGTN_RSN)
                    .IsClustered(false);

                entity.Property(e => e.CD_OBLGTN_RSN)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_PAST_DUE_RSN>(entity =>
            {
                entity.HasKey(e => e.CD_PAST_DUE_RSN)
                    .IsClustered(false);

                entity.Property(e => e.CD_PAST_DUE_RSN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_PAST_DUE_RSN).HasColumnType("text");
            });

            modelBuilder.Entity<REF_PAY_DATES>(entity =>
            {
                entity.HasKey(e => e.ID_PAY_DATES)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_UNERND_INCM, "_dta_index_REF_PAY_DATES_c_5_1825545687__K2")
                    .IsClustered();

                entity.Property(e => e.AM_GROSS_MNTHLY).HasColumnType("money");

                entity.Property(e => e.AM_GROSS_PER_PAY).HasColumnType("money");

                entity.Property(e => e.AM_HRLY_PAY).HasColumnType("money");

                entity.Property(e => e.AM_NET_MNTHLY).HasColumnType("money");

                entity.Property(e => e.DT_PAY_DATE).HasColumnType("datetime");

                entity.Property(e => e.FL_INCM_NXT_MNTH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_RPRSNTTV_PAY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_FRQNCY_PAY).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.NO_HOURS).HasColumnType("numeric(3, 0)");

                entity.HasOne(d => d.ID_UNERND_INCMNavigation)
                    .WithMany(p => p.REF_PAY_DATES)
                    .HasForeignKey(d => d.ID_UNERND_INCM)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FPYDT01");
            });

            modelBuilder.Entity<REF_PAY_TYPE>(entity =>
            {
                entity.HasKey(e => e.ID_PAY_TYPE)
                    .IsClustered(false);

                entity.Property(e => e.CD_PAY_TYPE)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_PROVIDER_NAME>(entity =>
            {
                entity.HasKey(e => e.ID_PRVDR_NAME)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_PRVDR_TYPE, "FRPRN01_FK");

                entity.HasIndex(e => new { e.ID_PRVDR_NAME, e.ID_PRVDR_TYPE }, "_dta_index_REF_PROVIDER_NAME_c_5_1291203700__K1_K2")
                    .IsClustered();

                entity.Property(e => e.NM_PRVDR)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_PRVDR_PHONE)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_PRVDR_TYPENavigation)
                    .WithMany(p => p.REF_PROVIDER_NAME)
                    .HasForeignKey(d => d.ID_PRVDR_TYPE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FRPRN01");
            });

            modelBuilder.Entity<REF_PROVIDER_TYPE>(entity =>
            {
                entity.HasKey(e => e.ID_PRVDR_TYPE)
                    .IsClustered(false);

                entity.Property(e => e.CD_PRVDR_TYPE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_PRVDR_DSCR)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_RACE>(entity =>
            {
                entity.HasKey(e => e.ID_RACE_CODE)
                    .IsClustered(false);

                entity.Property(e => e.CD_RACE).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.TX_RACE_DSCR).HasColumnType("text");
            });

            modelBuilder.Entity<REF_RELATION>(entity =>
            {
                entity.HasKey(e => e.ID_RLTN);

                entity.Property(e => e.CD_RLTN)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_RLTN_DSCR)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_RESOURCE_LIMIT>(entity =>
            {
                entity.HasKey(e => e.ID_RSRC_LIMIT)
                    .IsClustered(false);

                entity.Property(e => e.AM_RSRC_LIMIT).HasColumnType("money");

                entity.Property(e => e.CD_RSRC_DSCR)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_RESOURCE_TYPE>(entity =>
            {
                entity.HasKey(e => e.ID_RSRC_CODE)
                    .IsClustered(false);

                entity.Property(e => e.CD_RSRC_CODE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_RSRC_DSCR).HasColumnType("text");
            });

            modelBuilder.Entity<REF_RESTORATION_REASON_TYPE>(entity =>
            {
                entity.HasKey(e => e.ID_RSTRTN_RSN)
                    .IsClustered(false);

                entity.Property(e => e.ID_RSTRTN_RSN)
                    .HasColumnType("numeric(2, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CD_RSTRTN_RSN)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_RSTRTN_RSN_DSCR).HasColumnType("text");
            });

            modelBuilder.Entity<REF_RJCTN_DNL_TERM>(entity =>
            {
                entity.HasKey(e => new { e.CD_RJCTN_CLSR, e.CD_DENIAL, e.CD_TRMNTN })
                    .IsClustered(false);

                entity.Property(e => e.CD_RJCTN_CLSR)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_DENIAL)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_TRMNTN)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_RJCTN_DNL_TERM).HasColumnType("text");
            });

            modelBuilder.Entity<REF_SANCTION_REASON>(entity =>
            {
                entity.HasKey(e => e.ID_REF_SNCTN_RSN)
                    .IsClustered(false);

                entity.Property(e => e.ID_REF_SNCTN_RSN)
                    .HasColumnType("numeric(2, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CD_SNCTN_RSN)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_SNCTN_RSN).HasColumnType("text");

                entity.HasOne(d => d.ID_REF_SNCTN_TYPENavigation)
                    .WithMany(p => p.REF_SANCTION_REASON)
                    .HasForeignKey(d => d.ID_REF_SNCTN_TYPE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FRSCN01");
            });

            modelBuilder.Entity<REF_SANCTION_TYPE>(entity =>
            {
                entity.HasKey(e => e.ID_REF_SNCTN_TYPE)
                    .IsClustered(false);

                entity.Property(e => e.CD_SNCTN_TYPE)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_SCI2_ERRORS>(entity =>
            {
                entity.HasKey(e => e.CD_SCI2_ERROR)
                    .IsClustered(false);

                entity.Property(e => e.CD_SCI2_ERROR)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_REF_SCI2_ERROR).ValueGeneratedOnAdd();

                entity.Property(e => e.TX_SCI2_ERROR_DSCR).HasColumnType("text");
            });

            modelBuilder.Entity<REF_SECURITY>(entity =>
            {
                entity.HasKey(e => e.ID_SCRTY)
                    .IsClustered(false);

                entity.Property(e => e.CD_CNTY_SCRTY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_FiscalYear)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_PSSWRD)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_ROLE)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_COLA).HasColumnType("datetime");

                entity.Property(e => e.FL_ADMIN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_APPOINTMENTS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_APP_STATUS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_CASE_NOTES)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_DSNAP)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_FORMS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_ISSUANCE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_NAC)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_REGISTRATION)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_REPORTS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_SR_UPDATES)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_SSNINQ)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_TRIAL_BUDGET)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.HIS_SERVER)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_PYRLL)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_USER)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_FULL_NAME)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_SHELTER_DWELLING_TYPE>(entity =>
            {
                entity.HasKey(e => e.ID_SHLTR_DWELLNG_TYPE)
                    .IsClustered(false);

                entity.Property(e => e.CD_SHLTR_DWELLING_TYPE)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_SHELTER_EXPENSE_TYPE>(entity =>
            {
                entity.HasKey(e => e.ID_SHLTR_EXPNS_TYPE)
                    .IsClustered(false);

                entity.Property(e => e.CD_SHLTR_EXPNS_TYPE)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_SHELTER_NOTES_OTHER>(entity =>
            {
                entity.HasKey(e => e.ID_REF_SHLTR_OTHR)
                    .HasName("PK_REF_SHELTER_OTHER");

                entity.Property(e => e.TX_SHLTR_OTHR).HasColumnType("text");

                entity.HasOne(d => d.ID_SHLTR_EXPNSNavigation)
                    .WithMany(p => p.REF_SHELTER_NOTES_OTHER)
                    .HasForeignKey(d => d.ID_SHLTR_EXPNS)
                    .HasConstraintName("FRSHO01");
            });

            modelBuilder.Entity<REF_SHELTER_OWNERSHIP>(entity =>
            {
                entity.HasKey(e => e.ID_OWNRSHP)
                    .IsClustered(false);

                entity.Property(e => e.CD_OWNRSHP)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_SPCL_REOPEN_RSN>(entity =>
            {
                entity.HasKey(e => e.ID_SPCL_REOPEN_RSN)
                    .HasName("PK_SPECIAL_REOPEN_REASON")
                    .IsClustered(false);

                entity.Property(e => e.CD_SPCL_REOPEN_RSN)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_SPCL_REOPEN_RSN).HasColumnType("text");
            });

            modelBuilder.Entity<REF_STATE>(entity =>
            {
                entity.HasKey(e => e.ID_REF_STATE)
                    .IsClustered(false);

                entity.Property(e => e.ID_REF_STATE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_STATE_DSCR)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_TFP_LIMIT>(entity =>
            {
                entity.HasKey(e => e.ID_REF_TFP_LIMIT)
                    .IsClustered(false);

                entity.Property(e => e.ID_REF_TFP_LIMIT)
                    .HasColumnType("numeric(2, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AM_TFP_LIMIT).HasColumnType("money");

                entity.Property(e => e.NO_HH_SIZE).HasColumnType("numeric(2, 0)");
            });

            modelBuilder.Entity<REF_UNEARNED_PAYER_TYPE>(entity =>
            {
                entity.HasKey(e => e.ID_REF_UNERND_PAYER_TYPE)
                    .IsClustered(false);

                entity.Property(e => e.CD_REF_UNERND_PAYER)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_REF_UNERND_PAYER_TYPE)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_UNEARNED_SUBTYPE>(entity =>
            {
                entity.HasKey(e => e.ID_REF_UNERND_SUBTYPE)
                    .IsClustered(false);

                entity.Property(e => e.CD_UNERND_SUBTYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_UNERND_SUBTYPE).HasColumnType("text");

                entity.HasOne(d => d.ID_REF_UNERND_TYPENavigation)
                    .WithMany(p => p.REF_UNEARNED_SUBTYPE)
                    .HasForeignKey(d => d.ID_REF_UNERND_TYPE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FUNST01");
            });

            modelBuilder.Entity<REF_UNEARNED_TYPE>(entity =>
            {
                entity.HasKey(e => e.ID_REF_UNERND_TYPE)
                    .IsClustered(false);

                entity.Property(e => e.TX_UNERND_TYPE_DSCR).HasColumnType("text");
            });

            modelBuilder.Entity<REF_UTILITY_DEDUCTION>(entity =>
            {
                entity.HasKey(e => e.ID_UTLTY_DDCTN)
                    .IsClustered(false);

                entity.Property(e => e.ID_UTLTY_DDCTN)
                    .HasColumnType("numeric(2, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AM_UTLTY_DDCTN).HasColumnType("money");

                entity.Property(e => e.CD_UTLTY_DDCTN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_UTLTY_DDCTN_DSCR).HasColumnType("text");
            });

            modelBuilder.Entity<REF_UTILITY_TYPE>(entity =>
            {
                entity.HasKey(e => e.ID_UTLTY_TYPE)
                    .IsClustered(false);

                entity.Property(e => e.CD_UTLTY_TYPE)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_VERIFICATION_DETAIL>(entity =>
            {
                entity.HasKey(e => e.ID_VRFCTN_DETAIL)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_REF_VRFCTN_SUBTYPE, "FVRTP02_FK");

                entity.HasIndex(e => e.ID_REF_VRFCTN_SUBTYPE, "IX_REF_VERIFICATION_DETAIL_ID_REF_VRFCTN_SUBTYPE");

                entity.Property(e => e.CD_VRFCTN_DETAIL_DSCR)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_OTHR_VRFCTN_RCVD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_REF_VRFCTN_SUBTYPE).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.TX_OTHR_VRFCTN).HasColumnType("text");

                entity.HasOne(d => d.ID_REF_VRFCTN_SUBTYPENavigation)
                    .WithMany(p => p.REF_VERIFICATION_DETAIL)
                    .HasForeignKey(d => d.ID_REF_VRFCTN_SUBTYPE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FVRTP02");
            });

            modelBuilder.Entity<REF_VERIFICATION_SUBTYPE>(entity =>
            {
                entity.HasKey(e => e.ID_REF_VRFCTN_SUBTYPE)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_REF_VRFCTN_TYPE, "FVRTP01_FK");

                entity.Property(e => e.ID_REF_VRFCTN_SUBTYPE)
                    .HasColumnType("numeric(2, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CD_REF_VRFCTN_SUBTYPE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_REF_VRFCTN_TYPE).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.TX_REF_VRFCTN_SUBTYPE_DSCR)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_REF_VRFCTN_TYPENavigation)
                    .WithMany(p => p.REF_VERIFICATION_SUBTYPE)
                    .HasForeignKey(d => d.ID_REF_VRFCTN_TYPE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FVRTP01");
            });

            modelBuilder.Entity<REF_VERIFICATION_TYPE>(entity =>
            {
                entity.HasKey(e => e.ID_REF_VRFCTN_TYPE)
                    .IsClustered(false);

                entity.Property(e => e.ID_REF_VRFCTN_TYPE)
                    .HasColumnType("numeric(2, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CD_REF_VRFCTN_TYPE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_REF_VRFCTN_DSCR)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REF_VOTER_ANS>(entity =>
            {
                entity.HasKey(e => e.ID_REF_VOTER_ANS);

                entity.Property(e => e.CD_YESORNO)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TXT_ANSWER)
                    .IsRequired()
                    .HasColumnType("text");
            });

            modelBuilder.Entity<REF_WAIVE_ADVERSE_ACTION>(entity =>
            {
                entity.HasKey(e => e.ID_REF_WAIVE_ADVRS_ACTN)
                    .IsClustered(false);

                entity.Property(e => e.CD_WAIVE_ADVRS_ACTN_RSN)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_ADVRS_ACTN_DSCR).HasColumnType("text");
            });

            modelBuilder.Entity<REF_WELCOME_MESSAGE>(entity =>
            {
                entity.HasKey(e => e.ID_WLCM_MSSG)
                    .IsClustered(false);

                entity.Property(e => e.DT_END).HasColumnType("datetime");

                entity.Property(e => e.DT_MSSG).HasColumnType("datetime");

                entity.Property(e => e.DT_START).HasColumnType("datetime");

                entity.Property(e => e.ID_MSSG_CNTY)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_WLCM_MSSG_DSCR).HasColumnType("text");
            });

            modelBuilder.Entity<REF_WORK_REG_CODE>(entity =>
            {
                entity.HasKey(e => e.ID_WORK_CODE)
                    .IsClustered(false);

                entity.Property(e => e.CD_WORK)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_WORK_DSCR).HasColumnType("text");
            });

            modelBuilder.Entity<REGISTER_APPLICATION>(entity =>
            {
                entity.HasKey(e => e.ID_NEWCASE);

                entity.Property(e => e.ALL_AUTH_REP_FIRST_NAME)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_AUTH_REP_LAST_NAME)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_AUTH_REP_MIDDLE_NAME)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_AUTH_REP_PHONE_NUMBER)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_EBT_REP_FIRST_NAME)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_EBT_REP_LAST_NAME)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_EBT_REP_MIDDLE_NAME)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_EBT_REP_PHONE_NUMBER)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_MAILING_ADDR1)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_MAILING_ADDR2)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_MAILING_CITY)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_MAILING_COUNTY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ALL_MAILING_STATE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ALL_MAILING_ZIP)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ALL_MAILING_ZIP4)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ALL_RESIDENCE_ADDR1)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_RESIDENCE_ADDR2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_RESIDENCE_CITY)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.ALL_RESIDENCE_COUNTY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('99')")
                    .IsFixedLength();

                entity.Property(e => e.ALL_RESIDENCE_OFFICE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('02')")
                    .IsFixedLength();

                entity.Property(e => e.ALL_RESIDENCE_STATE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ALL_RESIDENCE_ZIP)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ALL_RESIDENCE_ZIP4)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ALT_OFFICE_NO)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CD_LANGUAGE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Language for application");

                entity.Property(e => e.CD_REGISTRATION_STATUS)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_REGISTRATION_STATUS_SENT)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_SOURCE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("F = FACETS D = DMU ENTRY I = INTERNET");

                entity.Property(e => e.COUNTY_OFFICE)
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.COUNTY_SUBMIT)
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.DATE_AWARD)
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.DATE_DELETION)
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.DATE_DENY)
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.DATE_ERROR)
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.DATE_NOMA)
                    .HasMaxLength(8)
                    .IsFixedLength()
                    .HasComment("Notice of Missed Appointment date");

                entity.Property(e => e.DATE_OACIS_INTERVIEW)
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.DATE_REGISTRATION)
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.DATE_VERIFICATION_PENDING)
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.DHR_APPLICATION_ID)
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasComment("GUID FROM DHR ALABAMA");

                entity.Property(e => e.DHR_APPLICATION_TYPE)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasComment("AESAP/Expedited/Renewal/Normal");

                entity.Property(e => e.DHR_CELL_NUMBER)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_EMAIL_ADDRESS)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_HOME_PHONE_NUMBER)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_MESSAGE_PHONE_NUMBER)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_SIGNED_DATE)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DHR_START_DATE)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DHR_SUBMIT_TO_COUNTY_OFFICE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DHR_WORK_PHONE_NUMBER)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.DT_CASE_APPTDATETIME)
                    .HasColumnType("datetime")
                    .HasComment("MMDDYYYY");

                entity.Property(e => e.DT_REGISTRATION_CREATIED)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DT_REGISTRATION_MODIFIED).HasColumnType("datetime");

                entity.Property(e => e.DT_REGISTRATION_STATUS).HasColumnType("datetime");

                entity.Property(e => e.DT_REGISTRATION_STATUS_SENT).HasColumnType("datetime");

                entity.Property(e => e.FL_ACTIVE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('Y')")
                    .IsFixedLength()
                    .HasComment("N = RECORD IS NOT ACTIVE AND IS FOR HISTORY ONLY");

                entity.Property(e => e.FL_APPTMADE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_ARCHIVE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('N')")
                    .IsFixedLength();

                entity.Property(e => e.FL_EXPEDITED)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_OFFICEINT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("FOR APPOINTMENTS IS THIS AN IN OFFICE INTERVIEW (Y or N)");

                entity.Property(e => e.FL_PHN_INTRVW)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('N')")
                    .IsFixedLength();

                entity.Property(e => e.FL_REGISTRATION_COMPLETE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('N')")
                    .IsFixedLength();

                entity.Property(e => e.ID_USER)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MYDHR_APPL_ADDR)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MYDHR_APPL_NM)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MYDHR_APPL_PHN)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MYDHR_FL_APPL)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MYDHR_INC_EXP_EXPEDITE_FL)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MYDHR_MIGRANT_EXPEDITE_FL)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MYDHR_USERID)
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.NO_CASE).HasMaxLength(9);

                entity.Property(e => e.NO_CASE_CHCKDGT)
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.ORIG_ADDRESS)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SCI_ADDR1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_ADDR2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_APPDT)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_APPSTS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_APTDT)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_APTYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_AUTH1)
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("EBT");

                entity.Property(e => e.SCI_AUTH2)
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("AR");

                entity.Property(e => e.SCI_BATTER)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_CASENO)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_CHKDGT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_CITY)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_CTYOFF)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_DENY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_DUEDT)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_ERROR_MSG).HasMaxLength(255);

                entity.Property(e => e.SCI_EXPDT)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_HHTYP)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_HOMELS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_NAME)
                    .HasMaxLength(28)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_OFFICE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_PASS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_PROSTD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_RCTYOFF)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_SPECDT)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_TRANDT)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_WORKER)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_ZIP4)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_ZIP5)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TEXT_REGISTRATION_COMMENTS).HasColumnType("text");

                entity.Property(e => e.TX_APPT_NOTES)
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<REGISTER_APPLICATION_STATUS>(entity =>
            {
                entity.HasKey(e => e.APPLICATION_ID);

                entity.Property(e => e.APPLICATION_ID)
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.DT_APPROVED).HasColumnType("datetime");

                entity.Property(e => e.DT_DENIED).HasColumnType("datetime");

                entity.Property(e => e.DT_DOWNLOADED).HasColumnType("datetime");

                entity.Property(e => e.DT_PROCESSING_END).HasColumnType("datetime");

                entity.Property(e => e.DT_PROCESSING_START).HasColumnType("datetime");

                entity.Property(e => e.DT_REGISTERED).HasColumnType("datetime");

                entity.Property(e => e.DT_STATUS_SUBMITTED).HasColumnType("datetime");
            });

            modelBuilder.Entity<REGISTER_CHILD_SUPPORT>(entity =>
            {
                entity.HasKey(e => e.ID_CHILD_SUPPORT);

                entity.Property(e => e.CHILDREN)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PAIDTO_FULLNAME)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PAID_AMOUNT).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.PAY_FREQUENCY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_NEWMBRNavigation)
                    .WithMany(p => p.REGISTER_CHILD_SUPPORT)
                    .HasForeignKey(d => d.ID_NEWMBR)
                    .HasConstraintName("FK_REGISTER_CHILD_SUPPORT_REGISTER_MEMBERS");
            });

            modelBuilder.Entity<REGISTER_DEPENDENT_CARE>(entity =>
            {
                entity.HasKey(e => e.ID_DEPENDENTCARE);

                entity.Property(e => e.AMOUNT).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.PAY_FREQUENCY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SIITER_PHONE)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SITTER_NAME)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.ID_NEWMBRNavigation)
                    .WithMany(p => p.REGISTER_DEPENDENT_CARE)
                    .HasForeignKey(d => d.ID_NEWMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_REGISTER_DEPENDENT_CARE_REGISTER_DEPENDENT_CARE");
            });

            modelBuilder.Entity<REGISTER_DONOTAPPLY>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.CASENBR)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CASENBRAPP)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_SOURCE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CERTEND)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("CCYYMM");

                entity.Property(e => e.COUNTYCD)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.COUNTYCDAPP)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_SSN)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RECERTFLAG)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REGISTER_DONOTAPPLY_OLD>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.CASENBR)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CASENBRAPP)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_SOURCE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CERTEND)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("CCYYMM");

                entity.Property(e => e.COUNTYCD)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.COUNTYCDAPP)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_SSN)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RECERTFLAG)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REGISTER_DUPLICATEBENEFITS>(entity =>
            {
                entity.HasKey(e => e.ID_NEWMBR);

                entity.Property(e => e.ID_NEWMBR).ValueGeneratedNever();

                entity.Property(e => e.ID_DUP_BENE).ValueGeneratedOnAdd();

                entity.HasOne(d => d.ID_NEWMBRNavigation)
                    .WithOne(p => p.REGISTER_DUPLICATEBENEFITS)
                    .HasForeignKey<REGISTER_DUPLICATEBENEFITS>(d => d.ID_NEWMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_REGISTER_DUPLICATEBENEFITS_REGISTER_DUPLICATEBENEFITS");
            });

            modelBuilder.Entity<REGISTER_EMPLOYMENT>(entity =>
            {
                entity.HasKey(e => e.ID_EMPLOYMENT);

                entity.Property(e => e.COMPANY_NAME)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.COMPANY_PHONE_NBR)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.PAY_AMOUNT).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.PAY_FREQUENCY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_NEWMBRNavigation)
                    .WithMany(p => p.REGISTER_EMPLOYMENT)
                    .HasForeignKey(d => d.ID_NEWMBR)
                    .HasConstraintName("FK_REGISTER_EMPLOYMENT_REGISTER_MEMBERS");
            });

            modelBuilder.Entity<REGISTER_FELON>(entity =>
            {
                entity.HasKey(e => e.ID_FELON);

                entity.HasOne(d => d.ID_NEWMBRNavigation)
                    .WithMany(p => p.REGISTER_FELON)
                    .HasForeignKey(d => d.ID_NEWMBR)
                    .HasConstraintName("FK_REGISTER_FELON_REGISTER_MEMBERS");
            });

            modelBuilder.Entity<REGISTER_LIQUIDRESOURCE>(entity =>
            {
                entity.HasKey(e => e.ID_LIQUIDRSC);

                entity.Property(e => e.ADD_INFO_1)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ADD_INFO_2)
                    .HasMaxLength(31)
                    .IsUnicode(false);

                entity.Property(e => e.ADD_INFO_3)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.ADD_INFO_4)
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.AMOUNT_LR).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.TYPE_LR)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.HasOne(d => d.ID_NEWMBRNavigation)
                    .WithMany(p => p.REGISTER_LIQUIDRESOURCE)
                    .HasForeignKey(d => d.ID_NEWMBR)
                    .HasConstraintName("FK_REGISTER_LIQUIDRESOURCE_REGISTER_MEMBERS");
            });

            modelBuilder.Entity<REGISTER_MEDICAL_EXP>(entity =>
            {
                entity.HasKey(e => e.ID_MEDICAL_EXP);

                entity.Property(e => e.EXPENSE_TYPE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EXP_AMOUNT).HasColumnType("decimal(8, 2)");

                entity.HasOne(d => d.ID_NEWMBRNavigation)
                    .WithMany(p => p.REGISTER_MEDICAL_EXP)
                    .HasForeignKey(d => d.ID_NEWMBR)
                    .HasConstraintName("FK_REGISTER_MEDICAL_EXP_REGISTER_MEMBERS");
            });

            modelBuilder.Entity<REGISTER_MEMBERS>(entity =>
            {
                entity.HasKey(e => e.ID_NEWMBR);

                entity.Property(e => e.CD_INVALID_MEMBER)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DHR_APPLICATION_ID)
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_DOB)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_ETHNICITY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DHR_MEMBER_FIRST_NAME)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_MEMBER_LAST_NAME)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_MEMBER_MIDDLE_NAME)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_MEMBER_SSN)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_MEMBER_SUFFIX_NAME)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_RACE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DHR_RELATIONSHIP)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DHR_SEX)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DHR_USCITIZEN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_HOH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_INVALID_MEMBER)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_DEPNAM)
                    .HasMaxLength(28)
                    .IsUnicode(false)
                    .HasComment("LAST,SUFFIX/FIRST/MIDDLE (28 CHAR) ");

                entity.Property(e => e.SCI_DEPNUM)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_DOB)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("MMDDYYYY");

                entity.Property(e => e.SCI_ELIG)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_ERRMSG)
                    .HasMaxLength(79)
                    .IsUnicode(false);

                entity.Property(e => e.SCI_PACASE)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_RACE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_REG_MATCH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_SEX)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_SSN)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SCI_VERIND)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<REGISTER_MIGRANTWORKER>(entity =>
            {
                entity.HasKey(e => e.ID_MIGRANTWORKER);

                entity.HasOne(d => d.ID_NEWMBRNavigation)
                    .WithMany(p => p.REGISTER_MIGRANTWORKER)
                    .HasForeignKey(d => d.ID_NEWMBR)
                    .HasConstraintName("FK_REGISTER_MIGRANTWORKER_REGISTER_MEMBERS");
            });

            modelBuilder.Entity<REGISTER_MULTIPLEHH>(entity =>
            {
                entity.HasKey(e => e.ID_MULTIPLEHH);

                entity.HasOne(d => d.ID_NEWMBRNavigation)
                    .WithMany(p => p.REGISTER_MULTIPLEHH)
                    .HasForeignKey(d => d.ID_NEWMBR)
                    .HasConstraintName("FK_REGISTER_MULTIPLEHH_REGISTER_MEMBERS");
            });

            modelBuilder.Entity<REGISTER_PAROLE>(entity =>
            {
                entity.HasKey(e => e.ID_PAROLE);

                entity.HasOne(d => d.ID_NEWMBRNavigation)
                    .WithMany(p => p.REGISTER_PAROLE)
                    .HasForeignKey(d => d.ID_NEWMBR)
                    .HasConstraintName("FK_REGISTER_PAROLE_REGISTER_MEMBERS");
            });

            modelBuilder.Entity<REGISTER_ROOMERBOARDER>(entity =>
            {
                entity.HasKey(e => e.ID_ROOMERORBOARDER);

                entity.Property(e => e.AMOUNT_PAID).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.PAY_FREQUENCY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_NEWMBRNavigation)
                    .WithMany(p => p.REGISTER_ROOMERBOARDER)
                    .HasForeignKey(d => d.ID_NEWMBR)
                    .HasConstraintName("FK_REGISTER_ROOMERBOARDER_REGISTER_MEMBERS");
            });

            modelBuilder.Entity<REGISTER_SELF_EMPLOYMENT>(entity =>
            {
                entity.HasKey(e => e.ID_SELF_EMPLOYMENT);

                entity.Property(e => e.COMPANY_NAME)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.COMPANY_TYPE)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.ID_NEWMBRNavigation)
                    .WithMany(p => p.REGISTER_SELF_EMPLOYMENT)
                    .HasForeignKey(d => d.ID_NEWMBR)
                    .HasConstraintName("FK_REGISTER_SELF_EMPLOYMENT_REGISTER_MEMBERS");
            });

            modelBuilder.Entity<REGISTER_SHELTER_EXP>(entity =>
            {
                entity.HasKey(e => e.ID_SHELTER_EXP);

                entity.Property(e => e.AMT_INSRNC).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.AMT_PROP_TAX).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.INSRNC_PAY_FREQUENCY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.LOT_PAY_FREQUENCY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.LOT_RENT).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.RENT_MORTGAGE_AMOUNT).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.SHELTER_PAY_TYPE)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SHELTER_TYPE)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.HasOne(d => d.ID_NEWMBRNavigation)
                    .WithMany(p => p.REGISTER_SHELTER_EXP)
                    .HasForeignKey(d => d.ID_NEWMBR)
                    .HasConstraintName("FK_REGISTER_SHELTER_EXP_REGISTER_MEMBERS");
            });

            modelBuilder.Entity<REGISTER_SOU>(entity =>
            {
                entity.HasKey(e => e.ID_SOU);

                entity.Property(e => e.Q1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q10)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q11)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q12)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q13)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q14)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q15)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q16)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q17)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q18)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q3)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q4)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q5)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q6)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q7)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q8)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Q9)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_NEWMBRNavigation)
                    .WithMany(p => p.REGISTER_SOU)
                    .HasForeignKey(d => d.ID_NEWMBR)
                    .HasConstraintName("FK_REGISTER_SOU_REGISTER_MEMBERS");
            });

            modelBuilder.Entity<REGISTER_STAMPSFRAUD>(entity =>
            {
                entity.HasKey(e => e.ID_STAMPSFRAUD);

                entity.HasOne(d => d.ID_NEWMBRNavigation)
                    .WithMany(p => p.REGISTER_STAMPSFRAUD)
                    .HasForeignKey(d => d.ID_NEWMBR)
                    .HasConstraintName("FK_REGISTER_STAMPSFRAUD_REGISTER_MEMBERS");
            });

            modelBuilder.Entity<REGISTER_STAMPSTRAFFICKING>(entity =>
            {
                entity.HasKey(e => e.ID_STAMPSTRAFFICKING);

                entity.HasOne(d => d.ID_NEWMBRNavigation)
                    .WithMany(p => p.REGISTER_STAMPSTRAFFICKING)
                    .HasForeignKey(d => d.ID_NEWMBR)
                    .HasConstraintName("FK_REGISTER_STAMPSTRAFFICKING_REGISTER_MEMBERS");
            });

            modelBuilder.Entity<REGISTER_STAMPSWEAPONS>(entity =>
            {
                entity.HasKey(e => e.ID_STAMPSWEAPONS);

                entity.HasOne(d => d.ID_NEWMBRNavigation)
                    .WithMany(p => p.REGISTER_STAMPSWEAPONS)
                    .HasForeignKey(d => d.ID_NEWMBR)
                    .HasConstraintName("FK_REGISTER_STAMPSWEAPONS_REGISTER_MEMBERS");
            });

            modelBuilder.Entity<REGISTER_STRIKER>(entity =>
            {
                entity.HasKey(e => e.ID_STRIKER);

                entity.Property(e => e.COMPANY_NAME)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.HasOne(d => d.ID_NEWMBRNavigation)
                    .WithMany(p => p.REGISTER_STRIKER)
                    .HasForeignKey(d => d.ID_NEWMBR)
                    .HasConstraintName("FK_REGISTER_STRIKER_REGISTER_STRIKER");
            });

            modelBuilder.Entity<REGISTER_STUDENT>(entity =>
            {
                entity.HasKey(e => e.ID_STUDENT);

                entity.Property(e => e.NAME_OF_SCHOOL)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.HasOne(d => d.ID_NEWMBRNavigation)
                    .WithMany(p => p.REGISTER_STUDENT)
                    .HasForeignKey(d => d.ID_NEWMBR)
                    .HasConstraintName("FK_REGISTER_STUDENT_REGISTER_MEMBERS");
            });

            modelBuilder.Entity<REGISTER_UNEARNED_INC>(entity =>
            {
                entity.HasKey(e => e.ID_UNEARNED_INC);

                entity.Property(e => e.INCOME_TYPE)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.UNEARNED_AMOUNT).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.UNEARNED_FREQUENCY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_NEWMBRNavigation)
                    .WithMany(p => p.REGISTER_UNEARNED_INC)
                    .HasForeignKey(d => d.ID_NEWMBR)
                    .HasConstraintName("FK_REGISTER_UNEARNED_INC_REGISTER_MEMBERS");
            });

            modelBuilder.Entity<REGISTER_UTILITY_EXP>(entity =>
            {
                entity.HasKey(e => e.ID_UTILITY_EXP);

                entity.Property(e => e.AIR_CONDITIONING)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ELECTRICITY_AMOUNT).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.GARBAGE_AMOUNT).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.GAS_AMOUNT).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.LHEAP_ANTICIPATED)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.LHEAP_PAYMENT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.OIL_AMOUNT).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.PHONE_AMOUNT).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.WATER).HasColumnType("decimal(8, 2)");

                entity.HasOne(d => d.ID_NEWMBRNavigation)
                    .WithMany(p => p.REGISTER_UTILITY_EXP)
                    .HasForeignKey(d => d.ID_NEWMBR)
                    .HasConstraintName("FK_REGISTER_UTILITY_EXP_REGISTER_MEMBERS");
            });

            modelBuilder.Entity<REGISTER_UTILITY_EXPENSE>(entity =>
            {
                entity.HasKey(e => e.ID_UTILITY_EXP);

                entity.Property(e => e.FL_ELECTRICITY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_GARBAGE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_GAS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_HEAT_AC)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_LIHEAP)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_OIL)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_OTHER_UTILITY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_OUTSIDE_PAY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_PHONE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_WATER)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_DEDUCTION).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.OUTSIDE_PAY_NAME)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.ID_DEDUCTIONNavigation)
                    .WithMany(p => p.REGISTER_UTILITY_EXPENSE)
                    .HasForeignKey(d => d.ID_DEDUCTION)
                    .HasConstraintName("FK_REGISTER_UTILITY_EXPENSE_REF_UTILITY_DEDUCTION");

                entity.HasOne(d => d.ID_HAC_MEMBERNavigation)
                    .WithMany(p => p.REGISTER_UTILITY_EXPENSE)
                    .HasForeignKey(d => d.ID_HAC_MEMBER)
                    .HasConstraintName("FK_REGISTER_UTILITY_EXPENSE_REGISTER_MEMBERS");

                entity.HasOne(d => d.ID_NEWCASENavigation)
                    .WithMany(p => p.REGISTER_UTILITY_EXPENSE)
                    .HasForeignKey(d => d.ID_NEWCASE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_REGISTER_UTILITY_EXPENSE_REGISTER_APPLICATION");
            });

            modelBuilder.Entity<REGISTER_VOLUNTARYQUIT>(entity =>
            {
                entity.HasKey(e => e.ID_VOLUNTARYQUIT);

                entity.Property(e => e.COMPANY_NAME)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.COMPANY_PHONE_NUMBER)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.QUIT_DATE)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.QUIT_REASON)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.ID_NEWMBRNavigation)
                    .WithMany(p => p.REGISTER_VOLUNTARYQUIT)
                    .HasForeignKey(d => d.ID_NEWMBR)
                    .HasConstraintName("FK_REGISTER_VOLUNTARYQUIT_REGISTER_MEMBERS");
            });

            modelBuilder.Entity<REG_CASE>(entity =>
            {
                entity.HasKey(e => e.ID_NEWCASE);

                entity.Property(e => e.ADDR1).HasMaxLength(25);

                entity.Property(e => e.ADDR2).HasMaxLength(25);

                entity.Property(e => e.AD_CITY).HasMaxLength(17);

                entity.Property(e => e.AD_STATE).HasMaxLength(2);

                entity.Property(e => e.AD_ZIP).HasMaxLength(5);

                entity.Property(e => e.AD_ZIP_4).HasMaxLength(4);

                entity.Property(e => e.APPDT).HasMaxLength(8);

                entity.Property(e => e.APPSTS).HasMaxLength(1);

                entity.Property(e => e.AUTH1).HasMaxLength(35);

                entity.Property(e => e.AUTH2).HasMaxLength(35);

                entity.Property(e => e.AWARD_DT).HasMaxLength(8);

                entity.Property(e => e.ApplicationID).HasMaxLength(32);

                entity.Property(e => e.CASEENTRYDT).HasMaxLength(8);

                entity.Property(e => e.CASEMODDT).HasMaxLength(8);

                entity.Property(e => e.CASE_APPTDATETIME).HasColumnType("datetime");

                entity.Property(e => e.CD_CNTY).HasMaxLength(2);

                entity.Property(e => e.CD_LANGUAGE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_OFF).HasMaxLength(2);

                entity.Property(e => e.CD_REGISTRATION_STATUS)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_REGISTRATION_STATUS_SENT)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DEL_DT).HasMaxLength(8);

                entity.Property(e => e.DENY_DT).HasMaxLength(8);

                entity.Property(e => e.DT_LAST_CD_STATUS_SENT).HasMaxLength(8);

                entity.Property(e => e.DUEDT).HasMaxLength(8);

                entity.Property(e => e.ERROR_DT).HasMaxLength(8);

                entity.Property(e => e.EXPDT).HasMaxLength(8);

                entity.Property(e => e.FLBTR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_APPTMADE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_EXPEDITED)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_LOCAL)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_OFFICEINT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_OLD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_REGISTRATION_COMPLETE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.HHTYP).HasMaxLength(1);

                entity.Property(e => e.HNBR).HasMaxLength(2);

                entity.Property(e => e.HOMELS).HasMaxLength(1);

                entity.Property(e => e.ID_USER).HasMaxLength(10);

                entity.Property(e => e.NOMA_DT).HasMaxLength(8);

                entity.Property(e => e.NO_CASE).HasMaxLength(9);

                entity.Property(e => e.NO_CASE_CHCKDGT).HasMaxLength(1);

                entity.Property(e => e.OACIS_INT_DT).HasMaxLength(9);

                entity.Property(e => e.PASS).HasMaxLength(1);

                entity.Property(e => e.PROSTD).HasMaxLength(1);

                entity.Property(e => e.RCTYOFF).HasMaxLength(5);

                entity.Property(e => e.REG_DT).HasMaxLength(8);

                entity.Property(e => e.SCIERRMSG).HasMaxLength(255);

                entity.Property(e => e.SPECDT).HasMaxLength(8);

                entity.Property(e => e.TRANDT).HasMaxLength(8);

                entity.Property(e => e.TX_REGISTRATION_COMMENT).HasColumnType("ntext");

                entity.Property(e => e.VERIFICATION_PEND_DT).HasMaxLength(8);

                entity.Property(e => e.WORKER).HasMaxLength(3);
            });

            modelBuilder.Entity<REG_CASEMBRS>(entity =>
            {
                entity.HasKey(e => e.ID_NEWMBR);

                entity.Property(e => e.ApplicationID).HasMaxLength(32);

                entity.Property(e => e.CD_INVALID_MEMBER)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_RACE).HasMaxLength(2);

                entity.Property(e => e.DEPNUM)
                    .IsRequired()
                    .HasMaxLength(2);

                entity.Property(e => e.DEP_NM_MMBR_FRST).HasMaxLength(20);

                entity.Property(e => e.DEP_NM_MMBR_LST).HasMaxLength(20);

                entity.Property(e => e.DEP_NM_MMBR_MDL).HasMaxLength(20);

                entity.Property(e => e.DEP_NM_MMBR_SFX).HasMaxLength(20);

                entity.Property(e => e.DOB).HasMaxLength(8);

                entity.Property(e => e.ELIG).HasMaxLength(1);

                entity.Property(e => e.FL_HOH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_INVALID_MEMBER)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PACASE).HasMaxLength(1);

                entity.Property(e => e.SEX).HasMaxLength(1);

                entity.Property(e => e.SSN).HasMaxLength(9);

                entity.Property(e => e.VERIND).HasMaxLength(1);
            });

            modelBuilder.Entity<REPORTING>(entity =>
            {
                entity.HasKey(e => e.ID_RPRTNG)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_CASE_NMBR, "FRPRT01_FK");

                entity.Property(e => e.CD_RPRTNG_RQRMNT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_RPRTNG).HasColumnType("datetime");

                entity.Property(e => e.TX_RPRTNG_RQRMNT_DSCR).HasColumnType("text");

                entity.HasOne(d => d.ID_CASE_NMBRNavigation)
                    .WithMany(p => p.REPORTING)
                    .HasForeignKey(d => d.ID_CASE_NMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FRPRT01");
            });

            modelBuilder.Entity<REQUEST_AUTHORIZITION>(entity =>
            {
                entity.HasKey(e => e.ID_USER_NAME)
                    .IsClustered(false);

                entity.Property(e => e.ID_USER_NAME)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_CNTY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_DSPSTN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_PAYROLL)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_SUPERVISOR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_FIRST)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_LAST)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_PHONE)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_DSPSTN).HasColumnType("text");
            });

            modelBuilder.Entity<RESOURCE>(entity =>
            {
                entity.HasKey(e => e.ID_RSRC)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_MMBR, "FRINF01_FK");

                entity.HasIndex(e => e.ID_RSRC_CODE, "FRSIN01_FK");

                entity.Property(e => e.AM_RSRC_INCM).HasColumnType("money");

                entity.Property(e => e.AM_RSRC_VALUE).HasColumnType("money");

                entity.Property(e => e.AM_TRST_INTRST).HasColumnType("money");

                entity.Property(e => e.AM_WTHDRWL_PNLTY).HasColumnType("money");

                entity.Property(e => e.CD_MONTH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_CHLD_TRUST_FUND)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_CRT_ORDRD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_EXCLD_RSRC)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_JNT_ACCT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_RCVNG_TRUST_INTRST)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_TRUST_ACCSSBL)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_WTHDRWL_PNLTY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_FRQNCY_INTRST).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.NM_BANK_INSTTTN)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_JNT_MMBR_FRST)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_JNT_MMBR_LST)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_JNT_MMBR_MDL)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_JNT_MMBR_SFX)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_SRC_LCTN)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_ACCT)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_VRFCTN_RSRC)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')");

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.RESOURCE)
                    .HasForeignKey(d => d.ID_MMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FRSIN02");

                entity.HasOne(d => d.ID_RSRC_CODENavigation)
                    .WithMany(p => p.RESOURCE)
                    .HasForeignKey(d => d.ID_RSRC_CODE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FRSIN01");
            });

            modelBuilder.Entity<RESTORATION>(entity =>
            {
                entity.HasKey(e => e.ID_RSTRTN)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_RSTRTN_RSN, "FRSTN01_FK");

                entity.HasIndex(e => e.ID_CASE_NMBR, "FRSTN02_FK");

                entity.Property(e => e.AM_RSTRTN).HasColumnType("money");

                entity.Property(e => e.DT_RSTRTN).HasColumnType("datetime");

                entity.Property(e => e.ID_RSTRTN_RSN).HasColumnType("numeric(2, 0)");

                entity.HasOne(d => d.ID_CASE_NMBRNavigation)
                    .WithMany(p => p.RESTORATION)
                    .HasForeignKey(d => d.ID_CASE_NMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FRSTN02");

                entity.HasOne(d => d.ID_RSTRTN_RSNNavigation)
                    .WithMany(p => p.RESTORATION)
                    .HasForeignKey(d => d.ID_RSTRTN_RSN)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FRSTN01");
            });

            modelBuilder.Entity<ROOM>(entity =>
            {
                entity.HasKey(e => e.ID_ROOM);

                entity.Property(e => e.AM_ROOM_PAY).HasColumnType("money");

                entity.Property(e => e.CD_MONTH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_FRQNCY_ROOM_PAY).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.TX_VRFCTN_ROOM)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')");

                entity.HasOne(d => d.ID_EMPLYMNTNavigation)
                    .WithMany(p => p.ROOM)
                    .HasForeignKey(d => d.ID_EMPLYMNT)
                    .HasConstraintName("FROOM02");

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.ROOM)
                    .HasForeignKey(d => d.ID_MMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FROOM01");

                entity.HasOne(d => d.ID_RSRCNavigation)
                    .WithMany(p => p.ROOM)
                    .HasForeignKey(d => d.ID_RSRC)
                    .HasConstraintName("FROOM03");
            });

            modelBuilder.Entity<SANCTION>(entity =>
            {
                entity.HasKey(e => e.ID_SNCTN)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_REF_SNCTN_RSN, "FSCTN01_FK");

                entity.HasIndex(e => e.ID_MMBR, "FSCTN02_FK");

                entity.Property(e => e.DT_COMPLYOREXEMPT).HasColumnType("datetime");

                entity.Property(e => e.DT_SNCTN_END).HasColumnType("datetime");

                entity.Property(e => e.DT_SNCTN_STRT).HasColumnType("datetime");

                entity.Property(e => e.ID_REF_SNCTN_RSN).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.ID_WRKR_RMNDR).HasDefaultValueSql("((0))");

                entity.Property(e => e.NO_SNCTN).HasColumnType("numeric(1, 0)");

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.SANCTION)
                    .HasForeignKey(d => d.ID_MMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FSCTN02");

                entity.HasOne(d => d.ID_REF_SNCTN_RSNNavigation)
                    .WithMany(p => p.SANCTION)
                    .HasForeignKey(d => d.ID_REF_SNCTN_RSN)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FSCTN01");
            });

            modelBuilder.Entity<SCI2SYNCH>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.AD_CITY_STATE)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AD_MLNG_STREET1)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.AD_MLNG_STREET2)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.AD_ZIP4)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.AD_ZIP5)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_ADJSTD_INCM)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_CHILD_SPPRT_PAID)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_CLAIM_CLLCTN)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_CURR_MM_ALLMNT)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDNT_CARE)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_10)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_11)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_12)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_13)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_14)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_15)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_16)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_17)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_18)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_19)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_20)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_21)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_22)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_23)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_24)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_25)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_26)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_27)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_28)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_4)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_5)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_6)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_7)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_8)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_NM_INCM_9)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_10)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_11)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_12)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_13)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_14)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_15)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_16)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_17)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_18)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_19)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_20)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_21)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_22)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_23)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_24)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_25)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_26)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_27)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_28)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_4)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_5)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_6)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_7)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_8)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_CS_PM_INCM_9)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_10)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_11)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_12)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_13)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_14)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_15)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_16)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_17)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_18)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_19)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_20)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_21)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_22)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_23)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_24)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_25)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_26)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_27)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_28)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_4)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_5)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_6)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_7)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_8)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_ERND_INCM_9)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_10)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_11)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_12)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_13)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_14)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_15)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_16)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_17)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_18)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_19)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_20)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_21)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_22)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_23)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_24)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_25)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_26)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_27)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_28)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_4)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_5)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_6)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_7)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_8)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_MDCR_PREMIUM_9)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_10)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_11)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_12)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_13)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_14)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_15)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_16)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_17)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_18)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_19)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_20)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_21)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_22)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_23)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_24)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_25)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_26)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_27)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_28)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_4)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_5)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_6)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_7)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_8)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_OTHR_INCM_9)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_10)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_11)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_12)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_13)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_14)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_15)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_16)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_17)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_18)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_19)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_20)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_21)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_22)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_23)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_24)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_25)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_26)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_27)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_28)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_4)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_5)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_6)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_7)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_8)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_PA_INCM_9)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_10)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_11)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_12)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_13)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_14)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_15)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_16)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_17)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_18)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_19)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_20)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_21)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_22)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_23)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_24)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_25)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_26)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_27)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_28)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_4)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_5)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_6)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_7)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_8)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSA_INCM_9)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_1)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_10)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_11)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_12)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_13)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_14)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_15)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_16)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_17)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_18)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_19)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_2)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_20)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_21)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_22)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_23)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_24)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_25)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_26)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_27)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_28)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_3)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_4)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_5)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_6)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_7)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_8)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_DPNDT_SSI_VA_INCM_9)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_EXCSS_SHLTR)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_EXCSS_SHLTR_DEDUCT)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_FS_ALLTMNT)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_GROSS_INCM)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_GROSS_INCM_TSTD)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_GROSS_MDCL_EXPNS)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_HELD_MNTH_ALLMNT)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_INCM_DEDUCT)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_INIT_ISSUE)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_LAST_CERT)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_LAST_ISSUE)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_NET_ADJSTD_INCM)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_NET_ERND_INCM)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_NET_INCM_TSTD)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_OLD_ALLTMNT)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_OTHR_EXPNS)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.AM_OTHR_INCM)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_RATE_RDCTN)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_REAL_ESTATE_TAX)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.AM_RENT_MRTGG)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.AM_REPLACE_FS)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_RSRC)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_RSTRTN_RETRO_ADJ)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_RSTRTN_RETRO_RSN)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.AM_RTRN_FS)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_STNDRD_DEDUCT)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_THRFTY_FOOD_PLAN)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_TTL_ERND_INCM)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_TTL_INSRNC)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.AM_TTL_SHLTR)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AM_UTLTS)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.BNFT_DELETE_IND)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_ADVCTN)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_AFTER_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_APPL_DEL_RSN)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_APPL_PRCSS_STD)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_CASE_STATUS)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_CHK_DIGIT)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_CLAIM)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_CNTY)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DOS)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDNDT_SSI_VA_INCM_TYPE_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_NM_INCM_TYPE_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_CS_PM_INCM_TYPE_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_ERND_INCM_TYPE_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_JOB_SRCH_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_MEDICARE_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_OTHR_INCM_TYPE_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_PA_INCM_TYPE_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_1)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_10)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_11)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_12)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_13)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_14)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_15)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_16)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_17)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_18)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_19)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_2)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_20)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_21)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_22)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_23)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_24)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_25)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_26)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_27)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_28)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_3)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_4)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_5)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_6)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_7)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_8)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RACE_9)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_RLTNSHP_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SEX_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_SSI_VA_INCM_TYPE_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_DPNDT_WORK_REG_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_HH_CASE_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_HH_RACE)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_HH_SEX)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_LANGUAGE_IND)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_MAIL_ISSUE)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_MR_STTS)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_NTC_IND)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_NTC_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_OFFICE)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_PPI_SITE)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CD_REISSUE_CARD_IND)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_REPLACE_FS_RSN)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_REVIEW_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_RTRN_FS_RSN)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_TRANS)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CD_UTLTY_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_10A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_11A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_12A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_13A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_14A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_15A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_1A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_2A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_3A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_4A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_5A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_6A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_7A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_8A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CHANGE_RSN_9A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.DT_APPL)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_BEGIN_CERT)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.DT_BNFT_DELETE)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_1)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_10)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_11)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_12)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_13)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_14)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_15)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_16)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_17)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_18)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_19)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_2)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_20)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_21)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_22)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_23)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_24)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_25)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_26)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_27)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_28)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_3)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_4)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_5)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_6)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_7)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_8)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_DPNDT_BRTH_9)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_INITIAL_APPL)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_INITIAL_ISSUE)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_LAST_CERT)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.DT_LAST_ISSUE)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_PRORATED_BEN)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_REPLACE_FS)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.DT_REPLACE_FS_ENTRY)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_REVIEW)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.DT_RTRN_FS)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.DT_RTRN_FS_ENTRY)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DT_START_ISSUE)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.DT_TRANS_EFF)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.EBT_ACCNT_NMBR_IND)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_ADVCTN)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_10)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_11)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_12)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_13)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_14)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_15)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_16)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_17)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_18)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_19)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_20)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_21)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_22)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_23)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_24)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_25)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_26)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_27)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_28)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_3)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_4)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_5)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_6)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_7)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_8)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_DPNDT_VRFCTN_INDCTR_9)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_EBT_SWEEP)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FL_EXPEDITE)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ID_OPERATOR)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.ID_STATE_ISS)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ID_TRNSCTN)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.JUNK)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NM_AUTH_REP1)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.NM_AUTH_REP2)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_1)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_10)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_11)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_12)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_13)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_14)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_15)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_16)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_17)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_18)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_19)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_2)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_20)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_21)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_22)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_23)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_24)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_25)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_26)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_27)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_28)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_3)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_4)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_5)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_6)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_7)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_8)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_DPNDT_9)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NM_HH)
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.NO_CASE)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_10)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_11)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_12)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_13)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_14)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_15)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_16)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_17)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_18)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_19)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_2)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_20)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_21)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_22)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_23)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_24)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_25)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_26)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_27)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_28)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_3)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_4)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_5)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_6)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_7)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_8)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_CS_9)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_1)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_10)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_11)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_12)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_13)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_14)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_15)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_16)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_17)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_18)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_19)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_2)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_20)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_21)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_22)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_23)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_24)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_25)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_26)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_27)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_28)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_3)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_4)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_5)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_6)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_7)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_8)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_MMBR_9)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_1)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_10)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_11)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_12)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_13)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_14)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_15)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_16)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_17)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_18)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_19)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_2)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_20)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_21)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_22)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_23)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_24)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_25)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_26)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_27)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_28)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_3)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_4)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_5)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_6)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_7)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_8)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_CASE_9)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_1)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_10)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_11)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_12)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_13)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_14)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_15)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_16)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_17)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_18)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_19)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_2)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_20)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_21)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_22)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_23)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_24)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_25)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_26)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_27)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_28)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_3)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_4)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_5)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_6)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_7)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_8)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_PA_FILE_9)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_1)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_10)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_11)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_12)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_13)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_14)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_15)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_16)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_17)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_18)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_19)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_2)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_20)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_21)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_22)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_23)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_24)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_25)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_26)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_27)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_28)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_3)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_4)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_5)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_6)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_7)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_8)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_DPNDT_SSN_9)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NO_EBT_ACCNT)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.NO_HH)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_HH_MMBR_INCLD)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NO_HH_PHONE)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NO_TEMP_WORK)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.NO_WRKR)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.NO_X_REF)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.REPLACED_IDS)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.RESIDING_CNTY)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.RESIDING_OFFICE)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.STOLEN_IDS)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.TRANS_EFF_TIME)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.TX_CLAIM_LOG_DATA)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UPDATE_COUNT)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("UPDATE-COUNT");
            });

            modelBuilder.Entity<SCI2_CASE_DATA>(entity =>
            {
                entity.HasKey(e => e.ID_SCI2_CASE_DATA);

                entity.Property(e => e.ADJ_INC)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.AM_ALLOTMENT)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.AM_COMBINED)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.AM_CS_EXPENSE)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.AM_DEP_CARE)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.AM_EARNED)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.AM_ISSUE)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.AM_MED_EXP)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.AM_OTHER_EXP)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.AM_PROP_INS)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.AM_PROP_TAX)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.AM_RECOUP)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.AM_RENT_MORT)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.AM_RESOURCE)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.AM_RETRO_RESTORE)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.AM_UNEARND)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.AM_UTILITY)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CASE_REVIEW_RSN)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CASE_XREF)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CD_ADVRS_GUARD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CD_CLAIM)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_CTY_OFF)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_CTY_OFF_RESIDING)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_EXPEDITE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CD_HH_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_ISSUE_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CD_LANGUAGE_INDCTR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_NTC_TYPE_IND)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CD_PAST_DUE_RSN)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_PRCSSN_STNDRD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CD_REC_TYPE)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_RJCTN_CLSR)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CD_RPRTNG_RQRMNT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_RTR_RST_REASON)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_TRANSACTION)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_UTIL_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.DT_APPLD)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(((1)/(1))/(1900))")
                    .IsFixedLength();

                entity.Property(e => e.DT_CASE_REVIEW)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.DT_CERT_END)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.DT_CERT_STRT)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.DT_ISSUE)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.DT_STRT_ISSNC)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.DT_TRANSACTION)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.DT_TRIAL_BUDGET)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EXC_2040)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.FL_EBT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.GROSS_INCOME_TESTED)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.NET_INC)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.NET_INCOME_TESTED)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.NM_AUTH_REP)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.NM_EBT_REP)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.NM_HOH)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_CASE).HasColumnType("numeric(9, 0)");

                entity.Property(e => e.NO_CASE_CHKDGT).HasColumnType("numeric(1, 0)");

                entity.Property(e => e.NO_HOME_TEL)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.NO_TMP_WRKR_NMBR)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.NO_WRKR_NMBR)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.RATE_REDUC)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.SHL_DED)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.STND_DED)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.TFP)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.TOT_SHL)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.TXT_ZIP)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.TX_ADDRESS)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.TX_CITY_STATE)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();
            });

            modelBuilder.Entity<SCI2_ERRORS>(entity =>
            {
                entity.HasKey(e => e.ID_SCI2_ERROR)
                    .HasName("PK_SCI2_ERROR")
                    .IsClustered(false);

                entity.Property(e => e.CD_ERROR)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_RJCTN_CLSR)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_SCI2_ERROR)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_ERROR).HasColumnType("datetime");

                entity.Property(e => e.FL_CASE_LVL)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_CASE).HasColumnType("numeric(9, 0)");

                entity.Property(e => e.NO_SSN)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_WRKR_NMBR)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.CD_SCI2_ERRORNavigation)
                    .WithMany(p => p.SCI2_ERRORS)
                    .HasForeignKey(d => d.CD_SCI2_ERROR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("RSCER01");
            });

            modelBuilder.Entity<SCI2_ISSUNCE>(entity =>
            {
                entity.HasKey(e => e.ISS_ID);

                entity.HasIndex(e => e.ISS_NO_CASE, "ISS_NO_CASE");

                entity.Property(e => e.ISS_ID).HasDefaultValueSql("(newid())");

                entity.Property(e => e.ISS_AGED_CENTS)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ISS_AMT)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.ISS_BEN_AVAIL_DT)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.ISS_COUNTY)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ISS_HH_MEM_INCLUDED)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ISS_INITIAL_AMT)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.ISS_MAIL_ISSUE_CODE)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ISS_NO_CASE)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.ISS_OFF_CD)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ISS_OPERATOR_ID)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.ISS_PPI_SITE)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ISS_RECOUP_AMT)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.ISS_RESTOR_AMT)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.ISS_RESTOR_REASON)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ISS_RESTOR-REASON");

                entity.Property(e => e.ISS_SEQUENCE_NO)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ISS_ST_ISS_ID)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("ISS_ST-ISS_ID");

                entity.Property(e => e.ISS_TIME)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.ISS_TRAN_DT)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.ISS_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ISS_WORKER_NO)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.NEW_FIELDS)
                    .HasMaxLength(55)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SCI2_MMBR_DATA>(entity =>
            {
                entity.HasKey(e => e.ID_SCI2_MMBR_DATA);

                entity.Property(e => e.AM_CS_PAID)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.AM_CS_RCVD)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.AM_EARNED_INC)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.AM_MEDICARE)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.AM_PA)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.AM_SSA)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.AM_SSI_VA)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.AM_UNERND_INC)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CD_CERT_ELIG)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CD_CS_PAID_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CD_CS_RCVD_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CD_EARNED_INC_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CD_MEDICARE_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CD_PA_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CD_RACE)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_REC_TYPE)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CD_SEX)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_SSI_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CD_UNERND_INC_TYPE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CD_WORK_REG)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CHILD_SUPPORT_NBR)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.DT_DOB)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ENUM)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.NM_DEPENDENT)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_SSN)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.PA_CASE_NBR)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.PA_FILE_NBR)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();
            });

            modelBuilder.Entity<SECURITY>(entity =>
            {
                entity.HasKey(e => e.ID_USER)
                    .IsClustered(false);

                entity.Property(e => e.ID_USER)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_CNTY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_HOME_CNTY)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')")
                    .IsFixedLength();

                entity.Property(e => e.CD_PAYROLL)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("SSN of OACIS User");

                entity.Property(e => e.CD_PSSWRD)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')")
                    .IsFixedLength();

                entity.Property(e => e.CD_ROLE)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CD_WRKR_NMBR)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')")
                    .IsFixedLength();

                entity.Property(e => e.DT_PSSWRD).HasColumnType("datetime");

                entity.Property(e => e.FL_ACTIVE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_ADDI)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('N')")
                    .IsFixedLength();

                entity.Property(e => e.FL_DSNAP)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_NEWUSER)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_SUPERVISOR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_TEST)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_WF)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NM_FULL_NAME)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_COMMENT)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<SHELTER_EXPENSE>(entity =>
            {
                entity.HasKey(e => e.ID_SHLTR_EXPNS)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_SHLTR_EXPNS_TYPE, "FRSHE01_FK");

                entity.HasIndex(e => new { e.ID_MMBR1, e.ID_MMBR2 }, "_dta_index_SHELTER_EXPENSE_c_5_846014145__K2_K3")
                    .IsClustered();

                entity.Property(e => e.AM_ACTL_SHLTR_EXPNS).HasColumnType("money");

                entity.Property(e => e.AM_SHLTR_EXPNS_MNTHLY).HasColumnType("money");

                entity.Property(e => e.CD_MONTH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_ASSSTD_BY_OTHR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_NM_OUTSIDE_HH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_SHLTR_PASSTHRU)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_FRQNCY_SHLTR_EXPNS).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.TX_VRFCTN_SHLTR_EXPNS)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')");

                entity.HasOne(d => d.ID_MMBR1Navigation)
                    .WithMany(p => p.SHELTER_EXPENSEID_MMBR1Navigation)
                    .HasForeignKey(d => d.ID_MMBR1)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FSHEX01");

                entity.HasOne(d => d.ID_MMBR2Navigation)
                    .WithMany(p => p.SHELTER_EXPENSEID_MMBR2Navigation)
                    .HasForeignKey(d => d.ID_MMBR2)
                    .HasConstraintName("FSHEX05");

                entity.HasOne(d => d.ID_OWNRSHPNavigation)
                    .WithMany(p => p.SHELTER_EXPENSE)
                    .HasForeignKey(d => d.ID_OWNRSHP)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FSHEX02");

                entity.HasOne(d => d.ID_SHLTR_DWELLNG_TYPENavigation)
                    .WithMany(p => p.SHELTER_EXPENSE)
                    .HasForeignKey(d => d.ID_SHLTR_DWELLNG_TYPE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FSHEX03");

                entity.HasOne(d => d.ID_SHLTR_EXPNS_TYPENavigation)
                    .WithMany(p => p.SHELTER_EXPENSE)
                    .HasForeignKey(d => d.ID_SHLTR_EXPNS_TYPE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FSHEX04");
            });

            modelBuilder.Entity<SHELTER_EXPENSE_OTHER_PAYER>(entity =>
            {
                entity.HasKey(e => e.ID_SHLTR_EXPNS_OTHR_PAYER);

                entity.Property(e => e.AM_SHLTR_EXPNS_OTHR_PAYER).HasColumnType("money");

                entity.Property(e => e.DT_SHLTR_EXPNS_OTHR_PAYER).HasColumnType("datetime");

                entity.Property(e => e.FL_OUTSIDE_RSDNT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_PAY_ALL_SHLTR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_SHLTR_EXPNS_PAY_MMBR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_FRQNCY_SHLTR_EXPNS_OP).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.TX_VRFCTN_SHLTR_EXPNS_OP)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')");

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.SHELTER_EXPENSE_OTHER_PAYER)
                    .HasForeignKey(d => d.ID_MMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FOSHL03");

                entity.HasOne(d => d.ID_SHLTR_EXPNSNavigation)
                    .WithMany(p => p.SHELTER_EXPENSE_OTHER_PAYER)
                    .HasForeignKey(d => d.ID_SHLTR_EXPNS)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FOSHL01");
            });

            modelBuilder.Entity<SMRY_MEDICAL_EXPENSE>(entity =>
            {
                entity.HasKey(e => e.ID_SMRY_MDCL_EXPNS)
                    .IsClustered(false);

                entity.Property(e => e.AM_MDCL_DDCTN).HasColumnType("money");

                entity.Property(e => e.AM_TTL_MDCL_EXPNS).HasColumnType("money");

                entity.Property(e => e.NO_TTL_MEALS).HasColumnType("numeric(2, 0)");
            });

            modelBuilder.Entity<STRIKE>(entity =>
            {
                entity.HasKey(e => e.ID_STRKR)
                    .IsClustered(false);

                entity.Property(e => e.AM_STRKPAY_MNTHLY).HasColumnType("money");

                entity.Property(e => e.AM_STRK_PAY).HasColumnType("money");

                entity.Property(e => e.CD_MONTH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_STRK_END).HasColumnType("datetime");

                entity.Property(e => e.DT_STRK_STRT).HasColumnType("datetime");

                entity.Property(e => e.FL_ELGBL_FS_PRIOR_STRK)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_FRQNCY_PAY_STRK).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.TX_VRFCTN_STRK)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')");

                entity.HasOne(d => d.ID_EMPLYMNTNavigation)
                    .WithMany(p => p.STRIKE)
                    .HasForeignKey(d => d.ID_EMPLYMNT)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FEMST01");
            });

            modelBuilder.Entity<STTS_REPORTING>(entity =>
            {
                entity.HasKey(e => new { e.CD_CNTY, e.DT_STTS_DATE });

                entity.Property(e => e.CD_CNTY).HasColumnType("numeric(3, 0)");

                entity.Property(e => e.DT_STTS_DATE).HasColumnType("datetime");
            });

            modelBuilder.Entity<STTS_REPORTING_DSNAP>(entity =>
            {
                entity.HasKey(e => new { e.CD_CNTY, e.DT_STTS_DATE, e.ID_DISASTER })
                    .HasName("PK__STTS_REPORTING_D__21AD7A6A");

                entity.Property(e => e.CD_CNTY).HasColumnType("numeric(3, 0)");

                entity.Property(e => e.DT_STTS_DATE).HasColumnType("datetime");
            });

            modelBuilder.Entity<STUDENT>(entity =>
            {
                entity.HasKey(e => e.ID_STDNT)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_MMBR, "FSTDN01_FK");

                entity.Property(e => e.CD_MONTH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_CHILD_CARE_PRVDR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_ELGBL_STDNT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_EMPLYD_PRTTM)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_FIT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_HGHR_LRNNG)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_JOBS_TRNNG)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_MEAL_TCKT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_OJT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_PLUS_50_MEALS_CVRD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_PRNT_OF_CHLD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_RCVNG_TANF)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_SNGL_PRNT_STDNT)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_TITLE_IV)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_WORK_STDY_PRGRM)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_VRFCTN_STUDENT)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')");

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.STUDENT)
                    .HasForeignKey(d => d.ID_MMBR)
                    .HasConstraintName("FSTDN01");
            });

            modelBuilder.Entity<TANF_MMBR_INCLUDED>(entity =>
            {
                entity.HasKey(e => e.ID_TANF_MMBR_INCLD)
                    .IsClustered(false);

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.TANF_MMBR_INCLUDED)
                    .HasForeignKey(d => d.ID_MMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FTANF02");

                entity.HasOne(d => d.ID_UNERND_INCMNavigation)
                    .WithMany(p => p.TANF_MMBR_INCLUDED)
                    .HasForeignKey(d => d.ID_UNERND_INCM)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FTANF01");
            });

            modelBuilder.Entity<TRIP>(entity =>
            {
                entity.HasKey(e => e.ID_TRIPS)
                    .IsClustered(false);

                entity.Property(e => e.AM_FLAT_FEE).HasColumnType("money");

                entity.Property(e => e.AM_PAY_MILES_MNTHLY).HasColumnType("money");

                entity.Property(e => e.FL_DRVS_SELF)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_PAY_FLAT_FEE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_PAY_PER_MILE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NO_MILES_PER_MNTH).HasColumnType("numeric(6, 0)");

                entity.HasOne(d => d.ID_PRVDR_NAMENavigation)
                    .WithMany(p => p.TRIP)
                    .HasForeignKey(d => d.ID_PRVDR_NAME)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FTRIP01");

                entity.HasOne(d => d.ID_REF_FDRL_MLG_RATENavigation)
                    .WithMany(p => p.TRIP)
                    .HasForeignKey(d => d.ID_REF_FDRL_MLG_RATE)
                    .HasConstraintName("FTRIP02");
            });

            modelBuilder.Entity<UA_EarnedIncomeByCase>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("UA_EarnedIncomeByCase");

                entity.Property(e => e.TOTAL_EARNED_INCOME).HasColumnType("money");
            });

            modelBuilder.Entity<UA_UnearnedIncomeByCase>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("UA_UnearnedIncomeByCase");

                entity.Property(e => e.TOTAL_UNEARNED_INCOME).HasColumnType("money");
            });

            modelBuilder.Entity<UNEARNED_INCOME>(entity =>
            {
                entity.HasKey(e => e.ID_UNERND_INCM)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_MMBR, "FUNIN03_FK");

                entity.HasIndex(e => e.ID_ME_OTHR_PAYER, "_dta_index_UNEARNED_INCOME_c_5_46011295__K5")
                    .IsClustered();

                entity.Property(e => e.AM_UNERND_MNTHLY).HasColumnType("money");

                entity.Property(e => e.AM_UNERND_VALUE1).HasColumnType("money");

                entity.Property(e => e.AM_UNERND_VALUE2).HasColumnType("money");

                entity.Property(e => e.CD_MONTH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_RCVD).HasColumnType("datetime");

                entity.Property(e => e.FL_DSBLTY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_FRQNCY_RECPT).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.TX_VRFCTN_UNERND_INCM)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')");

                entity.HasOne(d => d.ID_CS_AMNTNavigation)
                    .WithMany(p => p.UNEARNED_INCOME)
                    .HasForeignKey(d => d.ID_CS_AMNT)
                    .HasConstraintName("FUNIN05");

                entity.HasOne(d => d.ID_DC_OTHR_PAYNavigation)
                    .WithMany(p => p.UNEARNED_INCOME)
                    .HasForeignKey(d => d.ID_DC_OTHR_PAY)
                    .HasConstraintName("FUNIN02");

                entity.HasOne(d => d.ID_INSRNC_OTHR_PAYERNavigation)
                    .WithMany(p => p.UNEARNED_INCOME)
                    .HasForeignKey(d => d.ID_INSRNC_OTHR_PAYER)
                    .HasConstraintName("FUNIN08");

                entity.HasOne(d => d.ID_ME_OTHR_PAYERNavigation)
                    .WithMany(p => p.UNEARNED_INCOME)
                    .HasForeignKey(d => d.ID_ME_OTHR_PAYER)
                    .HasConstraintName("FUNIN06");

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.UNEARNED_INCOME)
                    .HasForeignKey(d => d.ID_MMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FUNIN03");

                entity.HasOne(d => d.ID_REF_UNERND_SUBTYPENavigation)
                    .WithMany(p => p.UNEARNED_INCOME)
                    .HasForeignKey(d => d.ID_REF_UNERND_SUBTYPE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FUNIN01");

                entity.HasOne(d => d.ID_SHLTR_EXPNS_OTHR_PAYERNavigation)
                    .WithMany(p => p.UNEARNED_INCOME)
                    .HasForeignKey(d => d.ID_SHLTR_EXPNS_OTHR_PAYER)
                    .HasConstraintName("FUNIN04");

                entity.HasOne(d => d.ID_UTLTY_EXPNS_OTHR_PAYERNavigation)
                    .WithMany(p => p.UNEARNED_INCOME)
                    .HasForeignKey(d => d.ID_UTLTY_EXPNS_OTHR_PAYER)
                    .HasConstraintName("FUNIN07");
            });

            modelBuilder.Entity<UNEARNED_PAYER>(entity =>
            {
                entity.HasKey(e => e.ID_UNERND_PAYER)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_UNERND_INCM, "_dta_index_UNEARNED_PAYER_c_5_784214044__K2")
                    .IsClustered();

                entity.Property(e => e.NM_UNERND_PAYER)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_REF_UNERND_PAYER_TYPENavigation)
                    .WithMany(p => p.UNEARNED_PAYER)
                    .HasForeignKey(d => d.ID_REF_UNERND_PAYER_TYPE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FUNPY02");

                entity.HasOne(d => d.ID_UNERND_INCMNavigation)
                    .WithMany(p => p.UNEARNED_PAYER)
                    .HasForeignKey(d => d.ID_UNERND_INCM)
                    .HasConstraintName("FUNPY01");
            });

            modelBuilder.Entity<UPDATE_NOTICE_TYPE>(entity =>
            {
                entity.HasKey(e => e.ID_UPDT_NTC)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_CASE_NMBR, "FUPDT01_FK");

                entity.Property(e => e.CD_LANGUAGE_INDCTR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_UPDT_NTC).HasColumnType("datetime");

                entity.HasOne(d => d.ID_CASE_NMBRNavigation)
                    .WithMany(p => p.UPDATE_NOTICE_TYPE)
                    .HasForeignKey(d => d.ID_CASE_NMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FUPDT02");

                entity.HasOne(d => d.ID_REF_NTC_TYPENavigation)
                    .WithMany(p => p.UPDATE_NOTICE_TYPE)
                    .HasForeignKey(d => d.ID_REF_NTC_TYPE)
                    .HasConstraintName("FUPDT01");
            });

            modelBuilder.Entity<UTILITY_EXPENSE>(entity =>
            {
                entity.HasKey(e => e.ID_UTLTY_EXPNS)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_MMBR1, "FUTEX01_FK");

                entity.HasIndex(e => e.ID_UTLTY_TYPE, "FUTEX02_FK");

                entity.Property(e => e.AM_ACTL_UTLTY_AVG).HasColumnType("money");

                entity.Property(e => e.AM_UTLTY_EXPNS).HasColumnType("money");

                entity.Property(e => e.AM_UTLTY_EXPNS_MNTHLY).HasColumnType("money");

                entity.Property(e => e.AM_UTLTY_EXPNS_TTL_ALLWBL).HasColumnType("money");

                entity.Property(e => e.CD_MONTH)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DT_LIHEAP_RCVD).HasColumnType("datetime");

                entity.Property(e => e.FL_AC_BLLD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_ASSSTD_BY_OTHR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_BUA)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_HTNG_BLLD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_LIHEAP)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_NM_OUTSIDE_HH_UE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_PHONE_STNDRD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_SUA_ELGBL)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_UTLTY_PASSTHRU)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_FRQNCY_UTLTY_EXPNS).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.ID_UTLTY_DDCTN).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.TX_VRFCTN_UTLTY_EXPNS)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')");

                entity.HasOne(d => d.ID_MMBR1Navigation)
                    .WithMany(p => p.UTILITY_EXPENSEID_MMBR1Navigation)
                    .HasForeignKey(d => d.ID_MMBR1)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FUTEX01");

                entity.HasOne(d => d.ID_MMBR2Navigation)
                    .WithMany(p => p.UTILITY_EXPENSEID_MMBR2Navigation)
                    .HasForeignKey(d => d.ID_MMBR2)
                    .HasConstraintName("FUTEX03");

                entity.HasOne(d => d.ID_UTLTY_DDCTNNavigation)
                    .WithMany(p => p.UTILITY_EXPENSE)
                    .HasForeignKey(d => d.ID_UTLTY_DDCTN)
                    .HasConstraintName("FUTEX04");

                entity.HasOne(d => d.ID_UTLTY_TYPENavigation)
                    .WithMany(p => p.UTILITY_EXPENSE)
                    .HasForeignKey(d => d.ID_UTLTY_TYPE)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FUTEX02");
            });

            modelBuilder.Entity<UTILITY_EXPENSE_OTHER_PAYER>(entity =>
            {
                entity.HasKey(e => e.ID_UTLTY_EXPNS_OTHR_PAYER)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_MMBR, "_dta_index_UTILITY_EXPENSE_OTHER_PAYER_c_5_902346329__K3")
                    .IsClustered();

                entity.Property(e => e.AM_UTLTY_EXPNS_OTHR_PAYER).HasColumnType("money");

                entity.Property(e => e.DT_UTLTY_EXPNS_OTHR_PAYER).HasColumnType("datetime");

                entity.Property(e => e.FL_ALLPART_PAY_UTLTY_EXPNS)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_OUTSIDE_RSDNT_UE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_UTLTY_PAY_MMBR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_FRQNCY_UTLTY_EXPNS_OP).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.TX_VRFCTN_UTLTY_EXPNS_OP)
                    .HasColumnType("text")
                    .HasDefaultValueSql("('')");

                entity.HasOne(d => d.ID_MMBRNavigation)
                    .WithMany(p => p.UTILITY_EXPENSE_OTHER_PAYER)
                    .HasForeignKey(d => d.ID_MMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FUTOP01");

                entity.HasOne(d => d.ID_UTLTY_EXPNSNavigation)
                    .WithMany(p => p.UTILITY_EXPENSE_OTHER_PAYER)
                    .HasForeignKey(d => d.ID_UTLTY_EXPNS)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FUTOP02");
            });

            modelBuilder.Entity<WAIVE_ADVERSE_ACTION>(entity =>
            {
                entity.HasKey(e => e.ID_WAIVE_ADVRS_ACTN)
                    .IsClustered(false);

                entity.HasIndex(e => e.ID_CASE_NMBR, "FADAC01_FK");

                entity.Property(e => e.DT_ADVRS_ACTN).HasColumnType("datetime");

                entity.Property(e => e.FL_WAIVE_ADVRS_ACTN_10DAY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.ID_CASE_NMBRNavigation)
                    .WithMany(p => p.WAIVE_ADVERSE_ACTION)
                    .HasForeignKey(d => d.ID_CASE_NMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FADAC02");

                entity.HasOne(d => d.ID_REF_WAIVE_ADVRS_ACTNNavigation)
                    .WithMany(p => p.WAIVE_ADVERSE_ACTION)
                    .HasForeignKey(d => d.ID_REF_WAIVE_ADVRS_ACTN)
                    .HasConstraintName("FADAC01");
            });

            modelBuilder.Entity<WORKER_REMINDER>(entity =>
            {
                entity.HasKey(e => e.ID_WRKR_RMNDR)
                    .IsClustered(false);

                entity.Property(e => e.DT_RMNDR).HasColumnType("datetime");

                entity.Property(e => e.FL_ADVRS_ACTN_RMNDR)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FL_INACTIVE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ID_USER)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TX_RMNDR_DSCR).HasColumnType("text");

                entity.Property(e => e.TX_RMNDR_SBJCT).HasColumnType("text");

                entity.HasOne(d => d.ID_CASE_NMBRNavigation)
                    .WithMany(p => p.WORKER_REMINDER)
                    .HasForeignKey(d => d.ID_CASE_NMBR)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FRMDR02");

                entity.HasOne(d => d.ID_USERNavigation)
                    .WithMany(p => p.WORKER_REMINDER)
                    .HasForeignKey(d => d.ID_USER)
                    .HasConstraintName("FRMDR01");
            });

            modelBuilder.Entity<manycolumns>(entity =>
            {
                entity.HasKey(e => e.x)
                    .HasName("PK__manycolumns__6DE2F24A");

                entity.Property(e => e.x).ValueGeneratedNever();
            });

            OnModelCreatingGeneratedFunctions(modelBuilder);
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}